{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "[E.F. Baulin, D.R. Bohdan, D. Kowalski, M. Serwatka, J. \u015awierczy\u0144ska, Z. \u017byra, J.M. Bujnicki, (2024) ARTEM: a method for RNA tertiary motif identification with backbone permutations, and its example application to kink-turn-like motifs. bioRxiv. DOI: 10.1101/2024.05.31.596898](https://doi.org/10.1101/2024.05.31.596898)\n\n[D.R. Bohdan, V.V. Voronina, J.M. Bujnicki, E.F. Baulin (2023) A comprehensive survey of long-range tertiary interactions and motifs in non-coding RNA structures. Nucleic Acids Research. gkad605. DOI: 10.1093/nar/gkad605](https://doi.org/10.1093/nar/gkad605)\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/david-bogdan-r/ARTEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "David Bogdan, *e-mail: <bogdan.d@phystech.edu>*\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-01T10:26:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T16:25:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9455932539133073,
      "result": {
        "original_header": "ARTEM",
        "type": "Text_excerpt",
        "value": "**A**ligning **R**NA **TE**rtiary **M**otifs (ARTEM) is a tool for superimposing arbitrary RNA spatial structures\n \n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9612225572570785,
      "result": {
        "original_header": "How ARTEM works",
        "type": "Text_excerpt",
        "value": "ARTEM reads a reference and a query structure from the specified coordinate files in PDB or in mmCIF format, and, by default, prints a sorted list of their local structural superpositions. The user can choose to save the superimposed versions of the query structure into a specified folder in PDB or in mmCIF format. Each of the saved files will include three models: (1) the entire (according to the \"qres\" parameter) superimposed query structure, (2) the subset of the reference structure residues used for the superposition, and (3) the subset of the query structure residues used for the superposition. By default, ARTEM reads the entire first models of the input files. \nThe ARTEM algorithm works as follows. For each possible single-residue matching seed between the reference and the query structures (as defined by \"rseed\" and \"qseed\" parameters) ARTEM superimposes the structures based on the 5-atom representations of the two residues. Then, ARTEM searches for a subset of the reference and query residues that are mutually closest to each other in the current superposition. Finally, ARTEM performs a second superposition using the subset of the mutually closest residues as the assigned residue-residue matchings. Finally, ARTEM prints a sorted list of the produced superpositions to stdout. For each superposition the output includes its ID, RMSD, SIZE, RMSD/SIZE ratio, the list of generative single-residue seeds (PRIM), and the list of the residue-residue matchings (SCND).\n \n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8411500958197252,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "    r=FILENAME/FOLDER/PDB-ENTRY [REQUIRED OPTION]\n        Path to a reference structure in PDB/mmCIF format. For faster \n        performance, it's advised to specify the largest of the two structures \n        as the reference structure.\n        If a folder or a mask is specified instead, ARTEM will process \n        all the PDB/mmCIF files (according to the rformat parameter) \n        in that folder/mask as a reference structure one by one.\n        If a 4-character PDB entry is specified, ARTEM will download the\n        structure from RCSB PDB. \n    rformat=KEYWORD, qformat=KEYWORD [DEFAULT: rformat=PDB,qformat=PDB] \n        The specification of the input coordinate file formats \n        (case-insensitive). By default, ARTEM tries to infer the format \n        from the extensions of the input filenames. \".pdb\", \".cif\", \n        and \".mmcif\" formats can be recognized (case-insensitive). In the case \n        of any other extension ARTEM will treat the file as the PDB-format \n        file by default. If the \"rformat\" (\"qformat\") parameter is specified \n        and it's either \"PDB\", \"CIF\", or \"MMCIF\" (case-insensitive), \n        ARTEM will treat the reference (query) coordinate file\n        as the specified format. \n    rmsdmin=FLOAT, rmsdmax=FLOAT [DEFAULT: rmsdmin=0,rmsdmax=1e10]\n        The specification of minimum and maximum RMSD thresholds. \n        ARTEM will print and save only the superpositions that satisfy \n        the specified thresholds.  \n    resrmsdmin=FLOAT, resrmsdmax=FLOAT [DEFAULT: resrmsdmin=0, resrmsdmax=1e10]\n        The specification of minimum and maximum per-residue RMSD threshold.\n        ARTEM will print and save only the superpositions that satisfy \n        the specified thresholds. \n    rseed=STRING, qseed=STRING [DEFAULT: rseed=rres,qseed=qres]\n        The specification of the reference and query residues that ARTEM can use\n        for single-residue matching seeds.\n        See the format description at the end of the OPTIONS section. \n    saveformat=KEYWORD [DEFAULT: saveformat=qformat]\n        The specification of the format of the output coordinate files. \n        By default, ARTEM will save the coordinate files in the same format \n        as the query input file. If the \"saveformat\" parameter is specified \n        and it's either \"PDB\", \"CIF\", or \"MMCIF\" (case-insensitive), ARTEM \n        will save the output coordinate files in the specified format. \n    sizemin=FLOAT, sizemax=FLOAT [DEFAULT: sizemin=1,sizemax=1e10]\n        The specification of minimum and maximum SIZE thresholds. \n        ARTEM will print and save only the superpositions that satisfy \n        the specified thresholds. If sizemin is set to zero, ARTEM will \n        output the dummy 0-size superpositions matching the reference \n        and query residues lacking the 5-atom representation specified. \n        The user can specify custom atom representations of any residues \n        via editing the lib/nar.py text file. \n    trim=BOOL [DEFAULT: trim=None]\n        When specified, for each subset of mutually closest residues ARTEM will \n        iteratively remove residues with the worst per-residue RMSD from the \n        subset one by one with the following re-superpositioning based on the \n        remaining residues of the subset until the specified thresholds for rmsdmax,\n        rmsdsizemax, resrmsdmax are reached or the subset size is less than sizemin. \n    threads=INT [DEFAULT: threads= CPU COUNT]\n        Number of CPUs to use. ARTEM multiprocessing is available only for \n        UNIX-like systems. \n    [#[INT]][/[STRING]][:[STRING][_INT[CHAR|_INT]] - The structure specification\n                                                     format. The \"res\" \n                                                     parameters can be defined \n                                                     with a number \n                                                     of specifications \n                                                     separated by spaces and \n                                                     enclosed in double quotes. \n            :STRING               == Residue type    \n            :_INT[CHAR]           == Residue number [with insertion code]\n            :_INT_INT             == Range of residue numbers \n        rres=\"#1/B:_-10_20 #1/A\"    - Consider the entire chain A from model 1 \n                                      and the range of chain B residues with \n                                      numbers from -10 to 20 from model 1 as \n                                      the reference structure.\n        qres=\"#\"                    - Consider all the residues from all \n                                      the models in the \"q\" file as \n                                      the query structure.\n        saveres=\"/C:_10_20 /C:_20A\" - Save the chain C residues with numbers \n                                      from 10 to 20 and the chain C residue \n                                      with number 20A (A is the insertion code).\n        rseed=:A                    - Use only the model 1 adenosines as the \n                                      single-residue seeds from the reference \n                                      structure.\n \n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/david-bogdan-r/ARTEM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "david-bogdan-r/ARTEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ARTEM"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "Clone the GitHub repository by typing\n\n    git clone https://github.com/david-bogdan-r/ARTEM.git\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9707508009468604,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "    q=FILENAME/FOLDER/PDB-ENTRY [REQUIRED OPTION]\n        Path to a query structure, the one that ARTEM superimposes to \n        the reference, in PDB/mmCIF format.\n        If a folder or a mask is specified instead, ARTEM will process \n        all the PDB/mmCIF files (according to the qformat parameter) \n        in that folder/mask as a query structure one by one.\n        If a 4-character PDB entry is specified, ARTEM will download the\n        structure from RCSB PDB. \n    rnosub=BOOL, qnosub=BOOL [DEFAULT: rnosub=False, qnosub=False]\n        Omit the sub-matches. If rnosub=True, ARTEM will not output the matches\n        representing reference residue subsets of any other match, i.e. only\n        the largest matches will be reported. Analogously if qnosub=True,\n        ARTEM will not report the matches that are query residue subsets of any\n        other match. \n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ARTEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "david-bogdan-r"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 58124,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "david-bogdan-r",
          "type": "User"
        },
        "date_created": "2024-05-22T14:01:55Z",
        "date_published": "2024-05-22T14:22:36Z",
        "description": "The release contains significant additions to ARTEM's functionality making it suitable for RNA tertiary motif search:\r\n\r\n- r/q arguments support specifying a folder or a mask to define a list of PDB/mmCIF files, or an identifier to load a structure from the RCSB PDB;\r\n- added rnosub/qnosub arguments to filter sub-matches;\r\n- added rrst/qrst arguments to apply additional restraints on the matches.\r\n\r\nSee README.md for more details.",
        "html_url": "https://github.com/david-bogdan-r/ARTEM/releases/tag/motifsearch",
        "name": "ARTEM version 2.0",
        "release_id": 156896850,
        "tag": "motifsearch",
        "tarball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/tarball/motifsearch",
        "type": "Release",
        "url": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/156896850",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/156896850",
        "zipball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/zipball/motifsearch"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "david-bogdan-r",
          "type": "User"
        },
        "date_created": "2024-04-26T12:13:05Z",
        "date_published": "2024-04-26T12:52:50Z",
        "description": "- handling \"revision\" sections of cif format",
        "html_url": "https://github.com/david-bogdan-r/ARTEM/releases/tag/handlecifrevision",
        "name": "ARTEM ver 1.01",
        "release_id": 152987962,
        "tag": "handlecifrevision",
        "tarball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/tarball/handlecifrevision",
        "type": "Release",
        "url": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/152987962",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/152987962",
        "zipball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/zipball/handlecifrevision"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "david-bogdan-r",
          "type": "User"
        },
        "date_created": "2023-04-20T12:05:43Z",
        "date_published": "2023-06-06T08:56:17Z",
        "description": "June 6, 2023",
        "html_url": "https://github.com/david-bogdan-r/ARTEM/releases/tag/ver1.0",
        "name": "ARTEM ver 1.0",
        "release_id": 107476754,
        "tag": "ver1.0",
        "tarball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/tarball/ver1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/107476754",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/107476754",
        "zipball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/zipball/ver1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "david-bogdan-r",
          "type": "User"
        },
        "date_created": "2022-11-01T13:24:47Z",
        "date_published": "2022-11-01T18:54:23Z",
        "description": "Initial bioRxiv submission",
        "html_url": "https://github.com/david-bogdan-r/ARTEM/releases/tag/biorxiv",
        "name": "Release 0.9",
        "release_id": 81701957,
        "tag": "biorxiv",
        "tarball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/tarball/biorxiv",
        "type": "Release",
        "url": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/81701957",
        "value": "https://api.github.com/repos/david-bogdan-r/ARTEM/releases/81701957",
        "zipball_url": "https://api.github.com/repos/david-bogdan-r/ARTEM/zipball/biorxiv"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "ARTEM requires four Python3 libraries to be installed:\n\n- numpy\n- pandas\n- requests\n- scipy\n\nTo install, type:\n\n    pip install -r requirements.txt\n\nARTEM was tested with two different Python3 environments:\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ubuntu 20.04",
        "parent_header": [
          "ARTEM",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- python==3.8\n- numpy==1.22.3\n- pandas==1.4.1\n- requests==2.31.0\n- scipy==1.8.0\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MacOS Sonoma 14.5",
        "parent_header": [
          "ARTEM",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- python==3.12\n- numpy==1.26.3\n- pandas==2.1.4\n- requests==2.31.0\n- scipy==1.11.4\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:39:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Time &amp; memory usage",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "The implementation with default parameters takes around one minute to run an entire 5,970-residue eukaryotic ribosome (PDB entry 7O7Y) against a 160-residue TPP riboswitch (PDB entry 2GDI) on 32 cores, taking under 2Gb RAM at peak on an AMD Ryzen 9 5950X machine with 128Gb RAM. On the same machine on 32 cores a run of a 2,828-residue LSU rRNA (PDB entry 1FFK) against itself requires 20 minutes in time and 70Gb of RAM.\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "    python3 artem.py r=FILENAME q=FILENAME [OPTIONS]\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage examples",
        "parent_header": [
          "ARTEM"
        ],
        "type": "Text_excerpt",
        "value": "    1) python3 artem.py r=examples/1ivs.cif  q=examples/1wz2.cif rres=/C qres=/C > output.txt\n\n    This command will write into \"output.txt\" file a sorted list of all local \n    structural superpositions between the C chains of 1IVS and 1WZ2 PDB entries \n    that are two tRNAs. The user can spot the three largest mathings of size 52. \n    Then the user can save the largest mathings only into \"result\" folder in \n    PDB format:\n\n    python3 artem.py r=examples/1ivs.cif  q=examples/1wz2.cif rres=/C qres=/C sizemin=52 saveto=result saveformat=pdb\n\n    As the result three files of three different matchings of 52 residues will \n    be saved in PDB format - 1wz2_1.pdb, 1wz2_2.pdb, 1wz2_3.pdb. The latter is\n    the superposition with the best RMSD. Each of the saved files lists three \n    structural models. The first model contains all \"qres\" residues \n    superimposed with the reference structure. The second model contains \n    the subset of the reference structure residues that were used \n    for the superposition, and the third model stores their counterpart \n    residues from the query structure. Then, the user can open the reference \n    file 1ivs.cif together with the first model of the file 1wz2_3.pdb in a 3D\n    visualization tool for visual examination of the best local superposition \n    of the two structures. The user can observe a good superposition \n    of the four standard tRNA helical regions.\n\n    2) python3 artem.py r=examples/motif10.pdb  q=examples/motif9.pdb rmsdsizemax=0.25\n\n    This command will output a sorted list of those local structural \n    superpositions between the two topologically different motifs of \n    10 and 9 residues respectively that have a ration RMSD/SIZE under 0.25.\n    The user can spot the only mathing of size 8 with RMSD of 1.713 angstroms.\n    Then the user can save the superposition into \"result\" folder \n    in CIF format:\n\n    python3 artem.py r=examples/motif10.pdb  q=examples/motif9.pdb rmsdsizemax=0.25 sizemin=8 saveto=result saveformat=cif \n\n    The only file will be saved named \"motif9_1.cif\". Then, the user \n    can open the reference file motif10.pdb together with the file \n    motif9_1.cif in a 3D visualization tool for visual examination. \n    The user can observe a good superposition of all the three stacked \n    base pairs. Simultaneously, two of the three A-minor-forming \n    adenosines have a counterpart residue.\n\n    3) python3 artem.py r=examples/test_data q=examples/motif10.pdb sizemin=9 saveto=result\n\n    Motif search example 1.\n    Report the matches of at least 9 residues between the query structure motif10.pdb and\n    all the pdb files in the examples/test_data folder. \n    Save the results under the result folder.\n    \n    4) python3 artem.py r=examples/test_data q=examples/motif10.pdb sizemin=9 qrst=\"/R:_151_153 |R| /R:_151_153 |strand|\"\n\n    Motif search example 2.\n    Report the matches between the query structure motif10.pdb and\n    all the pdb files in the examples/test_data folder, \n    where the query residues 151, 152, and 153 of chain R \n    match with a continuous strand of purines.\n"
      },
      "source": "https://raw.githubusercontent.com/david-bogdan-r/ARTEM/main/README.md",
      "technique": "header_analysis"
    }
  ]
}