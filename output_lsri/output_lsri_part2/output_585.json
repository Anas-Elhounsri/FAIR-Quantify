{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChenHuaLab/Beta-PSMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-11T06:45:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T15:49:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "APPENDIX I: Brief Description of the file out_beta.psmc",
        "type": "Text_excerpt",
        "value": "the \"TR\" line:  \\theta_0 \\rho_0\nthe \"MT\" line:\tmaximum 2N_0 coalescent time\nthe other lines: t_k_start t_k_end \\lambda_k \\alpha_k \\beta_k\n\n"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9413637526712422,
      "result": {
        "original_header": "APPENDIX II: Scaling the final output",
        "type": "Text_excerpt",
        "value": "The final output is scaled to the 2N_0. There are two ways of rescaling the time\nand the popuation size more meaningfully. \nwhere \\theta_0 is given at the 2nd column of \"TR\" lines, and s is the bin size\nwe use for generating the psmc-beta input. Knowing N_0, we can scale time to\ngenerations and relative population size to effective size by \nwhere t_k and \\lambda_k are given at the 2nd, 3rd and 4th columns of the other lines,\nrespectively. \nA problem with the above strategy is that we do not know a definite answer of\n\\mu and in fact it various with regions and mutation types. An alternative way\nis to use per-site pairwise sequence divergence to represent time: \nand use scaled mutation rate to represent population size: \nwhere, again, t_k and \\lambda_k are given at the other lines, \\theta_0 at the\n\"TR\" line and s is the bin size, which defaults to 100 in fq2psmcfa. \n"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9694511036850315,
      "result": {
        "type": "Text_excerpt",
        "value": "where `diploid.fq.gz' is typically the whole-genome diploid consensus sequence\nof one human individual, which can be generated by, for example: \nHere option -d sets and minimum read depth and -D sets the maximum. It is\nrecommended to set -d to a third of the average depth and -D to twice.  Program\n`fq2psmcfa' transforms the consensus sequence into a fasta-like format where\nthe i-th character in the output sequence indicates whether there is at least\none heterozygote in the bin [100i, 100i+100). \nProgram 'beta-psmc' is quite similar to program 'psmc' except for the option '-B'.\nThe '-B' option specifies the number of sub-atomic time intervals in each atomic time\ninterval. For the option '-p', it is suggested that each free interval parameter spans\none atomic time interval. The option '-o' specifies the name of output file, which includes\nthe detailed outputs of beta-psmc similar to psmc. The brief outputs of beta-psmc are in the file out_beta.psmc. \n"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chenh-big/Beta-PSMC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChenHuaLab/Beta-PSMC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChenHuaLab/Beta-PSMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "APPENDIX I: Brief Description of the file out_beta.psmc"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.929648469556651,
      "result": {
        "type": "Text_excerpt",
        "value": "This software modifies Li's psmc to uncover more detailed pouplation history using Beta distribution. \nTo compile the binaries, you may run \nAfter that, you may try \n    utils/fq2psmcfa -q20 diploid.fq.gz > diploid.psmcfa\n    beta-psmc -N25 -t15 -r5 -p 20*1 -B5 -o diploid.psmc diploid.psmcfa \n"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChenHuaLab/Beta-PSMC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 chenh-big\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Beta-PSMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ChenHuaLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 113783,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 20166,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lua",
        "size": 4702,
        "type": "Programming_language",
        "value": "Lua"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 4386,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 841,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chenh-big/Beta-PSMC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:15:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}