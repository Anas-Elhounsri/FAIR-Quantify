{
  "application_domain": [
    {
      "confidence": 55.67,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KhaosResearch/EGAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-16T11:56:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-23T08:49:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automation of LIME using ensemble-based genetic algorithm explainer: A case study on melanoma detection dataset"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9572136739012311,
      "result": {
        "original_header": "EGAE",
        "type": "Text_excerpt",
        "value": "Due to space limitation in github the data needed to run EGAE including the saved weights for the model, training and test sets and their labels (in the numpy.ndarray format), and the ground truths delineated by experts for accuracy calculation of 8 sample images in the paper are [here](https://drive.google.com/drive/folders/1341NsT56HIh4DyB6R0ViuxPtDD1AWfdg?usp=sharing). \nThe 8 sample images are selected from 600 images in the X1_test for evaluation. The record number of the selected sample images according to their location in X1_test and appearance in Figure 2 of the paper are given based on the following pattern:\n(image number in Figure 2 of the paper = image number in the X1_test = the ground truth file). As such,\nimage 1 = 100 = i100.npy,\nimage 2 = 277 = i277.npy,\nimage 3 = 74 = i74.npy,\nimage 4 = i5.npy,\nimage 5 = 574 = i574.npy,\nimage 6 = 91 = i91.npy,\nimage 7 = 208 = i208.npy,\nimage 8 = 11 = i11.npy, \n2- Load the training and test data and all the ground truths images with the prediction model saved weights using the the variable explorer panel. \n4- In line 91 specify which image you want to explain using the image number in X1_test. For example, assign variable \"Figure\" to 100 if you want to test image 1 in Table 3 of the paper. \n1- Save the consensus voting image (c1) and majority voting image (m1) in lines 693-694. \n2- Change the \"initial\" and \"second\" variables in lines 716 and 717 accordingly. For example, if you want to calculate accuracy for consensus voting the values of \"initial\" and \"second\" should be i100.flatten() and c1.flatten() \n3- Run lines 720-726 to calculate the Euclidean distance. The less this distance is, the more accurate the explanation is.\nYou can also run LIME separately (lines 770-779) with a predefined number of superpixels in the input image and top features (num_features parameter) to be seen. The num_samples parameter also needs to be determined in advance by user. Then, you can also calculate the accuracy of LIME explanation with the ground truth. Number of superpixels in the input image should be specified manually in segmentation_fn. \nThe paper contains a single typo. This typo is only present in the paper, and as a result, the implementation, as well as the corresponding figures and tables in the paper, are entirely accurate. \n1- The denominator in Eq.5 should change to (\u2211j\u200be\u2212\u03b8((1/fj)/(1/WorstFit)\u200b\u200b))  and thus Eq.5 is \nPi\u200b=(e\u2212\u03b8((1/fi)/(1/WorstFit\u200b\u200b)))\u200b/(\u2211j\u200be\u2212\u03b8((1/fj)/(1/WorstFit)\u200b\u200b)) \n"
      },
      "source": "https://raw.githubusercontent.com/KhaosResearch/EGAE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KhaosResearch/EGAE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KhaosResearch/EGAE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KhaosResearch/EGAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EGAE"
      },
      "source": "https://raw.githubusercontent.com/KhaosResearch/EGAE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8848195020340448,
      "result": {
        "original_header": "EGAE",
        "type": "Text_excerpt",
        "value": "1- Open EGAE.py. \n"
      },
      "source": "https://raw.githubusercontent.com/KhaosResearch/EGAE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KhaosResearch/EGAE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Khaos Research\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/KhaosResearch/EGAE/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EGAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KhaosResearch"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 19709,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KhaosResearch/EGAE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:29:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}