{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BorgwardtLab/simbsig"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
        ],
        "type": "Text_excerpt",
        "value": "This code is developed and maintained by members of the Department of Biosystems Science and Engineering at ETH Zurich. It available from the GitHub repo of the [Machine Learning and Computational Biology Lab](https://www.bsse.ethz.ch/mlcb) of [Prof. Dr. Karsten Borgwardt](https://www.bsse.ethz.ch/mlcb/karsten.html).\n\n- [Michael Adamer](https://mikeadamer.github.io/) ([GitHub](https://github.com/MikeAdamer))\n\n*References*:\n\n  [1] Guti\u00e9rrez, P. D., Lastra, M., Bacardit, J., Ben\u00edtez, J. M., & Herrera, F. (2016). GPU-SME-kNN: Scalable and memory efficient kNN and lazy learning using GPUs. Information Sciences, 373, 165-182.\n\n  [2] Sculley, D. (2010, April). Web-scale k-means clustering. In Proceedings of the 19th international conference on World wide web (pp. 1177-1178).\n\n  [3] Halko, N., Martinsson, P. G., Shkolnisky, Y., & Tygert, M. (2011). An algorithm for the principal component analysis of large data sets. SIAM Journal on Scientific computing, 33(5), 2580-2594.\n\n  [4] Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., ... & Duchesnay, E. (2011). Scikit-learn: Machine learning in Python. the Journal of machine Learning research, 12, 2825-2830.\n\n  [5] Buitinck, L., Louppe, G., Blondel, M., Pedregosa, F., Mueller, A., Grisel, O., ... & Varoquaux, G. (2013). API design for machine learning software: experiences from the scikit-learn project. arXiv preprint arXiv:1309.0238.\n\n  [6] Collette, A., Kluyver, T., Caswell, T. A., Tocknell, J., Kieffer, J., Scopatz, A., ... & Hole, L. (2021). h5py/h5py: 3.1. 0. Zenodo.\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-28T16:23:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-26T02:01:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The official implementation for the SIMBSIG package"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.953341277114614,
      "result": {
        "original_header": "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based",
        "type": "Text_excerpt",
        "value": "SIMBSIG is a GPU accelerated software tool for neighborhood queries, KMeans and PCA which mimics the sklearn API. \nThe algorithm for batchwise data loading and GPU usage follows the principle of [1]. The algorithm for KMeans follows the Mini-batch KMeans described by Scully [2]. The PCA algorithm follows Halko's method [3].\nThe API matches sklearn in big parts [4,5], such that code dedicated to sklearn can be simply reused by importing SIMBSIG instead of sklearn. Additional features and arguments for scaling have been added, for example all data input can be either array-like or as a h5py file handle [6]. \n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
        ],
        "type": "Text_excerpt",
        "value": "The documentation can be found [here](https://simbsig.readthedocs.io/en/latest/index.html).\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://simbsig.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BorgwardtLab/simbsig/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/RadiusNeighborsClassifier_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/RadiusNeighborsClassifier_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/RadiusNeighborsRegressor_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/RadiusNeighborsRegressor_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/KNeighborsClassifier_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/KNeighborsClassifier_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/KNeighborsRegressor_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/KNeighborsRegressor_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/PCA_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/PCA_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/NearestNeighbors_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/NearestNeighbors_Demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/MiniBatchKMeans_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/tutorials/MiniBatchKMeans_Demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BorgwardtLab/simbsig/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BorgwardtLab/simbsig"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
        ],
        "type": "Text_excerpt",
        "value": "SIMBSIG is a PyPI package which can be installed via `pip`:\n\n```\npip install simbsig\n```\n\nYou can also clone the repository and install it locally via [Poetry](https://python-poetry.org/) by executing\n```bash\npoetry install\n```\nin the repository directory.\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BorgwardtLab/simbsig/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, Machine Learning and Computational Biology Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "simbsig"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BorgwardtLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 294048,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 63905,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1309.0238.\n\n  [6] Collette, A., Kluyver, T., Caswell, T. A., Tocknell, J., Kieffer, J., Scopatz, A., ... & Hole, L. (2021). h5py/h5py: 3.1. 0. Zenodo."
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:19:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
        ],
        "type": "Text_excerpt",
        "value": "\n```python\n>>> X = [[0,1], [1,2], [2,3], [3,4]]\n>>> y = [0, 0, 1, 1]\n>>> from simbsig import KNeighborsClassifier\n>>> knn_classifier = KNeighborsClassifier(n_neighbors=3)\n>>> knn_classifier.fit(X, y)\nKNeighborsClassifier(...)\n>>> print(knn_classifier.predict([[0.9, 1.9]]))\n[0]\n>>> print(knn_classifier.predict_proba([[0.9]]))\n[[0.666... 0.333...]]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "SIMBSIG = SIMilarity Batched Search Integrated Gpu-based"
        ],
        "type": "Text_excerpt",
        "value": "Tutorial notebooks with toy examples can be found under [tutorials](https://github.com/BorgwardtLab/simbsig/tree/main/tutorials)\n"
      },
      "source": "https://raw.githubusercontent.com/BorgwardtLab/simbsig/main/README.md",
      "technique": "header_analysis"
    }
  ]
}