{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cfarkas/annotate_my_genomes"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-12T00:55:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-18T06:43:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A genome annotation pipeline that use short and long sequencing reads alignments from animal genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8626319856306336,
      "result": {
        "original_header": "annotate_my_genomes",
        "type": "Text_excerpt",
        "value": "Transcriptome annotation pipeline using short and long sequencing reads from non-model (and model) animal organisms. \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9655448734968882,
      "result": {
        "original_header": "I) Pipeline Outline",
        "type": "Text_excerpt",
        "value": "  ```annotate_my_genomes``` is a pipeline that aims to annotate genome-guided transcriptome assemblies from StringTie, coming from long read RNA-Seq alignments in vertebrate genomes (i.e. PacBio technology). Transcripts are classified by its coding potential, probable gene function and identified as novel or reconciliated with the current reference annotation from RefSeq/NCBI, without loosing isoform and exon information. Also, known/novel coding sequences in nucleotides and correspondent proteins will be resolved.   \n2) At minimum, coding UCSC/NCBI reference genome annotations (in GTF format) and genome assembly (non-masked fasta from UCSC). All these requirements can be downloaded once by using the ```genome-download``` program provided in this repository and inputting a genome prefix as follows: \nBASH3*\n- In example, BASH4* , will output: BASH5*, BASH6* and BASH7* files.\n- BASH6* contains coding genes and BASH7* contains all NCBI annotations. \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/cfarkas/annotate_my_genomes/wiki"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cfarkas/annotate_my_genomes/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cfarkas/annotate_my_genomes"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "annotate_my_genomes"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/makefile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/annotate_my_genomes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/genome_download_macOSX.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/get_transcripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/isoform_identification.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/add_ncbi_annotation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/bash_scripts/genome_download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/additional_scripts/transcriptome_metrics.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/7016350/108611599-a6319f00-73a5-11eb-89b7-3cfd44b00cc5.png"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 1: Via Nextflow (recommended)",
        "parent_header": [
          "annotate_my_genomes",
          "II) Installation:"
        ],
        "type": "Text_excerpt",
        "value": "- Nextflow (https://www.nextflow.io/) is a great workflow framework and a programming DSL that eases the writing of data-intensive computational pipelines. We encourage and support the usage of this framework across different platforms for reproducibility. \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation:",
        "parent_header": [
          "annotate_my_genomes",
          "II) Installation:"
        ],
        "type": "Text_excerpt",
        "value": "In a given directory:\n```\ngit clone https://github.com/cfarkas/annotate_my_genomes.git                        # clone repository\ncd annotate_my_genomes                                                              # enter repository\ncurrent_dir=$(pwd)                                                                  # set working directory\necho $current_dir                                                                   # check working directory\nnextflow run makefile.nf --workdir $current_dir --conda ./22.04_environment.yml     # make & install; use environment.yml for Ubuntu < 22.04\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 4: Without using conda, program by program:",
        "parent_header": [
          "annotate_my_genomes",
          "II) Installation:"
        ],
        "type": "Text_excerpt",
        "value": "- See detailed installation steps in our wiki here: https://github.com/cfarkas/annotate_my_genomes/wiki\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9866017742767239,
      "result": {
        "original_header": "I) Pipeline Outline",
        "type": "Text_excerpt",
        "value": "1) StringTie assembled transcripts (in GTF format). Check here: https://github.com/cfarkas/annotate_my_genomes/wiki#ii-obtaining-stringtie-gtf-file-for-annotation \n2) At minimum, coding UCSC/NCBI reference genome annotations (in GTF format) and genome assembly (non-masked fasta from UCSC). All these requirements can be downloaded once by using the ```genome-download``` program provided in this repository and inputting a genome prefix as follows: \nBASH3*\n- In example, BASH4* , will output: BASH5*, BASH6* and BASH7* files.\n- BASH6* contains coding genes and BASH7* contains all NCBI annotations. \n- For genomes, check UCSC genome prefixes here: http://hgdownload.soe.ucsc.edu/downloads.html \n3) Finally, the basic pipeline can be runned using a mouse transcriptome as example (stringtie.gtf) and 20 threads, as follows:\n```\nmkdir output1\n./annotate-my-genomes -a /path/to/stringtie.gtf -r /path/to/mm10.gtf -g /path/to/mm10.fa -c /path/to/annotate_my_genomes/gawn_config.sh -t 20 -o /path/to/output1\n```\nThe latter will output inside output1 folder:\nBASH9*\n* Users can also employ BASH7* by using BASH10* instead of BASH11* binary. See an example here: https://github.com/cfarkas/annotate_my_genomes/blob/master/README.md#v-adding-ncbi-annotations-to-increase-annotation-of-transcripts\n \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9968007034479534,
      "result": {
        "original_header": "V) Annotate and identify homologs in novel proteins from transcriptome",
        "type": "Text_excerpt",
        "value": "- See this example: https://github.com/cfarkas/annotate_my_genomes/wiki#5-annotate-and-identify-homologs-in-novel-proteins-from-transcriptome\n \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999618670177,
      "result": {
        "original_header": "VI Annotation of BRAKER2 / TSEBRA gtf output",
        "type": "Text_excerpt",
        "value": "- The output ```braker.gtf``` from BRAKER2 pipeline (https://github.com/Gaius-Augustus/BRAKER) or BASH2* from TSEBRA pipeline (https://github.com/Gaius-Augustus/TSEBRA) can be annotated using a few tools before running the pipeline. \nAs a requirement, the AGAT toolkit (https://github.com/NBISweden/AGAT) must be installed:\n```\nconda activate annotate_my_genomes\nconda install -c bioconda agat\n```\n- Suppose you recently annotated the Gallus gallus genome (galGal6) using BRAKER2 or TSEBRA. The BASH4* output can be pre-processed as follows:\n \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974588009286165,
      "result": {
        "original_header": "More Scenarios?",
        "type": "Text_excerpt",
        "value": "- For downstream analysis and examples, please visit our wiki page : https://github.com/cfarkas/annotate_my_genomes/wiki\n \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999991790609032,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "Compiling automatically uses Shell script compiler shc to make binaries, please check: https://github.com/neurobin/shc.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "braker2, genome-annotation, rna-seq, stringtie, transcriptome, transcriptome-assembly"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 cfarkas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "annotate_my_genomes"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cfarkas"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 69367,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 68620,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 28564,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 5866,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1916,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2022-12-28T19:21:22Z",
        "date_published": "2022-12-29T15:10:45Z",
        "description": "- We incorporated ```transcriptome_metrics.sh```  (https://github.com/cfarkas/annotate_my_genomes/blob/master/additional_scripts/transcriptome_metrics.sh) into the pipeline to obtain novel cds and correspondent proteins. \r\n- the pipeline can accept fixed GTF files, related to https://github.com/gpertea/stringtie/issues/270. The script to fix stringtie GTF files is the following: https://gist.github.com/cfarkas/7ec131ad0880acbcc3c31257cdca3f97\r\n- Updated NextFlow scripts.  ",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v4.0",
        "name": "v4.0",
        "release_id": 87529230,
        "tag": "v4.0",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/87529230",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/87529230",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2022-06-28T20:14:21Z",
        "date_published": "2022-06-28T20:18:33Z",
        "description": "June 28, 2022: Adding Docker run, as depicted here: https://hub.docker.com/r/carlosfarkas/annotate_my_genomes_v3",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v3.3",
        "name": "v3.3",
        "release_id": 70800159,
        "tag": "v3.3",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/70800159",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/70800159",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2022-05-24T22:32:25Z",
        "date_published": "2022-05-24T22:37:49Z",
        "description": "Minor fixes on README and makefile.nf",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v3.2",
        "name": "v3.2",
        "release_id": 67745390,
        "tag": "v3.2",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/67745390",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/67745390",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2022-05-16T22:24:17Z",
        "date_published": "2022-05-24T22:35:34Z",
        "description": "- Nextflow scripts do not rely on binaries\r\n- Updated makefile, now it can be runned on Nextflow\r\n- Adding Nextflow installing instructions on README",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v3.0",
        "name": "v3.0",
        "release_id": 67745300,
        "tag": "v3.0",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/67745300",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/67745300",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2022-03-12T22:48:04Z",
        "date_published": "2022-03-14T15:22:29Z",
        "description": "- Improving conda recipe for FEELnc installation, with better performance in Ubuntu 16.04 LTS, 18.04 LTS and 20.04.3 LTS. \r\n- Tested Nextflow scripts in all Ubuntu distros\r\n- Tested in galGal6, mm10, hg38, danRer11 and ce11. \r\n- fixing bugs in homolog detection (wiki examples)\r\n- adding a stable environment.yml for Nextflow",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v2.1",
        "name": "v2.1",
        "release_id": 61774139,
        "tag": "v2.1",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/61774139",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/61774139",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2021-12-06T14:07:56Z",
        "date_published": "2021-12-07T14:39:20Z",
        "description": "-o option added, fixing input paths and variables, conda stable release. Tested in Ubuntu 16.04 LTS, 18.04, 20.04 LTS",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v2.0",
        "release_id": 54799435,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/54799435",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/54799435",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2021-06-22T06:10:05Z",
        "date_published": "2021-07-15T15:56:19Z",
        "description": "First stable release, tested in mouse, human, chicken and zebrafish.",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/v1.0.3",
        "name": "v1.0.3",
        "release_id": 46267321,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/46267321",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/46267321",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2021-03-07T03:59:35Z",
        "date_published": "2021-03-07T04:04:35Z",
        "description": "Fix parallel sed script for genes containing \":\"\r\n",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/1.0.2",
        "name": "v1.0.2",
        "release_id": 39389526,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39389526",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39389526",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2021-03-03T22:50:00Z",
        "date_published": "2021-03-03T22:57:26Z",
        "description": "- Fixed minor bugs in additional scripts",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/1.0.1",
        "name": "v1.0.1",
        "release_id": 39234311,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39234311",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39234311",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cfarkas",
          "type": "User"
        },
        "date_created": "2021-03-03T19:44:19Z",
        "date_published": "2021-03-03T22:55:12Z",
        "description": "- getopts supported\r\n- Successfully tested in mouse and chicken assemblies",
        "html_url": "https://github.com/cfarkas/annotate_my_genomes/releases/tag/1.0",
        "name": "v1.0",
        "release_id": 39234219,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39234219",
        "value": "https://api.github.com/repos/cfarkas/annotate_my_genomes/releases/39234219",
        "zipball_url": "https://api.github.com/repos/cfarkas/annotate_my_genomes/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "annotate_my_genomes",
          "II) Installation:"
        ],
        "type": "Text_excerpt",
        "value": "- Nextflow can be installed as depicted here (https://www.nextflow.io/) or via anaconda as follows:\n\n```\nconda install -c bioconda nextflow\n```\nAlso install (not through conda):\n\n- ```wget``` Comes by default with Linux/Ubuntu distros\n- ```sed``` editor. Comes by default with Linux/Ubuntu distros\n- ```ncbi-blast+``` version equal or higher than v2.7.1. To install it, see here: https://github.com/cfarkas/annotate_my_genomes/wiki#5-installing-up-to-date-ncbi-blast-version-v271\n- ```SAMtools``` . To install it, see here: https://github.com/cfarkas/annotate_my_genomes/wiki#9-obtaining-and-installing-up-to-date-samtools-with-htslib-version--19\n\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes:",
        "parent_header": [
          "annotate_my_genomes",
          "III) Running the whole pipeline via nextflow (recommended)"
        ],
        "type": "Text_excerpt",
        "value": "- By activating annotate_my_genomes enviroment, all binaries in the annotate_my_genomes repository can be executed.\n- To install optional programs for downstream analysis, please see here: https://github.com/cfarkas/annotate_my_genomes/wiki#optional-dependences-to-run-all-the-downstream-analysis\n\n- Uninstall environment as follows: \n```\nconda remove --name annotate_my_genomes --all\n```\n\n- Inside the repository, there is a file called ```gawn_config.sh```. Optionally, edit and increase/decrease the number of cpus for blast processing:\n```\nNCPUS=10\n```\nTo a value according to the computational capacity of your machine.\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 3: Run through docker:",
        "parent_header": [
          "annotate_my_genomes",
          "II) Installation:"
        ],
        "type": "Text_excerpt",
        "value": "- See installation and pipeline run here: https://hub.docker.com/r/carlosfarkas/annotate_my_genomes\n```\n# Run docker without sudo privileges as follows:\nsudo chmod 666 /var/run/docker.sock\n\n# Downloading the docker image\ndocker pull carlosfarkas/annotate_my_genomes:latest\n\n# Downloading repository\ngit clone https://github.com/cfarkas/annotate_my_genomes.git && cd annotate_my_genomes\n\n# make & install using workdir\nchmod 755 makefile.sh\ndocker run --volume $HOME:$HOME --workdir $(pwd) carlosfarkas/annotate_my_genomes ./makefile.sh         # make & install\n                    \n                    OR\n                    \n# make & install using -it (interactively)\ndocker run -v $(pwd):/annotate_my_genomes -it carlosfarkas/annotate_my_genomes:latest\ncd annotate_my_genomes/\nbash makefile.sh     \n```"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "III) Running the whole pipeline via nextflow (recommended)",
        "parent_header": [
          "annotate_my_genomes"
        ],
        "type": "Text_excerpt",
        "value": "- Inside ```annotate_my_genomes``` folder, enter into ```nextflow_scripts``` subdirectory and run the full pipeline using ```--flags``` parameters. \n- NOTE 1: Users **must provide full paths to inputs in the command line**.  We recommed to split the flags with backslashes and run the pipeline exactly as follows: \n- NOTE 2: Use environment.yml for Ubuntu < 22.04\n```\ncd nextflow_scripts/\n```\n2.1) Run ```genome-download.nf``` (i.e : output galGal6 genome)\n```\nnextflow run genome-download.nf \\\n--genome galGal6 \\\n--conda /path/to/22.04_environment.yml --outdir /path/to/output_folder/\n```\n2.2) Run ```annotate-my-genomes.nf``` . Details here: https://github.com/cfarkas/annotate_my_genomes/blob/master/README.md#b-simplest-usage\n```\nnextflow run annotate-my-genomes.nf \\\n--stringtie /path/to/stringtie.gtf \\\n--ref_annotation /path/to/galGal6.gtf \\ \n--genome /path/to/galGal6.fa \\\n--config /path/to/annotate_my_genomes/gawn_config.sh \\\n--threads 20 \\\n--conda /path/to/22.04_environment.yml --outdir /path/to/output_folder/\n```\n2.3) Run ```add-ncbi-annotation.nf``` . Details here: https://github.com/cfarkas/annotate_my_genomes/blob/master/README.md#c-adding-ncbi-annotations-to-increase-annotation-of-transcripts\n```\nnextflow run add-ncbi-annotation.nf \\\n--stringtie /path/to/stringtie.gtf \\\n--NCBI_annotation /path/to/galGal6_ncbiRefSeq.gtf \\\n--ref_annotation /path/to/galGal6.gtf \\\n--genome /path/to/galGal6.fa \\\n--config /path/to/annotate_my_genomes/gawn_config.sh \\\n--threads 20  \\\n--conda /path/to/22.04_environment.yml --outdir /path/to/output_folder/\n```\n2.4) Run ```isoform-identification.nf``` . Details here: https://github.com/cfarkas/annotate_my_genomes/blob/master/README.md#d-post-processing-add-ncbi-annotation-outputs\n```\nnextflow run isoform-identification.nf \\\n--NCBI_tmap /path/to/gffcompare.tmap \\\n--NCBI_transcripts /path/to/NCBI_transcripts.fa \\\n--genome_name galGal6 \\\n--conda /path/to/22.04_environment.yml --outdir /path/to/output_folder/\n```\n\n#### Notes: \n\n- Users must provide full paths to files when running nextflow scripts.\n\n- Inside the repository, there is a file called gawn_config.sh. Optionally, edit and increase/decrease the number of cpus for blast processing:\n```\nNCPUS=10\n```\nTo a value according to the computational capacity of your machine. \n\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A) Quickstart (Running the test)",
        "parent_header": [
          "annotate_my_genomes",
          "IV) Running the whole pipeline via anaconda + binaries:"
        ],
        "type": "Text_excerpt",
        "value": "- Inside ```test``` folder, run the pipeline with a provided set of transcripts from chromosome 33, Gallus gallus genome version \"6\", in GTF format. \n- Users need to specify the stringtie output (GTF format), UCSC reference genome (GTF annotation and fasta file), gawn_config.sh file (check NCPUS for blast, default = 10), number of threads for text processing (20 for this example) and the output folder. \n\nGo to ```annotate_my_genomes/test``` directory and execute the following:\n\n```\n# Download Gallus gallus v6 fasta assembly (non masked) with matched GTF files (UCSC/Ensembl)\n./genome-download galGal6        \n\n# Execute pipeline on stringtie_chr33.gtf (provided file) with 20 threads:\nmkdir output1\n./annotate-my-genomes -a stringtie_chr33.gtf -r galGal6.gtf -g galGal6.fa -c gawn_config.sh -t 20 -o output1\n\n# Include NCBI annptations on stringtie_chr33.gtf (provided file) with 20 threads:\nmkdir output2\n./add-ncbi-annotation -a stringtie_chr33.gtf -n galGal6_ncbiRefSeq.gtf -r galGal6.gtf -g galGal6.fa -c gawn_config.sh -t 20 -o output2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "C) Adding NCBI annotations to increase annotation of transcripts",
        "parent_header": [
          "annotate_my_genomes",
          "IV) Running the whole pipeline via anaconda + binaries:"
        ],
        "type": "Text_excerpt",
        "value": "Users can add annotations from NCBI by using the three outputs from ./genome-download program as inputs into ./add-ncbi-annotation. \n- Resuming the previous example, using add-ncbi-annotation instead of annotate-my-genomes:\n```\nmkdir output2\n./genome-download galGal6         \n./add-ncbi-annotation -a /path/to/target.gtf -n /path/to/galGal6_ncbiRefSeq.gtf -r /path/to/galGal6.gtf -g /path/to/galGal6.fa -c /path/to/gawn_config.sh -t 20 -o /path/to/output2\n```\n- ```final_annotated.gtf``` (located in output2/) will contained the merged NCBI-updated annotation (in UCSC coordinates).\n\nAs example for mouse genome, change galGal6 prefix to mm10. Using 30 threads for processing \"mouse.gtf\" assembly:\n```\nmkdir output3\n./genome-download mm10            \n./add-ncbi-annotation -a /path/to/mouse.gtf -n /path/to/mm10_ncbiRefSeq.gtf -r /path/to/mm10.gtf -g /path/to/mm10.fa -c /path/to/gawn_config.sh -t 30 -o /path/to/output3\n```"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "D) Post processing add-ncbi-annotation outputs",
        "parent_header": [
          "annotate_my_genomes",
          "IV) Running the whole pipeline via anaconda + binaries:"
        ],
        "type": "Text_excerpt",
        "value": "If ```stringtie.gtf``` (as an example of input GTF) was annotated with ```add-ncbi-annotation```, users can produce transcripts annotation tables (csv format) using two outputs from add-ncbi-annotation pipeline as follows:\n\n- gffcompare.tmap (inside ```output_files``` subdirectory)\n- NCBI_transcripts.fa (inside ```gffcompare_outputs_NCBI``` subdirectory)\n\nBy using isoform-identification pipeline, as follows: \n\n```\nisoform-identification -m /path/to/gffcompare.tmap -t /path/to/NCBI_transcripts.fa -g galGal6\n```\nIn this example:\n- ```gffcompare.tmap``` correspond to the transcript map output from gffcompare\n- ```NCBI_transcripts.fa``` correspond to the transcripts sequences from ```stringtie.gtf```, in fasta format \n- ```galGal6``` correspond to the NCBI genome name (in this example, Gallus gallus 6 genome, galGal6). \n\nThe outputs ```Ref_Transcript_Annotation.csv``` and ```Novel_Transcript_Annotation.csv``` files will contain detailed annotation of transcripts. Ref_Transcript_Annotation.csv should look like this:\n\n```\nref_gene_id\tref_id\tclass_code\tqry_gene_id\tqry_id\tnum_exons\tFPKM\tTPM\tAnnotation Status\tNCBI RefSeq Gene ID\tTranscript Description\tNCBI RefSeq Protein ID\tAlternative Gene Name\tRefSeq Transcript Info\tcds_seq\nOR14J1L40\tXM_025145345.1\tx\tSTRG.16902\tSTRG.16902.1\t3\t0.089321\t0.347251\tModel\tOR14J1L40\tolfactory receptor 14J1-like 40\tXP_025001113.1\t\t\tAATTTCATTGGAATTAAATTTATTATACGTATGACAAACTGatatgaagaagaaacagaaacaccacATAAAATCTATCAGGCTTTTCCTAAATTTTCTGTAGTCTTGAGAGCATGATGAACATCTTTCTGATAGTGAAACCGGGTATGTTGGAGTATCTTCCTGAGGGAacccttgagctcctggttcctcatgctgtagatgagggggttcaaAGCTGGAGGCACCACTGTGTATAGAAATGACACCACCAGGTCCagagatggggaggagatggagggaggcttcaggtaggcaaacatggcagtgctgacaaacagggagagcacagccaggtgagggaggcacgtggagaaggttttgtgctgtccctgctcagagggcatcctcagcacggccctgaagatctgcacataggagaagagaatgaaagcaaagcaccCAGATGCTAAAGAGGCACTGACAATAAGAAGCCAAATGTCTTTGAGATAGGAGTGTGAGCaagagagcttgaggatctgggggatttcacagaagaactgatccacagcattgccttggcacagaggcagggaaaatgtattggcagtgtgcagcagggaattaaggacccccgtgccccaggcagctgctgccatggtggcacacgctctgctgcccagcagggtccggtagtgcaggggcttgcagatggcaac\nLOC100857209\tXM_015272533.2\tx\tSTRG.16904\tSTRG.16904.1\t3\t0.099526\t0.386921\tModel\tLOC100857209\tolfactory receptor 14A16-like\tXP_015128019.2\t\t\tcatctgcagttcctgggcatggagtcctgttcagacTGCAGGAGATAATGATGAGTCGATACCATTCTCAGAGACACTCCTCCTGCAcactttgaaaatgcatttaactCCATAGCAtgagtttattttcatgagcttcAGAATCATGTAAGAAGTAGAAACTTAAGGAGCATTTAGTTTCCTATCATTTCCTAATCATATCCCAGGCTCCTGGattttttcctcataggagCTGTTTCCACATCTCTTTTCTttacccctaaccctaacttcTATGTTCTTCAACTTCTGTTAGAGAAATCTGTTTGATTGGAGGCTAAGTACATTATTCATGACTGCAGAGAATGACAATAAtttcagctggtgctgtcctttgggggaggagaggctgaaagcacatgAGGAGATTGTTCATATAACAGCAGACTGAGAAAGGTACAATTCAGGGTACTCAGAGATGTGTTCATATTTTCTGGCTCCcttcagatttctgcctccaatccttttcccttctcttagggtataaaagaaaaatccctgccctgtctctcctcttgcaaagAGGAGCAAACACCTTTGGAAACACCCTATGGTGCAGCtgtagctgtgatACCCCTGGCTCAGGCAgaagctgtggcagcagaaggccccttCCCTGCCGGGGGGCttcttccccccacacgtctccctgcagcgccctgggcagctccccgggcaggctgagtgctgagcctggcaggcggcagagtccctgccccggcacacagcccctggggcacagcagggaccctgctctgcactacagccctgggcacccggctgcacccaaacagcacagcctgcagccgtcctgggacacgcagccctcagggctgtgctctgatgctgcagcacagaagcccTCATCTGGAACAGTAGTCTTTTTCCATAGCAAGGAAACATGAAGTACTTTCAGCCAGATCTGCTATGGGATATCCCTGATTCAGTGATCCCTCCTGGAAAAACAGCTTCATTGCCTACTGCAAGAGACTTACCCTGTCAAGCGCTGTGAGCAAtgctcctccagtgagctcacatCCTACTCACACTGTACACATCCTGtaatctctttctcttttctcttctatcTTCATGTCACCTGCAGATCATGTCTatagccctgctgtgctgtacagaagagctgctcctgtgcaCAGCTGTCTCTCCGCAGCGCTGCCTGCTTTTatgagctccctgtgtcccaggagcctggcccagctcagcagc\nLOC112530844\tXM_025145380.1\tp\tSTRG.16906\tSTRG.16906.1\t1\t0.192245\t0.747381\tModel\tLOC112530844\tolfactory receptor 14A16-like\tXP_025001148.1\t\t\taaatcagcgggagacaagtctcatgctttcatgatcaacaagtctcagctttattgAAGCACACGCAGGCATTTATACGATAGTTAATGAGCTACTACATATGCCAAATTGGGTTCTCTTATTGGTTAGTTCTTTACGTGAGAAAGTAACCTTCAACGCTAGATACCGTGACAGTCCCGTGATGAATGCCCGATTGTTTACCGCATACCACTCAATTTTCTTAACTGCAGCATGTTcttatcacttccttgctcctgagtGAGGGCAGCACGACCTTGCCTGGTTTAATGAGCAGGGCCCTATctccttaccagctgcatcccatCATGGCCCCTCTCCCGGAGCCAGTGCTCCGGGTCCCAAAAGCTCTCCACACTTCCCCCGTTTTCTTTTGGTACGAGCCAGGTTGTATGAATCGCATCTTGAACCACCTTTTGCTAGCATTACAGTAAACAAAGCATGATTATCAGCATACCAATCACTATCTATAAGAATACACTAGATTTATgttacacacttctacaaagcattccttgtcagtaaactaacagtaaagactacacagcacaccagtattaactacagtttcaatatcccgatgaataaaataccacagtccCCACTCTGGATCAACCACTGTACCTGACCCCCACAATTAGTGCGCTTCTGAGTCTCATAACCGccaattgctcctggcagttcccagtgtCCAAGAGACCTTtctgatgagatgttttctgcaatCTGCTAAGGGAATACCAGTCGCAGCTCAGGAGTCACGGCACTGTATATGATGTCTTGCACACCATGCGGCTATCGCTCGCCGGAGTCGCCGTTGTTGTCATCGGGTTGAGATGGGTTGTTGATGTTCGGGGCTGGCTTAgtccatttactgggaacccataatgggccagatcctgtggAAACACAGCTCTCTCCTGGaagcctcccatgatgtttacaaaattccTATTGATTCCTAATTCactcaaagtttccacaaacccTTAACACCGTACagtgatattgttcagttataaacacttgggaacagatctcacagaagcttgTCCATGTTCCCTTACACGCTTCCATgcaatcagaacacagtactagATAAACAGGTtgacactcattccctgaaaggaacacatctcactcacaccacactcactctgacatttagaacaaaaaacatAGTTTATACATAACccacaatgctgacgacgtcttttAGCTTGTATCTTAATAACACTAGTGCATTAGTCAATTAGTTGCAATtcctaccccagccggcaatctaacctgtgagctcacgtatctcggggggggggggggaagcaggcacgctccttcataccctgcgtaggacgtctcctcacgccttacgggcacccccttttctatacacatacctgaTACACcaatggatggtccttgtctgtccctgcagtgatcgggtgaggaagggagaccttccaagaaatcttggggcgcgccaaaggtgtcccctctctcaatCGATCCCGCAGCCGAACAGAGCGGATCTATTCTCGTTGCAAAATTGAGTTGtagaaatcagaccctatatccggtaaggatatagagcaggcatgcGTCTATTGATGTCTATTGAtagtgcaagggggatcactccacctaacttgcacaccgtcaggagaaattgtactatagatataggtcaaactaatacataaccaatagttgacaggaattcagatacattttcattacgtccctgaaagacacattttcatgcagtataatgagacagaagaacagagggtAGTGCTGGCGCAGTTCTCATaatttgcagttgcttgcagcttgactcacagcacctggcacagcggtctctatcacagctctgcattcctttcgcctactcccatcattgttctgtgtgagacagtgatccatagcagctgttttacttgcactgacccagggggagaaaaacatgacctcgCTGGGTCAGCCGTCCATCCACAATTTCCCTGTTCTACTATTGCCTGGCCTGTGGGTGAGTTTGGGATACCCGTACTGTGTTTTACTCCCCATGTTTGCAGAAACTCCCCAAGCCTACGACTAGTGTAGGCTGGGccattgtctgtttttattcGTAGTGATATACCCATAACTGCAAAGCAACAACTGAGATGCTTTTCTACATACAtagccttttctccaggttgagcGGTGGCCCACATAAGATGACTATATGTATCTATAGACACGTGTACATATTTCAGCTGCCCGAACTCACCCACATGCATCACATCCATCTGCCTATTTTCGTTAGCTCTAAGTCCCCTGGGGTTAACTCCTAGCCCGAGACCCATACTGCCATTATGGTGGCTGCACACTGGGCACGATCTAACAATTACCTTAGCATCCTCATATGTTATCTGATATTCCCTTCTTAGCCCCTTGGCATTCTGGTGAAACATAGAGTACGCCTCTCGGGCCAGGACATGCCGGGAGACTAAAGGTCTCTGCGCCAGTGACACCAAGCGATCAGCTCTCGCATTTCCCTCTCCCAAGTCTATCTCCCATTTATGACCTCGAACATGTATTACTGCATATGAGTGCTCCCTAATtctgattgctctctgcaactgcacgAACAGCTTGTACAGCCGCcgattctgcacttcctttatgTAGGCTTCCTCTATTTGGTGGCATACTCCAGCTACATAAAGGGAGTCGGTGACCACATTAAGGGGGCCGATTAAGTTCATCATGGCCCATACAACGGCCACCAGCTCCAATGTTTGCAATAAGTCCTTATCATCGTCTGCAATGAGGTGATGTCTCCAGGAGCCgccctgctgccaggtcactgctgctgttctagacTTCTGTCCCGCATCCGTGTAAGCCGTGATTGTGTTCTGCAAGGGCGTCTCATGCTGCTTTGGTATCCGGAGCCAACTCCATTGACCAATCCAATGTAGCGGCACGTTCGGAATCTTTTCCACTGAAACCGTACTTCCAGCTCCTAAGAGAGCATCCTGTAACTCTGGACTATGCTGCACATACCATGTCAGAGTGTCCTTCTGCATTGGCAGCTGTACACACACAGGCTCCATACCTATGATCTGCAGGGTACGTTCTCGCCCTTTcttaatcacttctgccaggagttcagttttttgaagaagtgtttttgattgctgcagtgagggacagATCCACTCTAGTACCCATACctcccccgttttctttttagattgtgCCAACGCTCCTAAAAGGTACTTTGGTCCATACCATACCATAACCTGTATGGGGAGGTCAGGGTCACGTCTCCGAACACTGCCGTGTATAATGCAGTCCATAATCTGTTGTAGTAGACGTTTGTGCTGCGTTGTCACCGTTACAGGCTGGGCCGGGTCAGTGCCCTGTAACAAAGGTCGCAACGACTCTAAGAGTTCGTTTGGGATGCCCACCACAGGGCTCAACCACTTTAAGTCCCCCAGTAACCTTTGGGCATCATGTAGAGTCTCTAGTTTAGTATCcagttgcagtttctgtggggTTACTATCGTGTTAGTCAGTGTCCATCCTAAGTACTTCCGGGGCGCGGAGAGTTGTACCTTTTCAGGGGCAAACATAAGTTCTTCCCTATTTAGGGTCTTTTCTATTTGCCaaatttgttcctgtgtgaaggcCTCTGGCTGGGCAAAAAGGATGTCCTCCATGTAATGATAAAtgaccatttgtttccattctcgCCGGAGTGGTTGTAGAGCATGATCGACATATAGTTGACATCGCGTGGGGCTATTTTTCATCCTTTGAGGTAATACTGTCCATTCAAAACGTTGATCAGGGTGTTCTCGATTCAATGCAGGCAATGTGAAGGCAAATCGTTTAGTGTCCTGAGGGTGCAGGGTAATAGTaaagaaacagtcctttaaGTCACTAATTAGTAATGGCCAATTGTAAGGTAGCATGGCAGGATTAGGCAGGGCGGGTTGAAGTGCCCCCAGTTGAGAGAGCACATTGTGGCCAATTAAGCATTGAACAGTGGGGGGTAGAGGTGCCACCGAGACAGAGGTATGGACTACTTGTTCATCAAGGTGGATTTGCAGGGGAGGTGACTTTTTCGCTAAGGATAGTCCACCTGTACCCGTCACTGTGGCTATGGCCGCTTGCAGTGGCCATTGAGGCGGCCAAATTTCTGGGCTCAATATGCTGTTGTCGGCCCCTGTATCTAATAGACCttgaagtttgatttcttcctctctgtgtttAAGTGTCACTGGTTTTTTAGGTCGATCATGCAAATTTAGTGATAGCAATGCTAAGTCCCCTGAGGAGCCAAACCCTTGCTCCCCTCGGGGAGACGATTGACACGGTGTTAAGGCTTTGGTCAATTGCTCTAGGGGTACTAACTGCGCTATCCGTTGccctttctcaatttttattggAGGAAACGGGGTGTATACCATAATCTGGATCTCACCCTGAAAGTCCGCATCTATTACCCCAGGGAGGACAAAAAGTCCGAGCATCGATGCTGAAGAACGCCCCAATAAAAGGGCCCCAACAGCGGTTCCATTTATCATTACTGGTCCCCTGATCCCTGTAGACACCCGCTCAGGTTTTGTGGTCATTAAGGTCGTGGTCACTGCGGCTGCCAAGTCCAAGCCGAGGCTTCCTGGTGTGGCTgattgcagggctgctgctggctggaaacGGCTACTTGTGTCTGTGCGTGGCCGTCGTTTCTTTCTCGCGCTGGGCTGGGGGTTTCCTGACCGGCGTCGACAGGCATTGGTATTGTGGTTGTCCATACGACATGTGTGACACCATGAACCGGTGGTTTGACACTGACGACGCATATGTCCCATGCCGCCACAGCGATAGCATTTGATGCGACCAGCAACAGGCGATCTCGGGCCTAAATTTGTTATCGCAGACGCTTGTAAGGATGCAAGAGCTGCTAGCACTTGATTGTGAGAGGCCTCAGCTTGCGCCTTTAAACTTGCCCCTAACTCCTTAATAGCCTCAATCAGAAATGCTTGGGGCCCGACTGGCACGCTTGATagcttttccagtgcctcttcAATAGTCCAATTACTCCTCAAAGTACTCAGAGTACTACGTGCTGTTGAATTACAATTTTGGAGCGCGCATTGTTTTAACATTACTCCTCTCATATACTCTGGCACCCCTGCTTTTTCAATAGCCCCGGCTACCTTATCTATGAATGCCCCAAAGTCCTCATCTCTACCTTGTCGGATCCCCATATAAAATGGCAATCCATCAGGCACCTTAATCTTGTCCATGGCCTGTCTAGCTAAATACATCGTTTCTCGACATTTATCTGGCCCTAATAATGCTTGGGCTTGTGTTCTGAAAAAAGGCCCTAGCCCTAAGAGTTCTTCGATAGTTACACCATGTAGTGGGTCTCCCGGCTGCCTAGCCTTTGAGACACTCTGATGGCACAGTTCTTGCCAATATGCattaaacaacagctgttgATGTTGTGAAGAGATCAATTTTGCTATTGCCCGACAATCGGATGGCAGCAATATCTGCGTACTCCAAATATAATCCAATATCTGCTTAGCTGGCTCGCTTTTTACCCCAAACTGACTAACTGTAGATCGTAGCTGCGATAATAATTTCCAATCTAAAGCTGTGATGGTGGCCTGCATCCCTCCCGCAGGATTAGAGGCATATATCACTGGAAACGCCATGTGCCGCACGGCCTCC\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BRAKER2 run",
        "parent_header": [
          "annotate_my_genomes",
          "VI Annotation of BRAKER2 / TSEBRA gtf output"
        ],
        "type": "Text_excerpt",
        "value": "```\nagat_convert_sp_gff2gtf.pl --gff braker.gtf -o braker_fixed.gtf                        # clean and fix braker.gtf with AGAT                         \nstringtie --merge -G galGal6_ncbiRefSeq.gtf braker_fixed.gtf -o braker_merged.gtf      # merge braker.gtf with reference genome GTF (i.e.: galGal6_ncbiRefSeq.gtf)\nsed 's/ gene_name.*//'g braker_merged.gtf > braker_fixed.gtf                           # fix additional entries\ngrep \"StringTie\" braker_fixed.gtf > braker_stringtie.gtf                               # Exclude reference transcripts not found in braker annotation\n```\n- Now, ``` braker_stringtie.gtf``` can annotated as follows (i.e. using 30 threads for processing):\n```\nmkdir braker_annotated\nadd-ncbi-annotation -a braker_stringtie.gtf -n galGal6_ncbiRefSeq.gtf -r galGal6.gtf -g galGal6.fa -c gawn_config.sh -t 30 -o braker_annotated/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "TSEBRA run",
        "parent_header": [
          "annotate_my_genomes",
          "VI Annotation of BRAKER2 / TSEBRA gtf output"
        ],
        "type": "Text_excerpt",
        "value": "```\nagat_convert_sp_gff2gtf.pl --gff tsebra.gtf -o tsebra_fixed.gtf                        # clean and fix tsebra.gtf with AGAT                         \nstringtie --merge -G galGal6_ncbiRefSeq.gtf tsebra_fixed.gtf -o tsebra_merged.gtf      # merge tsebra.gtf with reference genome GTF (i.e.: galGal6_ncbiRefSeq.gtf)\nsed 's/ gene_name.*//'g tsebra_merged.gtf > tsebra_fixed.gtf                           # fix additional entries\ngrep \"StringTie\" tsebra_fixed.gtf > tsebra_stringtie.gtf                               # Exclude reference transcripts not found in braker annotation\n```\n- Now, ``` tsebra_stringtie.gtf``` can annotated as follows (i.e. using 30 threads for processing):\n```\nmkdir tsebra_annotated\nadd-ncbi-annotation -a tsebra_stringtie.gtf -n galGal6_ncbiRefSeq.gtf -r galGal6.gtf -g galGal6.fa -c gawn_config.sh -t 30 -o tsebra_annotated/\n```"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:20:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "B) Simplest usage",
        "parent_header": [
          "annotate_my_genomes",
          "IV) Running the whole pipeline via anaconda + binaries:"
        ],
        "type": "Text_excerpt",
        "value": "(Optional) Edit NCPUS value in ```gawn_config.sh``` file inside the repository. Default is 10\n- As example, to annotate a chicken GTF file (i.e: \"target.gtf\") using 20 threads for cpu processing:\n\n```\nmkdir output1\n./genome-download galGal6          \n./annotate-my-genomes -a /path/to/target.gtf -r /path/to/galGal6.gtf -g /path/to/galGal6.fa -c /path/to/gawn_config.sh -t 20 -o /path/to/output1\n```\n- ```final_annotated.gtf``` (located in output1/) will contained the merged NCBI-updated annotation (in UCSC coordinates)\n- To produce ```target.gtf``` assembly, check stringtie parameters here: https://github.com/cfarkas/annotate_my_genomes/wiki#ii-obtaining-stringtie-gtf-file-for-annotation\n"
      },
      "source": "https://raw.githubusercontent.com/cfarkas/annotate_my_genomes/master/README.md",
      "technique": "header_analysis"
    }
  ]
}