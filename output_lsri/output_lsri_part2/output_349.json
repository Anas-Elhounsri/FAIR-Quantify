{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite us",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "If you find this work useful, please consider citing our paper:\n\n```bibtex\n@article {liu2022node2vecplus,\n\ttitle = {Accurately modeling biased random walks on weighted networks using node2vec+},\n\tauthor = {Liu, Renming and Hirn, Matthew and Krishnan, Arjun},\n\tyear = {2022},\n\tdoi = {10.1101/2022.08.14.503926},\n\tpublisher = {Cold Spring Harbor Laboratory},\n\tjournal = {bioRxiv}\n\tURL = {https://www.biorxiv.org/content/early/2022/08/15/2022.08.14.503926},\n\teprint = {https://www.biorxiv.org/content/early/2022/08/15/2022.08.14.503926.full.pdf},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/krishnanlab/node2vecplus_benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-03T03:34:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-15T09:55:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.999723077786098,
      "result": {
        "original_header": "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
        "type": "Text_excerpt",
        "value": "This repository contains data and scripts for reproducing evaluation results presented in \n[*Accurately modeling biased random walks on weighted networks using node2vec+*](https://www.biorxiv.org/content/early/2022/08/15/2022.08.14.503926).\nNode2vec+ is implemented as an extension to [PecanPy](https://github.com/krishnanlab/PecanPy), \na fast and memory efficient implementation of [node2vec](https://snap.stanford.edu/node2vec/). \n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.923483908947109,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Follow the scripts below to execute full evaluation provaided in this repository. \nFor more details, check out the sections below.  \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9231245894636668,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "The hierarchical cluster graphs are constructed by taking RBF of point coulds generated in the Euclidean space, \nand hence each graph natually exhibits a hierarchical community structure (more info in the supplementary materials of the paper). \nEach network is assocaited with two tasks, cluster classification and level classification. \nThe BlogCatalog and Wikipedia networks, along with the associated node labels, are obtained from [SNAP-node2vec](https://snap.stanford.edu/node2vec/). \nThe networks are processed by removing isolated nodes and converting to edge list tsv files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.970511040983677,
      "result": {
        "original_header": "Extract",
        "type": "Text_excerpt",
        "value": "After the zipped tar ball is downloaded, extract and place them under `data/networks` by\n```bash\ntar -xzvf node2vecplus_bench_ppis.tar.gz --transform 's/node2vecplus_bench_ppis/ppi/' --directory data/networks\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9753351829143155,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "* [`eval_hcluster.py`](script/eval_hcluster.py) - evaluate performnace of node2vec(+) using hierarchical cluster graphs\n* [`eval_realworld_networks.py`](script/eval_realworld_networks.py) - evaluate performance of node2vec(+) using commonly benchmarked real-world datasets BlogCatalog and Wikipedia\n* [`eval_gene_classification_n2v.py`](script/eval_gene_classification_n2v.py) - evalute performance of node2vec(+) for gene classification tasks using gene interaction networks\n* [`eval_gene_classification_gnn.py`](script/eval_gene_classification_gnn.py) - evaluate performance of GNNs for gene classification tasks using gene interaction networks \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
          "Data",
          "Gene interaction networks <a href=\"https://doi.org/10.5281/zenodo.7007164\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7007164.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "Under the root directory of the repository, download gene interaction networks from Zenodo\n\n```bash\ncurl -o node2vecplus_bench_ppis.tar.gz https://zenodo.org/record/7007164/files/node2vecplus_bench_ppis.tar.gz\n```\n\n(Recommended) Although Zenodo provide a nice feature for versioning datasets with DOI, downloading could be a bit slow.\nThus, we provide an alternative download option from Dropbox.\nThe file should be in sync with the latest dataset version on Zenodo.\n\n```bash\ncurl -L -o node2vecplus_bench_ppis.tar.gz https://www.dropbox.com/s/aettebq5lbgu1cu/node2vecplus_bench_ppis-v1.0.0.tar.gz?dl=1\n```\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/krishnanlab/node2vecplus_benchmarks/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/barbell_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/barbell_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/gene_classification_n2vplus_gamma.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/gene_classification_n2vplus_gamma.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/realworld_networks_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/realworld_networks_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/gene_classification_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/gene_classification_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/hierarchical_cluster_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/hierarchical_cluster_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/tissue_gene_classification_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/tissue_gene_classification_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/node2vecplus_continuous.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/plot/node2vecplus_continuous.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/hyperparameters_tuning.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/hyperparameters_tuning.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/tuning_results_comparison/tuning_results_comparison.ipynb"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/tuning_results_comparison/tuning_results_comparison.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Submitting evaluation jobs",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
          "Evaluation"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, one can submit evaluation jobs using\n\n```bash\ncd slurm\n\n# submit all evaluations on hierarchical cluster graphs\nsbatch eval_hcluster_all.sb\n\n# submit all evaluations for BlogCatalog and Wikipedia\nsbatch eval_realworld_networks.sb\n\n# submit all evaluations for gene classifications using node2vec+\nsbatch eval_gene_classification_n2vplus.sb\n\n# submit all evaluations for gene classifications using node2vec\nsbatch eval_gene_classification_n2v.sb\n\n# submit all evaluations for gene classifications using GNNs\nsbatch eval_gene_classification_gnn.sb\n\n# submit all evaluations for tissue-specific gene classifications using node2vec+\nsbatch eval_tissue_gene_classification_n2vplus.sb\n\n# submit all evaluations for tissue-specific gene classifications using node2vec\nsbatch eval_tissue_gene_classification_n2v.sb\n```\n\nOr submitting all evaluations above by simply running\n\n```bash\nsh submit_all.sh\n```\n\nNote: depending on the your preference you can modify the nodes requirement in [`submit_all.sh`](submit_all.sh) for individual jobs script.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tuning GNNs",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
          "Evaluation",
          "Submitting evaluation jobs"
        ],
        "type": "Text_excerpt",
        "value": "First, tune the architecture of GNN (hidden dimension, number of layers, residual connection)\n\n```bash\ncd gnn_tuning\nsh tune_gnn_architecture.sb\n```\n\nThen, fix the best architecture and tune the rest of the training parameters (learning rate, dropout rate, weight decay)\n\n```bash\ncd gnn_tuning\nsh tune_gnn_params.sb\n```\n\nTo aggregate the gnn tuning results, use [`aggregate_tuning_results.py`](gnn_tuning/aggregate_tuning_results.py):\n\n```bash\npython gnn_tuning/aggregate_tuning_results.py\n```\n\nFinally, use the [GNN tuning notebook](plot/tune_gnn.ipynb) to analyze the results and find the optimal GNN configurations.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "krishnanlab/node2vecplus_benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Node2vec+ Benchmarks "
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/config.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/submit_all.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/script/get_gtexcoexp/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/script/get_humanbase/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/tune_gnn_architecture.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/gnn_tuning/tune_gnn_params.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7573612"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7007164"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up environment",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "We provide a simple script to set up the [conda](https://conda.io/projects/conda/en/latest/index.html) environemnt `node2vecplus-bench`:\n\n```bash\nsource config.sh setup\n```\n\nTo remove the environment, simply run\n\n```bash\nsource config.sh cleanup\n```\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set up manually",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
          "Setting up environment"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, user can set up the environment manually instead of using the `config.sh` script.\nAdditionally all the required dependencies can be found in [`requirements.txt`](requirements.txt).\n\n* **Step1.** Set up node2vecpluc-bench conda environment with Python 3.8\n\n    ```bash\n    conda create -n node2vecplus-bench python=3.8 && conda activate node2vecplus-bench\n    ```\n\n* **Step2.** Set up [PyTorch](https://pytorch.org) related packages with CUDA 10.2 (checkout the PyTorch website for other CUDA/CPU installation options)\n\n    ```bash\n    conda install pytorch=1.9 torchvision cudatoolkit=10.2 -c pytorch -y\n    pip install torch-geometric==2.0.0 torch-scatter torch-sparse torch-cluster -f https://data.pyg.org/whl/torch-1.9.0+cu102.html\n    ```\n\n* **Step3.** Install rest of the depencies for reproducing experiemnts\n\n    ```bash\n    pip install -r requirements.txt\n    ```\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up gene interaction network (from scratch)",
        "parent_header": [
          "Node2vec+ Benchmarks <a href=\"https://doi.org/10.5281/zenodo.7573612\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7573612.svg\" /></a>",
          "Dev notes"
        ],
        "type": "Text_excerpt",
        "value": "* [STRING](https://doi.org/10.5281/zenodo.3352323)\n* [HumanBase](script/get_humanbase/README.md)\n* [GTExCoExp](script/get_gtexcoexp/README.md)\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999334105227434,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "***PROCEED WITH CAUTION: the full evaluation consumes significant amount of space and computational resources (via [SLURM](https://slurm.schedmd.com/overview.html))***\n```bash\n# Set up conda environment\nsource config.sh setup\n\n# Download and set up gene interaction network data\nsource config.sh download_ppis\n\n# Submit all evaluation jobs\nsh submit_all.sh\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997541611303634,
      "result": {
        "original_header": "Gene interaction networks <a href=\"https://doi.org/10.5281/zenodo.7007164\"><img alt=\"DOI\" src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.7007164.svg\" /></a>",
        "type": "Text_excerpt",
        "value": "```bash\nsource config.sh download_ppis\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962013078450818,
      "result": {
        "original_header": "Extract",
        "type": "Text_excerpt",
        "value": "After the zipped tar ball is downloaded, extract and place them under `data/networks` by\n```bash\ntar -xzvf node2vecplus_bench_ppis.tar.gz --transform 's/node2vecplus_bench_ppis/ppi/' --directory data/networks\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8829801989340808,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "Each one of the above scripts can be run from command line, e.g.\n```bash\ncd script\n\n# example of evaluating K3L2 hierarchical cluster graph using node2vec with q=10\npython evalu_hcluster.py --network K3L2 --q 10 --nooutput\n\n# sample as above but using node2vec+\npython evalu_hcluster.py --netwokr K3L2 --q 10 --nooutput --extend\n\n# check other commandline keyward options \npython eval_hcluster.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999998778719,
      "result": {
        "original_header": "Generating labeled data for gene classification",
        "type": "Text_excerpt",
        "value": "Install additional dev dependencies\n```bash\npip install -r requirements-dev.txt\n```\nOnce the network data are set up and placed under ``data/networks/ppi``, run\n```bash\nprocess_labels.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997436187129857,
      "result": {
        "original_header": "Update gene interaction network data on Zenodo",
        "type": "Text_excerpt",
        "value": "1. Make new dataset version on zenodo and upload corresponding file\n1. Upload file to dropbox for alternative download option\n1. Update README (Zenodo DOI, Zenodo link, Dropbox link)\n1. Update ``config.sh`` Dropbox link\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9299929862615691,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "Each one of the above scripts can be run from command line, e.g.\n```bash\ncd script\n\n# example of evaluating K3L2 hierarchical cluster graph using node2vec with q=10\npython evalu_hcluster.py --network K3L2 --q 10 --nooutput\n\n# sample as above but using node2vec+\npython evalu_hcluster.py --netwokr K3L2 --q 10 --nooutput --extend\n\n# check other commandline keyward options \npython eval_hcluster.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9589083192943604,
      "result": {
        "original_header": "Dev notes",
        "type": "Text_excerpt",
        "value": "Example test commands\n```bash\npython eval_gene_classification_n2v.py --gene_universe HBGTX --network HumanBaseTop-global --p 1 --q 1 --nooutput --test\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, Krishnan Laboratory, Michigan State University.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "node2vecplus_benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "krishnanlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 39802,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 18812,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/node2vecplus_benchmarks/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RemyLau",
          "type": "User"
        },
        "date_created": "2022-12-26T16:20:00Z",
        "date_published": "2023-01-26T15:32:42Z",
        "html_url": "https://github.com/krishnanlab/node2vecplus_benchmarks/releases/tag/archive/bioinformatics",
        "name": "archive/bioinformatics",
        "release_id": 90315162,
        "tag": "archive/bioinformatics",
        "tarball_url": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/tarball/archive/bioinformatics",
        "type": "Release",
        "url": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/releases/90315162",
        "value": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/releases/90315162",
        "zipball_url": "https://api.github.com/repos/krishnanlab/node2vecplus_benchmarks/zipball/archive/bioinformatics"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:21:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}