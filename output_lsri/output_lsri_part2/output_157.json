{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite us",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr"
        ],
        "type": "Text_excerpt",
        "value": "If you use PATO: high PerformAnce TriplexatOr in your research, please cite our\nwork using the following reference:\n\n```bibtex\n@article{amatria2023pato,\n  title={PATO: genome-wide prediction of {lncRNA--DNA} triple helices},\n  author={Amatria-Barral, I{\\~n}aki and Gonz{\\'a}lez-Dom{\\'\\i}nguez, Jorge and Touri{\\~n}o, Juan},\n  journal={Bioinformatics},\n  volume={39},\n  number={3},\n  pages={btad134},\n  year={2023}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Amatria-Barral, I{\\~n}aki and Gonz{\\'a}lez-Dom{\\'\\i}nguez, Jorge and Touri{\\~n}o, Juan",
        "format": "bibtex",
        "title": "PATO: genome-wide prediction of {lncRNA--DNA} triple helices",
        "type": "Text_excerpt",
        "value": "@article{amatria2023pato,\n    year = {2023},\n    pages = {btad134},\n    number = {3},\n    volume = {39},\n    journal = {Bioinformatics},\n    author = {Amatria-Barral, I{\\~n}aki and Gonz{\\'a}lez-Dom{\\'\\i}nguez, Jorge and Touri{\\~n}o, Juan},\n    title = {PATO: genome-wide prediction of {lncRNA--DNA} triple helices},\n}"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UDC-GAC/PATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-29T18:38:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T20:40:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PATO: high PerformAnce TriplexatOr is a high performance tool for the fast and efficient detection of triple helices and triplex features in nucleotide sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9987363794298594,
      "result": {
        "original_header": "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr",
        "type": "Text_excerpt",
        "value": "PATO: high PerformAnce TriplexatOr is a high performance tool for the fast and\nefficient detection of triple helices and triplex features in nucleotide\nsequences. PATO: high PerformAnce TriplexatOr is a modern alternative to\n[Triplexator](https://github.com/Gurado/triplexator) and\n[TDF](https://github.com/CostaLab/reg-gen) and functions as a drop in\nreplacement to accelerate the triplex analyses in multicore computers. Moreover,\nPATO: high PerformAnce TriplexatOr's efficiency allows a more exhaustive search\nof the triplex-forming solution space, and so it achieves higher levels of\nprediction accuracy in far less time than other tools in the state of the art.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UDC-GAC/pato/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UDC-GAC/PATO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UDC-GAC/PATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " PATO: high PerformAnce TriplexatOr"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UDC-GAC/pato/master/.github/PATO.gif"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting the number of threads",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr",
          "Executing PATO"
        ],
        "type": "Text_excerpt",
        "value": "PATO: high PerformAnce TriplexatOr uses OpenMP to parallelize its triplex search\nalgorithms. The OpenMP runtime will automatically spawn as many threads as there\nare available CPU cores. To reduce the number of threads spawned by the\napplication one has to explicitly set the `OMP_NUM_THREADS` environment variable\nto a value greater than 0. For instance, to run PATO: high PerformAnce\nTriplexatOr with 4 threads, execute:\n\n```bash\n$ OMP_NUM_THREADS=4 ./build/tools/PATO/PATO ...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting the number of simultaneous sequences",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr",
          "Executing PATO"
        ],
        "type": "Text_excerpt",
        "value": "To reduce the memory footprint of PATO: high PerformAnce TriplexatOr, one can\nset the maximum number of sequences that may processed simultaneously by the\ntriplex search algorithms. This is done by setting the `-cs` or `--chunk-size`\noption to a value greater than 0 (128 by default). For instance, to process a\ndataset in chunks of 32 sequences, execute:\n\n```bash\n$ ./build/tools/PATO/PATO --chunk-size 32 ...\n```\n\nTo give an upper bound of the memory consumption of PATO: high PerformAnce\nTriplexatOr, one can use the following formula:\n\n$$\n\\begin{flalign}\n& \\text{mem}(cs, t, l) = cs \\cdot \\text{tpx}(l) + cs \\cdot \\text{len}(l) + \\begin{cases}\nt \\cdot \\text{len}(l), & \\text{if } cs > t\\\\\ncs \\cdot \\text{len}(l), & \\text{if } cs \\leq t\n\\end{cases} &\n\\end{flalign}\n$$\n\nwhere $cs$ is the number of simultaneous sequences, $t$ is the number of\nthreads, $l$ is the longest sequence in a given dataset, and $\\text{tpx}(l)$ is\nthe size of the triplex features found in $l$.\n\nIt is possible to further reduce the memory usage of the application by\ndisabling the filtering of low-complex regions. This can be done by setting the\n`-fr` or `--filter-repeats` option to `false`. In such a case, sequences should\nbe filtered before being passed to PATO: high PerformAnce TriplexatOr (the\n[Ensembl genome browser](https://www.ensembl.org) provides filtered sequences)\nand the formula becomes:\n\n$$\n\\begin{flalign}\n& \\text{mem}(cs, t, l) = cs \\cdot \\text{tpx}(l) + cs \\cdot \\text{len}(l) &\n\\end{flalign}\n$$\n\nIn general, one can't go wrong by setting the number of simultaneous sequences\nto a value equal to the number of threads that PATO: high PerformAnce\nTriplexatOr is going to use. However, if the sequences of a dataset are very\nlong, it may be necessary to reduce the number of simultaneous sequences to\navoid running out of memory.\n\nIf you are unsure about the number of simultaneous sequences to use, you can set\nthe `-cs` or `--chunk-size` option to 1. Although this may hurt parallelism by a\nsmall amount, it will allow you to run PATO: high PerformAnce TriplexatOr on any\ndataset without having to worry about the memory footprint of the application.\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Compiling PATO",
        "type": "Text_excerpt",
        "value": "Download the source code from this repository, either use Git or download a copy\nfrom GitHub, and let CMake compile PATO: high PerformAnce TriplexatOr for you:\n```bash\n$ cmake -B build . && cmake --build build\n```\nNote that macOS users must explicitly specify an OpenMP-enabled compiler to\ncompile PATO: high PerformAnce TriplexatOr. For instance, to use `g++-12`\n(available via Homebrew), execute:\n```bash\n$ cmake -B build -D CMAKE_CXX_COMPILER=g++-12 . && cmake --build build\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UDC-GAC/PATO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, high-performance, lncrna, lncrna-dna, openmp, parallel, parallelism, seqan, triplex"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022-onwards I\u00f1aki Amatria-Barral\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr"
        ],
        "type": "Text_excerpt",
        "value": "PATO: high PerformAnce TriplexatOr is free software and as such it is\ndistributed under the [MIT License](LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "UDC-GAC"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 12342234,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 498907,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7279,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2659,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "amatria",
          "type": "User"
        },
        "date_created": "2024-09-11T20:35:35Z",
        "date_published": "2024-09-11T20:36:31Z",
        "description": "PATO 1.0.1 Release",
        "html_url": "https://github.com/UDC-GAC/PATO/releases/tag/1.0.1",
        "name": "PATO 1.0.1",
        "release_id": 174637219,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/UDC-GAC/PATO/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/UDC-GAC/PATO/releases/174637219",
        "value": "https://api.github.com/repos/UDC-GAC/PATO/releases/174637219",
        "zipball_url": "https://api.github.com/repos/UDC-GAC/PATO/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "amatria",
          "type": "User"
        },
        "date_created": "2024-08-21T21:15:36Z",
        "date_published": "2024-08-21T21:16:26Z",
        "description": "PATO 1.0.0 Release",
        "html_url": "https://github.com/UDC-GAC/PATO/releases/tag/1.0.0",
        "name": "PATO 1.0.0",
        "release_id": 171358902,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/UDC-GAC/PATO/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/UDC-GAC/PATO/releases/171358902",
        "value": "https://api.github.com/repos/UDC-GAC/PATO/releases/171358902",
        "zipball_url": "https://api.github.com/repos/UDC-GAC/PATO/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Executing PATO",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr"
        ],
        "type": "Text_excerpt",
        "value": "Now that PATO: high PerformAnce TriplexatOr has been compiled, execute the\napplication as follows:\n\n```bash\n$ ./build/tools/PATO/PATO [options] {-ss tfo_file | -ds tts_file | -ss tfo_file -ds tts_file}\n```\n\nExecute `./build/tools/PATO/PATO --help` for a detailed list of execution modes,\noptions, and flags.\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cheatsheet",
        "parent_header": [
          "<img src=\".github/PATO.gif\"  height=\"64pt\" style=\"margin-bottom: -28%\"> PATO: high PerformAnce TriplexatOr",
          "Executing PATO"
        ],
        "type": "Text_excerpt",
        "value": "To predict Triplex-forming Oligonucleotides (TFOs): run PATO with a\nsingle-stranded sequence file to detect regions that may form triplexes:\n\n```bash\n$ ./build/tools/PATO/PATO -ss single_stranded.fa\n```\n\nThis will generate a file containing TFO regions.\n\nTo predict Triplex Target Sites (TTSs): run PATO with a double-stranded sequence\nfile to detect regions in the sequences that may serve as targets for triplex\nformation:\n\n```bash\n$ ./build/tools/PATO/PATO -ds double_stranded.fa\n```\n\nThis will generate a file containing TTS regions.\n\nTo predict potential triplexes: match TFO regions from a single-stranded\nsequence file with TTS regions from a double-stranded sequence file:\n\n```bash\n$ ./build/tools/PATO/PATO -ss single_stranded.fa -ds double_stranded.fa\n```\n\nThis will produce a file containing all individual triple helices found between\nthe sequences, and another file listing the interaction strength between each\nsequence pair.\n\nTo select candidate triplexes, sort the interactions between each sequence pair\naccording to `Total (rel)` and study the strongest triplexes.\n"
      },
      "source": "https://raw.githubusercontent.com/UDC-GAC/pato/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:35:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ]
}