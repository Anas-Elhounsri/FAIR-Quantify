{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "CellDrift"
        ],
        "type": "Text_excerpt",
        "value": "```\nJin, K., Schnell, D., Li, G., Salomonis, N., Prasath, S., Szczesniak, R., & Aronow, B. J. (2022). CellDrift: Inferring Perturbation Responses in Temporally-Sampled Single Cell Data. Briefings in Bioinformatics (2022): bbac324.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KANG-BIOINFO/CellDrift"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-06T21:15:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-04T09:16:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellDrift: temporal perturbation effects for single cell data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9925292101775509,
      "result": {
        "original_header": "CellDrift",
        "type": "Text_excerpt",
        "value": "Perturbation effects on gene programs are commonly investigated in single-cell experiments. Existing models measure perturbation responses independently across time series, disregarding the temporal consistency of specific gene programs. We introduce CellDrift, a generalized linear model based functional data analysis approach to investigate temporal gene patterns in response to perturbations. \n![overview](Examples/overview.png)\n \n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://celldrift.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KANG-BIOINFO/CellDrift/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KANG-BIOINFO/CellDrift/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KANG-BIOINFO/CellDrift"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellDrift"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/Examples/overview.png"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CellDrift"
        ],
        "type": "Text_excerpt",
        "value": "```python\npip install CellDrift\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Load data and preparation",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\nadata = sc.read(\"example.h5ad\")\nadata.obs['size_factor'] = np.sum(adata.X, axis = 1)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Set up CellDrift object",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\nadata = ct.setup_celldrift(\n    adata, \n    cell_type_key = 'cell_type',\n    perturb_key = 'perturb', \n    time_key = 'time', # the name of time covariate. Must be numeric\n    control_name = 'Control', \n    perturb_name = None, \n    size_factor_key = 'size_factor', \n    batch_key = 'batch', \n    n_reps = 3,\n    n_cells_perBlock = 100,\n    use_pseudotime = False,\n    min_cells_perGene = 0\n)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. set up FDA object",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\ndf_zscore = pd.read_csv('Temporal_CellDrift/Contrast_Coefficients_combined_zscores_.txt', sep = '\\t', header = 0, index_col = 0) # CellDrift z scores\ndf_meta = pd.read_csv('Temporal_CellDrift/Contrast_Coefficients_combined_metadata_.txt', sep = '\\t', header = 0, index_col = 0) # metadata of contrast comparisons\n\nfda = ct.FDA(df_zscore, df_meta)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KANG-BIOINFO/CellDrift/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Kang Jin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellDrift"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "KANG-BIOINFO"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 57759,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisite",
        "parent_header": [
          "CellDrift"
        ],
        "type": "Text_excerpt",
        "value": "```python\n# It's recommended to create a new environment using conda (python 3.7 is recommended)\nconda create -n celldrift_py python=3.7\n# Install prerequisite package scikit-fda (development version)\nconda activate celldrift_py # activate celldrift environment\npip install git+https://github.com/GAA-UAM/scikit-fda.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Run GLM model",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\nadata = ct.model_timescale(\n    adata, \n    n_processes = 16, # number of processes for multiprocessing\n    chunksize = 100, # number of genes in each chunk\n    pairwise_contrast_only = True, \n    adjust_batch = False\n)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:55:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "CellDrift"
        ],
        "type": "Text_excerpt",
        "value": "- [Example on HIV Infection Study](https://github.com/KANG-BIOINFO/CellDrift/blob/main/Tutorial/hiv_infection_tutorial.md)\n- [Example on Pseudo-time Data of Brain Organoid Development](https://github.com/KANG-BIOINFO/CellDrift/blob/main/Tutorial/brain_pseudotime_tutorial.md)\n- [Check the complete Document](https://celldrift.readthedocs.io/en/latest/index.html)\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "CellDrift"
        ],
        "type": "Text_excerpt",
        "value": "```python\nimport numpy as np\nimport pandas as pd\nimport scanpy as sc\nimport CellDrift as ct\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. temporal clustering",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfd, genes = fda.create_fd_genes(genes = df_zscore.index.values, cell_type = 'Type_0', perturbation = 'Perturb_0')\ndf_cluster = ct.fda_cluster(fd, genes, n_clusters = 3)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. visualization for each temporal cluster",
        "parent_header": [
          "CellDrift",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "```python\nct.draw_smoothing_clusters(\n    fd, \n    df_cluster, \n    n_neighbors = 2, \n    bandwidth = 1,\n    cluster_key = 'clusters_fuzzy', \n    output_folder = 'Temporal_CellDrift/cluster_fuzzy/'\n)\n```"
      },
      "source": "https://raw.githubusercontent.com/KANG-BIOINFO/CellDrift/main/README.md",
      "technique": "header_analysis"
    }
  ]
}