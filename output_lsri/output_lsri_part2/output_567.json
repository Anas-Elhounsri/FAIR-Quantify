{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference LD",
        "parent_header": [
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "The reference LD matrices based on 1000 Genome Hapmap3 SNPs can be downloaded from the following link. \n\n| Populations | Number of SNPs | Size | Link\n| --- | --- | --- | --- |\n| EUR_EAS | 873,166 | 6.3G | [link](https://drive.google.com/file/d/1MGt-Ai5foThXBF1xAZMKksBRqZGsbQ1l/view?usp=sharing) |\n| EUR_AFR | 903,499 | 8.7G | [link](https://drive.google.com/file/d/1cbcfCicsuARfcv231tY98PTnAoOoQS8O/view?usp=sharing) |\n\nYou can use the following command if you wish to use your LD panel to estimate LD matrix. \n\n```\npython calc_ref.py --ref_path1 path_to_plink1_prefix_pop1 --ref_path2 path_to_plink1_prefix_pop2 --chrom chr_number --threads 3 --out ./\n```\n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Zhou G, Chen T, Zhao H. SDPRX: A statistical method for cross-population prediction of complex traits. Am J Hum Genet. 2023 Jan 5;110(1):13-22. doi: 10.1016/j.ajhg.2022.11.007. \n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eldronzhou/SDPRX"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-25T19:42:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-13T19:01:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A statistical method for cross-population prediction of complex traits"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary Statistics",
        "parent_header": [
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "The EUR/nonEUR summary statistics should have at least following columns with the same name, where SNP is the marker name, A1 is the effect allele, A2 is the alternative allele, Z is the Z score for the association statistics, and N is the sample size. \n\n```\nSNP     A1      A2      Z       N\nrs737657        A       G       -2.044      252156\nrs7086391       T       C       -2.257      248425\nrs1983865       T       C       3.652    253135\n...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9973646981819346,
      "result": {
        "original_header": "SDPRX",
        "type": "Text_excerpt",
        "value": "SDPRX is a statistical method for cross-population prediction of complex traits. It integrates GWAS summary statistics and LD matrices from two populations (EUR and non-EUR) to compuate polygenic risk scores.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9359030543263593,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "There are two output files corresponding to the adjusted effect sizes for EUR (e.g. res_22_1.txt) and non-EUR population (e.g. res_22_2.txt).\nOne can use [PLINK](https://www.cog-genomics.org/plink/1.9/score) to derive the PRS.\n```\nplink --bfile test_geno --score res_22_1.txt 1 2 3 header --out test_1 # EUR\nplink --bfile test_geno --score res_22_2.txt 1 2 3 header --out test_2 # non-EUR\n```\nIf a validation dataset is available, one can further learn a linear combination of PRS (a * PRS_1 + (1-a) * PRS_2 for a grid of a ranging from 0 to 1 by a step of 0.5) based on the best performance in the validation dataset. \n \n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8870120683555989,
      "result": {
        "original_header": "Weights",
        "type": "Text_excerpt",
        "value": "The weights for real traits analyzed in our paper can be downloaded [here](https://drive.google.com/file/d/1bDaTVnitwAizhhW7IJqpx-tbXJIdm7S4/view?usp=share_link). \n \n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eldronzhou/SDPRX/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eldronzhou/SDPRX/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eldronzhou/SDPRX"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "You can download SDPRX by simply running\n\n```\ngit clone https://github.com/eldronzhou/SDPRX.git\n```\n\nSDPRX is developed under python 2.7 but should be compatible with python 3. We recommend you to run SDPRX in the [Anaconda](https://docs.anaconda.com/anaconda/install/index.html) so that libraries like numpy and scipy would be pre-installed. If running in the Anaconda environment, the only requirement to run SDPRX would be installing [joblib](https://joblib.readthedocs.io/en/latest/installing.html).\n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eldronzhou/SDPRX/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Geyu Zhou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SDPRX"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "eldronzhou"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 41387,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://joblib.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running SDPRX",
        "type": "Text_excerpt",
        "value": "An example command to run the test data is \n\n```\npython SDPRX.py --ss1 test/EUR.txt --ss2 test/EAS.txt --N1 40000 --N2 40000 --force_shared TRUE --load_ld test/ --valid test/test.bim --chr 1 --rho 0.8 --out test/res_1\n```\n\nA full list of options can be obtained by running `python SDPRX.py -h`. Below are the required options.\n\n- ss1 (required): Path to the EUR summary statistics.\n- ss2 (required): Path to the non-EUR summary statistics.\n- N1 (required): Sample size of the EUR summary statistics.\n- N2 (required): Sample size of the non-EUR summary statistics.\n- load_ld (required): Path to the referecence LD directory.\n- valid (required): Path to the bim file for the testing dataset, including the .bim suffix.\n- chr (required): Chromosome.\n- out (required): Path to the output file containing estimated effect sizes.\n- rho (required): Trans-ethnic genetic correlation output by PopCorn between 0 and 1. Default is 0.8. \n- force_shared (required): Whether to force sharing of effect sizes between populations. Default is True.\n- n_threads (optional): number of threads to use. Default is 1.\n\nFor real data analysis, it is recommended to run each SDPRX on each chromosome in parallel, and using 3 threads for each chromsome.  \n"
      },
      "source": "https://raw.githubusercontent.com/eldronzhou/SDPRX/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:11:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}