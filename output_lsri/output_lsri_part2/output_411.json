{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "DISCO"
        ],
        "type": "Text_excerpt",
        "value": "If you use DISCO, please cite:\n```\n@article{willson2022disco,\n  title={DISCO: Species tree inference using multicopy gene family tree decomposition},\n  author={Willson, James and Roddur, Mrinmoy Saha and Liu, Baqiao and Zaharias, Paul and Warnow, Tandy},\n  journal={Systematic Biology},\n  volume={71},\n  number={3},\n  pages={610--629},\n  year={2022},\n  publisher={Oxford University Press}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Willson, James and Roddur, Mrinmoy Saha and Liu, Baqiao and Zaharias, Paul and Warnow, Tandy",
        "format": "bibtex",
        "title": "DISCO: Species tree inference using multicopy gene family tree decomposition",
        "type": "Text_excerpt",
        "value": "@article{willson2022disco,\n    publisher = {Oxford University Press},\n    year = {2022},\n    pages = {610--629},\n    number = {3},\n    volume = {71},\n    journal = {Systematic Biology},\n    author = {Willson, James and Roddur, Mrinmoy Saha and Liu, Baqiao and Zaharias, Paul and Warnow, Tandy},\n    title = {DISCO: Species tree inference using multicopy gene family tree decomposition},\n}"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JSdoubleL/DISCO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-19T19:53:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T13:35:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Decomposition Into Single-COpy gene trees (DISCO) is a method for decomposing multi-copy gene-family trees while attempting to preserve orthologs and discard paralogs."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9843841931569759,
      "result": {
        "original_header": "DISCO",
        "type": "Text_excerpt",
        "value": "Decomposition Into Single-COpy gene trees ([DISCO](https://doi.org/10.1093/sysbio/syab070)) is a method for decomposing multi-copy gene-family trees while attempting to preserve orthologs and discard paralogs. These single-copy gene trees can be subsequently used by methods that can estimate species trees from single-copy gene trees such as [ASTRAL](https://github.com/smirarab/ASTRAL) or [ASTRID](https://github.com/pranjalv123/ASTRID) in order to obtain an accurate estimation of the species tree. Additionally, DISCO can be paired with concatenation analysis using the script `ca_disco.py`.  \n**NOTE:** For species tree estimation default settings are recommended; however, for orthology detection using `-m 2` is recommended so small groups are retrieved. It is also highly recommended that you use the most recent version of DISCO, as it deals with some limitations of TreeSwift.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8980947137296867,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "- v1.0 (May 21st 2021): Initial Release\n- v1.1 (July 19th, 2021): Added `ca_disco.py` and adjustable filter (instead of just filtering all trees with less than 4 taxa)\n- v1.2 (June 8th, 2022): Tree rerooting fix (addresses issue with treeswift rooting with no edge lengths)\n- v1.3 (July 8th, 2022): Allows for more flexibility with leaf labels\n- v1.3.1 (October 31st, 2022): Fixes issue where extra newline character at the end of the file causes a crash \n- v1.4.0 (April 21st, 2024): Added ability to make a partition file to CA-DISCO \n**Note:** At present, it is recommended to use the latest version if you want to run the DISCO algorithm as described in Willson et al. 2021, as using earlier versions can causes results inconsistent with the DISCO algorithm in rare cases. \n \n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9241936246121265,
      "result": {
        "original_header": "Algorithm",
        "type": "Text_excerpt",
        "value": "Given a list of multi-copy gene trees, DISCO does the following for each tree: \n1. Root the tree and tag each internal vertex as either a duplication event or a speciation event in such a way that minimizes the total number of duplications and losses. We do this with the ASTRAL-Pro rooting and tagging algorithm ([Zhang et. al. 2020](https://doi.org/10.1093/molbev/msaa139)).\n2. Decompose gene tree by splitting off the smallest subtree under every vertex tagged as a duplication from the leaves to the root until all duplication events are resolved; it returns the set of single-copy trees produced.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JSdoubleL/DISCO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JSdoubleL/DISCO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DISCO"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8834466289028153,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "- v1.0 (May 21st 2021): Initial Release\n- v1.1 (July 19th, 2021): Added `ca_disco.py` and adjustable filter (instead of just filtering all trees with less than 4 taxa)\n- v1.2 (June 8th, 2022): Tree rerooting fix (addresses issue with treeswift rooting with no edge lengths)\n- v1.3 (July 8th, 2022): Allows for more flexibility with leaf labels\n- v1.3.1 (October 31st, 2022): Fixes issue where extra newline character at the end of the file causes a crash \n- v1.4.0 (April 21st, 2024): Added ability to make a partition file to CA-DISCO \n**Note:** At present, it is recommended to use the latest version if you want to run the DISCO algorithm as described in Willson et al. 2021, as using earlier versions can causes results inconsistent with the DISCO algorithm in rare cases. \n \n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2024 James Willson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DISCO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JSdoubleL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17921,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2024-04-21T06:41:10Z",
        "date_published": "2024-04-21T06:43:26Z",
        "description": "- Added ability to create a partition file to CA-DISCO",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.4",
        "name": "DISCO v1.4",
        "release_id": 152076623,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/152076623",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/152076623",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2022-10-31T19:45:33Z",
        "date_published": "2022-10-31T19:50:10Z",
        "description": "* Fixed issue where extra newline characters in the input would cause an exception.",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.3.1",
        "name": "DISCO v1.3.1",
        "release_id": 81591950,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/81591950",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/81591950",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2022-07-08T20:13:32Z",
        "date_published": "2022-07-08T20:20:11Z",
        "description": "- Allowed for more flexibility in species names by allowing them to be split from the rest of the leaf label on the nth instance of the delimiter instead of only the first. This can be set with the `-n` option.",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.3",
        "name": "DISCO v1.3",
        "release_id": 71600132,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/71600132",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/71600132",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2022-06-08T16:55:50Z",
        "date_published": "2022-06-08T17:02:57Z",
        "description": "- DISCO now, by default, outputs trees with leaves labeled only by the species name; `-k` option is added to keep original leaf labels from the multi-copy input trees.\r\n- Minor fix to tree rerooting",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.2",
        "name": "DISCO v1.2",
        "release_id": 68979040,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/68979040",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/68979040",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2021-07-16T23:56:33Z",
        "date_published": "2021-07-19T20:08:12Z",
        "description": "- Adds `-m` argument, which can be used to adjust the minimum number of taxa per tree in the output.\r\n- Adds `ca_disco.py` script used to create concatenated alignments with DISCO decomposition. ",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.1",
        "name": "DISCO v1.1",
        "release_id": 46435202,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/46435202",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/46435202",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JSdoubleL",
          "type": "User"
        },
        "date_created": "2021-05-21T13:52:57Z",
        "date_published": "2021-05-21T14:53:42Z",
        "description": "Initial Release of DISCO script",
        "html_url": "https://github.com/JSdoubleL/DISCO/releases/tag/v1.0",
        "name": "DISCO v1.0",
        "release_id": 43358429,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/JSdoubleL/DISCO/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/JSdoubleL/DISCO/releases/43358429",
        "value": "https://api.github.com/repos/JSdoubleL/DISCO/releases/43358429",
        "zipball_url": "https://api.github.com/repos/JSdoubleL/DISCO/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "DISCO"
        ],
        "type": "Text_excerpt",
        "value": "- Python 3\n- [TreeSwift](https://github.com/niemasd/TreeSwift)\n\nTreeswift can be installed with: `pip install treeswift`\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:36:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "disco.py",
        "parent_header": [
          "DISCO",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Input**: File containing list of multi-copy trees in newick format\n\n**Output**: File containing resulting list of single-copy trees after decomposition in newick format\n\n```\npython3 disco.py -i <input_file> -o <ouput_file> -d <delimiter>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required",
        "parent_header": [
          "DISCO",
          "Usage",
          "ca_disco.py",
          "Arguments"
        ],
        "type": "Text_excerpt",
        "value": "```\n-i, --input           Input newick tree file\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional",
        "parent_header": [
          "DISCO",
          "Usage",
          "ca_disco.py",
          "Arguments"
        ],
        "type": "Text_excerpt",
        "value": "```\n-o, --output          Output newick tree file\n-d, --delimiter       Delimiter separating species name from rest of leaf label\n-s, --single-tree     Output only single large tree per gene tree \n-n, --nth-delimiter   Split on Nth delimiter (only works with -d)\n-m, --minimum         Minimum number of taxa required for tree to be outputted\n-v, --verbose         Enable verbose output\n--keep-labels         Keep original leaf labels instead of using species name\n--no-decomp           Outputs rooted trees without decomposition\n--outgroups           Write outgroups (including ties) to txt file\n--remove-in-paralogs  Remove in-paralogs before rooting/scoring\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "DISCO",
          "Usage",
          "ca_disco.py"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython3 disco.py -i example/gtrees-mult.trees\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ca_disco.py",
        "parent_header": [
          "DISCO",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Input**: File containing list of multi-copy trees in newick format and set of alignment files corresponding to the gene families.\n\n**Output**: Concatenated alignment file\n\n```\npython3 ca_disco.py -i <input_trees> -a <aln_list> -o <output> -d <delimiter> -m <number> \n```\n\n`disco.py` must be present in the same directory as `ca_disco.py` in order for it to run. Also, unlike `disco.py`, it is necessary for the input newick trees given to `ca_disco.py` to have unique leaf labels where the taxon name comes first and is separated from the rest of the name by some delimiter. \n\nThe `-a` argument should be given the path to an \"alignment list\" file containing the path to each alignment file you want to concatinate separated by a new line. The order of the alignment files is important---for each tree in the input newick tree file, there should be a corresponding alignment on the same line in the respective alignment list file.  \n\n#### Arguments\n\n##### Required\n\n```\n-i, --input           Input newick tree file\n-a, --alignment       Text file containing paths to alignment files\n-f, --format          Format of alignment file (either \"fasta\" or \"phylip\")\n-o, --output          Output concatenated alignment file\n```\n\n##### Optional\n```\n-m, --filter          Minimum number of taxa required sequence group to be included\n-d, --delimiter       Delimiter separating species name from rest of leaf label\n-p, --partition       Create partition file\n```\n\n#### Example\n\n```bash \npython3 ca_disco.py -i example/g_100.trees -o example.phy -a example/seq_list.csv -f phylip\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Partition File",
        "parent_header": [
          "DISCO",
          "Usage",
          "ca_disco.py"
        ],
        "type": "Text_excerpt",
        "value": "`ca_disco.py` now has the option to create a partition file; this can be done with the optional `-p` argument. If this argument is specified, it is necessary to provide relavent information in the alignment list file. For example, see `example/seq_list.csv`. This would generate a partition file like so:\n```\nGTR+G, 0001=1-200\nGTR+G, 0002=201-700\nGTR+G, 0004=701-1300\n...\n```\n**Note:** Gene 0003 is missing. This is not a mistake; this is because it does not have enough informative information to generate large enough DISCO subtrees and thus is not included in the alignment.\n\n"
      },
      "source": "https://raw.githubusercontent.com/JSdoubleL/DISCO/master/README.md",
      "technique": "header_analysis"
    }
  ]
}