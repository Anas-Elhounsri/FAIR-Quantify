{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use code from this repository in your work we kindly ask to cite accordingly:\n\n> Kucera, T., Togninalli, M., & Meng-Papaxanthos, L. (2022). Conditional generative modeling for de novo protein design with hierarchical functions. Bioinformatics, 38(13), 3454-3461.\n\n```\n@article{10.1093/bioinformatics/btac353,\n    author = {Kucera, Tim and Togninalli, Matteo and Meng-Papaxanthos, Laetitia},\n    title = \"{Conditional generative modeling for de novo protein design with hierarchical functions}\",\n    journal = {Bioinformatics},\n    volume = {38},\n    number = {13},\n    pages = {3454-3461},\n    year = {2022},\n    month = {05},\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btac353},\n    url = {https://doi.org/10.1093/bioinformatics/btac353},\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/38/13/3454/44268843/btac353.pdf},\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Kucera, Tim and Togninalli, Matteo and Meng-Papaxanthos, Laetitia",
        "doi": "10.1093/bioinformatics/btac353",
        "format": "bibtex",
        "title": "{Conditional generative modeling for de novo protein design with hierarchical functions}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btac353",
        "value": "@article{10.1093/bioinformatics/btac353,\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/38/13/3454/44268843/btac353.pdf},\n    url = {https://doi.org/10.1093/bioinformatics/btac353},\n    doi = {10.1093/bioinformatics/btac353},\n    issn = {1367-4803},\n    month = {05},\n    year = {2022},\n    pages = {3454-3461},\n    number = {13},\n    volume = {38},\n    journal = {Bioinformatics},\n    title = {{Conditional generative modeling for de novo protein design with hierarchical functions}},\n    author = {Kucera, Tim and Togninalli, Matteo and Meng-Papaxanthos, Laetitia},\n}"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/timkucera/proteogan"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-04T17:02:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-12T15:23:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protein generative model conditioned on Gene Ontology terms"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9081973999895657,
      "result": {
        "original_header": "ProteoGAN",
        "type": "Text_excerpt",
        "value": "This repository contains code accompanying [**\"Conditional generative modeling for *de novo* protein design with hierarchical functions\"**](https://doi.org/10.1093/bioinformatics/btac353). It provides the data used to train and evaluate the model, the evaluation metrics, and ProteoGAN itself with pretrained weights. \nNote that, due to conflicts with our license, evaluations with UniRep and ProFET embeddings are not included in this repository. However, it is relatively straightforward to include any alternative embedding by providing a mapping function to the modules in `proteogan.metrics`. (See also bibliography notes below) \nYou may use the MMD and MRR metrics to evaluate your own generated sequences. Note that the metric values depend on the reference sequence set they are applied to. We provide the reference sets of the paper in this repository. Load them with:\n```python\nfrom data.util import load\n\nsplit = 1\ntrain = load('train', split)\ntest = load('test', split)\nval = load('val', split)\n```\n \nThe dataset contains primary sequences of 150.000 proteins and their annotations of 50 GO molecular function labels (compare paper). \nOnce you have generated some sequences, provide them to MMD and MMR. MRR needs the labels the generated sequences were conditioned on as a list of lists. Usually these would be the labels of a test set you want to compare to.\n```python\nfrom metrics.similarity import mmd\nfrom metrics.conditional import mrr\n\ngenerated = ['MLAVEGSALLVS...', 'MALSEGALSVGELA...', ...] # use your model to generate these, conditioned on test['labels']\n\nMMD = mmd(generated, test['sequence'])\nMRR = mrr(generated, test['labels'], test['sequence'], test['labels'])\n\n```\n \nYou may also use `train.util.BaseTrainer` to implement your own model and reuse our training and evaluation loop. See `train/train.py` for details. \n"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9903689412038349,
      "result": {
        "original_header": "Bibliography",
        "type": "Text_excerpt",
        "value": "The code in this repository is based on the following works:\n```\n\nAbadi, Mart\u00edn, et al. \"Tensorflow: A system for large-scale machine learning.\" 12th {USENIX} symposium on operating systems design and implementation ({OSDI} 16). 2016.\n\nDa Costa-Luis, Casper, et al. \"tqdm: A fast, Extensible Progress Bar for Python and CLI.\" Zenodo. Apr (2021).\n\nHarris, Charles R., et al. \"Array programming with NumPy.\" Nature 585.7825 (2020): 357-362.\n\nHunter, John D. \"Matplotlib: A 2D graphics environment.\" Computing in science & engineering 9.03 (2007): 90-95.\n\nKlopfenstein, D. V., et al. \"GOATOOLS: A Python library for Gene Ontology analyses.\" Scientific reports 8.1 (2018): 1-17.\n\nMcKinney, Wes. \"Data structures for statistical computing in python.\" Proceedings of the 9th Python in Science Conference. Vol. 445. 2010.\n\nMeanti, Giacomo, et al. \"Kernel methods through the roof: handling billions of points efficiently.\" arXiv preprint arXiv:2006.10350 (2020).\n\nPaszke, Adam, et al. \"Pytorch: An imperative style, high-performance deep learning library.\" Advances in neural information processing systems 32 (2019): 8026-8037.\n\nVirtanen, Pauli, et al. \"SciPy 1.0: fundamental algorithms for scientific computing in Python.\" Nature methods 17.3 (2020): 261-272.\n\nWaskom, Michael L. \"Seaborn: statistical data visualization.\" Journal of Open Source Software 6.60 (2021): 3021.\n\n```\nAlthough not used in this repository, we refer to the following works as they have been very helpful to obtain the results in the paper:\n```\n\nAlley, Ethan C., et al. \"Unified rational protein engineering with sequence-based deep representation learning.\" Nature methods 16.12 (2019): 1315-1322.\n\nMa, Eric J., and Arkadij Kummer. \"Reimplementing Unirep in JAX.\" bioRxiv (2020).\n\nOfer, Dan, and Michal Linial. \"ProFET: Feature engineering captures high-level protein functions.\" Bioinformatics 31.21 (2015): 3429-3436.\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/timkucera/proteogan/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/timkucera/proteogan/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "timkucera/proteogan"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.812250292187874,
      "result": {
        "original_header": "ProteoGAN",
        "type": "Text_excerpt",
        "value": "To train ProteoGAN, run `python -m train.train proteogan 1`, where `1` is the split number (1 to 5). Loss curves, generated sequences and model weights are saved to `train/split_1/proteogan/`. To evaluate the metrics MMD and MRR, run `python -m train.eval proteogan 1`. Pretrained weights for split 1 are provided with this repository. \nOnce you have generated some sequences, provide them to MMD and MMR. MRR needs the labels the generated sequences were conditioned on as a list of lists. Usually these would be the labels of a test set you want to compare to.\n```python\nfrom metrics.similarity import mmd\nfrom metrics.conditional import mrr\n\ngenerated = ['MLAVEGSALLVS...', 'MALSEGALSVGELA...', ...] # use your model to generate these, conditioned on test['labels']\n\nMMD = mmd(generated, test['sequence'])\nMRR = mrr(generated, test['labels'], test['sequence'], test['labels'])\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/timkucera/proteogan/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Tim Kucera\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "proteogan"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "timkucera"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 39452,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2006.10350 (2020).\n\nPaszke, Adam, et al. \"Pytorch: An imperative style, high-performance deep learning library.\" Advances in neural information processing systems 32 (2019): 8026-8037.\n\nVirtanen, Pauli, et al. \"SciPy 1.0: fundamental algorithms for scientific computing in Python.\" Nature methods 17.3 (2020): 261-272.\n\nWaskom, Michael L. \"Seaborn: statistical data visualization.\" Journal of Open Source Software 6.60 (2021): 3021.\n\n```\n\nAlthough not used in this repository, we refer to the following works as they have been very helpful to obtain the results in the paper:\n\n```\n\nAlley, Ethan C., et al. \"Unified rational protein engineering with sequence-based deep representation learning.\" Nature methods 16.12 (2019): 1315-1322.\n\nMa, Eric J., and Arkadij Kummer. \"Reimplementing Unirep in JAX.\" bioRxiv (2020).\n\nOfer, Dan, and Michal Linial. \"ProFET: Feature engineering captures high-level protein functions.\" Bioinformatics 31.21 (2015): 3429-3436.\n\n```"
      },
      "source": "https://raw.githubusercontent.com/timkucera/proteogan/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "timkucera",
          "type": "User"
        },
        "date_created": "2022-05-29T14:51:10Z",
        "date_published": "2022-05-29T15:06:26Z",
        "html_url": "https://github.com/timkucera/proteogan/releases/tag/v1.0.0",
        "name": "Publication",
        "release_id": 68095867,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/timkucera/proteogan/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/timkucera/proteogan/releases/68095867",
        "value": "https://api.github.com/repos/timkucera/proteogan/releases/68095867",
        "zipball_url": "https://api.github.com/repos/timkucera/proteogan/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:19:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ]
}