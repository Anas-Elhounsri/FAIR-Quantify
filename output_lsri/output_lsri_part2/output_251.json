{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/emo-bon/MetaGOflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-15T13:40:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-10T00:41:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MGnify oriented implementation for the Marine Genomic Observatories oriented pipeline, developed in the framework of an EOSC-Life funded project"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9873492311606447,
      "result": {
        "original_header": "An EOSC-Life project",
        "type": "Text_excerpt",
        "value": "The workflows developed in the framework of this project are based on `pipeline-v5` of the MGnify resource. \n> This branch is a child of the [`pipeline_5.1`](https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1) branch\n> that contains all CWL descriptions of the MGnify pipeline version 5.1.\n \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9726444111567959,
      "result": {
        "original_header": "Testing samples",
        "type": "Text_excerpt",
        "value": "We provide metaGOflow with partial samples from the Human Metagenome Project ([SRR1620013](https://www.ebi.ac.uk/ena/browser/view/SRR1620013) and [SRR1620014](https://www.ebi.ac.uk/ena/browser/view/SRR1620014))\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way.  \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8560480131230463,
      "result": {
        "original_header": "Hints and tips",
        "type": "Text_excerpt",
        "value": "1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`. \n3. In case you are having errors like:\n```\ncwltool.errors.WorkflowException: Singularity is not available for this tool\n```\nYou may run the following command:\n```\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9792493655354015,
      "result": {
        "original_header": "Contribution",
        "type": "Text_excerpt",
        "value": "To make contribution to the project a bit easier, all the MGnify `conditionals` and `subworkflows` under\nthe `workflows/` directory that are not used in the metaGOflow framework, have been removed.   \nHowever, all the MGnify `tools/` and `utils/` are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their own `conditionals` and/or `subworkflows` by exploiting the\ncurrently supported `tools` and `utils` as well as by developing new `tools` and/or `utils`. \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/emo-bon/MetaGOflow/wiki"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download necessary databases (~235GB)",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can download databases for the EOSC-Life GOs workflow by running the\n`download_dbs.sh` script under the `Installation` folder.\n\n```bash\nbash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \n```\nIf you have one or more already in your system, then create a symbolic link pointing\nat the `ref-dbs` folder or at one of its subfolders/files.\n\nThe final structure of the DB directory should be like the following:\n\n````bash\nuser@server:~/MetaGOflow: ls ref-dbs/\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\n````\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/emo-bon/MetaGOflow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/emo-bon/MetaGOflow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "emo-bon/MetaGOflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metaGOflow: A workflow for marine Genomic Observatories' data analysis"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_python3/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_python3/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_python2/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_python2/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/GO-slim/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/GO-slim/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/easel/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/easel/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/cmsearch-deoverlap/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/cmsearch-deoverlap/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/krona/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/krona/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/biom-convert/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/biom-convert/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/cmsearch/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/cmsearch/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/mapseq2biom/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/mapseq2biom/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/extract-coords/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/extract-coords/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/mapseq/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/mapseq/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/hmmer/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/hmmer/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/fastp/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/fastp/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Trimmomatic/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Trimmomatic/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/EggNOG/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/EggNOG/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Genome_properties/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Genome_properties/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/accessioning/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/accessioning/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Diamond/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Diamond/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/mask-for-ITS/bedtools/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/mask-for-ITS/bedtools/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/InterProScan/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/InterProScan/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/FragGeneScan/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/FragGeneScan/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/Prodigal/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/Prodigal/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/CGC/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/CGC/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Raw_reads/mOTUs/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Raw_reads/mOTUs/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/chunks/dna_chunker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/chunks/dna_chunker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/SeqPrep/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/SeqPrep/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/result-file-chunker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/result-file-chunker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/slurm_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/run_wf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/docker_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/docker_push.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/run_antismash_short.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/diamond_post_run_join.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/run_samtools_docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/pull_ncrnas.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/add_symbol_json.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/biom-convert.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/empty_tax.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/esl-ssplit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/clean_motus_output.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/docker/scripts_bash/remove_symbol.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/easel/esl-index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/pull_ncrnas/pull_ncrnas.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/biom-convert/biom-convert.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/index_fasta/run_samtools_docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/antismash/run_antismash_short.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/antismash/install_4.2.0.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Diamond/Diamond-Post-Processing/diamond_post_run_join.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/fetch-tool/get_raw_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Raw_reads/mOTUs/clean_motus_output.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/chunks/dna_chunker/esl-ssplit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/Installation/download_dbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/Installation/get_singularity_images.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/result-file-chunker/split_fasta_by_size.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run once - Setup environment",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run",
          "Set up the environment"
        ],
        "type": "Text_excerpt",
        "value": "This will create a conda env called `metagoflow`.\n\n```bash\nconda env create -f conda_environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9985312510485878,
      "result": {
        "original_header": "Hints and tips",
        "type": "Text_excerpt",
        "value": "1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`. \n3. In case you are having errors like:\n```\ncwltool.errors.WorkflowException: Singularity is not available for this tool\n```\nYou may run the following command:\n```\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/emo-bon/MetaGOflow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaGOflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "ontologies": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/schemas/EDAM_1.16.owl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/schemas/EDAM_1.20.owl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/schemas/EDAM_1.18.owl"
      },
      "technique": "file_exploration"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "emo-bon"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 266477,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 236852,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 39727,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 37164,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 30788,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2023-04-05T11:35:25Z",
        "date_published": "2023-05-10T21:27:47Z",
        "description": "## metaGOflow goes public\r\n\r\nThis is the 1st release of metaGOflow including: \r\n- the 5 main steps of the analysis (filtering, taxonomy inventories, gene calling, functional annotation and assembly) \r\n- the creation of an RO-crate including the workflows' outcomes, the config file of the user, the config file metaGOflow automatically builds based on that and the `ro-crate-metadata.json` file. \r\n\r\n## Issues addressed \r\n* update readme by @cpavloud in https://github.com/emo-bon/MetaGOflow/pull/3\r\n* Develop by @hariszaf in https://github.com/emo-bon/MetaGOflow/pull/8\r\n* adds new dataset for quick runs by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/12\r\n* Validation of wf syntax on push by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/17\r\n* add descriptions of vars provided by the user by @hariszaf in https://github.com/emo-bon/MetaGOflow/pull/14\r\n* adds interproscan fine tune (rebuild branch) by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/20\r\n* Schemas source change by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/21\r\n* small changes readme by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/22\r\n* Ro crate for the metaGOflow output by @hariszaf in https://github.com/emo-bon/MetaGOflow/pull/27\r\n* refactoring and improve description of running the workflow and envir\u2026 by @jprmachado in https://github.com/emo-bon/MetaGOflow/pull/24\r\n* RO-crate, optimisations and documentation  by @hariszaf in https://github.com/emo-bon/MetaGOflow/pull/28\r\n* fix path for rfam models #29 by @hariszaf in https://github.com/emo-bon/MetaGOflow/pull/30\r\n\r\n## New Contributors\r\n* @cpavloud made their first contribution in https://github.com/emo-bon/MetaGOflow/pull/3\r\n* @jprmachado made their first contribution in https://github.com/emo-bon/MetaGOflow/pull/12\r\n\r\n**Full Changelog**: https://github.com/emo-bon/MetaGOflow/compare/v5.0.5...v1.0.0\r\n",
        "html_url": "https://github.com/emo-bon/MetaGOflow/releases/tag/v1.0.0",
        "name": "metaGOflow first release",
        "release_id": 102547696,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/emo-bon/MetaGOflow/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/emo-bon/MetaGOflow/releases/102547696",
        "value": "https://api.github.com/repos/emo-bon/MetaGOflow/releases/102547696",
        "zipball_url": "https://api.github.com/repos/emo-bon/MetaGOflow/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis"
        ],
        "type": "Text_excerpt",
        "value": "To run metaGOflow you need to make sure you have the following set on your computing environmnet first:\n\n- python [v 3.8+]\n- [Docker](https://www.docker.com) [v 19.+] or [Singularity](https://apptainer.org) [v 3.7.+]/[Apptainer](https://apptainer.org) [v 1.+]\n- [cwltool](https://pypi.org/project/cwltool/) [v 3.+]\n- [rocrate](https://pypi.org/project/rocrate/) [v 0.7.0]\n- [ruamel.yaml](https://pypi.org/project/ruamel.yaml) [v 0.17.32+]\n- [Node.js](https://nodejs.org/) [v 10.24.0+]\n- Available storage ~160GB for databases\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Storage while running",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Depending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis"
        ],
        "type": "Text_excerpt",
        "value": "We recommend utilizing [Conda](https://docs.conda.io/projects/conda/en/stable/) to create a virtual environment. We provide a Conda [environment file](conda_environment.yml) that includes the necessary dependencies.\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run once - Setup environment",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run",
          "Set up the environment"
        ],
        "type": "Text_excerpt",
        "value": "This will create a conda env called `metagoflow`.\n\n```bash\nconda env create -f conda_environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run every time",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run",
          "Set up the environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nconda activate metagoflow\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the workflow",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run"
        ],
        "type": "Text_excerpt",
        "value": "- Edit the `config.yml` file to set the parameter values of your choice. For selecting all the steps, then set to `true` the variables in lines [2-6].\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Standalone",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run",
          "Run the workflow",
          "Using Docker"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n./run_wf.sh -s -n osd-short \\\n-d short-test-case \\\n-f test_input/wgs-paired-SRR1620013_1.fastq.gz \\\n-r test_input/wgs-paired-SRR1620013_2.fastq.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using a cluster with a queueing system (e.g. SLURM)",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "How to run",
          "Run the workflow",
          "Using Singularity"
        ],
        "type": "Text_excerpt",
        "value": "- Create a job file (e.g., SBATCH file)\n\n- Enable Singularity, e.g. module load Singularity & all other dependencies \n\n- Add the run line to the job file\n\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:56:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get the EOSC-Life marine GOs workflow",
        "parent_header": [
          "metaGOflow: A workflow for marine Genomic Observatories' data analysis",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/emo-bon/MetaGOflow\ncd MetaGOflow\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/gos_wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/conditionals/qc.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/conditionals/rna-prediction.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/conditionals/Func_ann_and_post_proccessing-subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/rna_prediction-sub-wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/func_summaries.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/classify-otu-visualise.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/other_ncrnas.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/chunking-subwf-IPS.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/assembly/eggnog-subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/hmmer/chunking-subwf-hmmscan.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/hmmer/chunking-subwf-hmmsearch.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/functional-annotation/functional-annotation.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/functional-annotation/post-proccessing-go-pfam-stats-subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/cmsearch/cmsearch-multimodel-assembly.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/cmsearch/cmsearch-condition.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/cmsearch/cmsearch-multimodel-raw-data.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/raw_reads/mOTUs-workflow.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/raw_reads/cgc/CGC-subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/workflows/subworkflows/raw_reads/cgc/predict_proteins_reads.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/GO-slim/go_summary.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/easel/esl-sfetch-manyseqs.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/get_subunits_fasta/get_subunits.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/get_subunits_coords/get_subunits_coords.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/extract-coords/extract-coords.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/RNA_prediction/mapseq/mapseq.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/hmmer/hmmscan/hmmscan-subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/fastp/fastp.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/KEGG_analysis/KEGG_pathways/kegg_pathways.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/KEGG_analysis/Modification/modification_table.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/GFF/gff_generation.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Genome_properties/genome_properties.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/check_value/check_value.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/post-processing/GFF_antismash/antismash_to_gff.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/antismash/antismash_v4.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/antismash/chunking_antismash_with_conditionals/filtering_fasta/filtering_fasta_for_antismash.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Diamond/Diamond-Post-Processing/diamond_join.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Assembly/Diamond/Diamond-Post-Processing/diamond_sorting.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/mask-for-ITS/suppress_tax.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/mask-for-ITS/format-bedfile.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/post-processing.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/FragGeneScan/FGS.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/Prodigal/prodigal.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Combined_gene_caller/CGC/combined_gene_caller.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Pfam-Parse/pfam_annotations.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/EggNOG-Parse/eggnog_annotations.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/Raw_reads/mOTUs/mOTUs.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/CRISPRCasFinder2Fasta.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/CRISPRCasFinder2GFF.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/CRISPRCasFinder.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/tools/CRISPRCasFinder/runCRISPRCasFinderl.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/clean_fasta_headers.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/count_number_lines.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/count_fasta.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/result-file-chunker/result_chunker.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/result-file-chunker/result_chunker_subwf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/return_directory/return_directory.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/remove_header/remove_headers.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emo-bon/MetaGOflow/eosc-life-gos/utils/pigz/gzip.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}