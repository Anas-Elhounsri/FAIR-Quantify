{
  "application_domain": [
    {
      "confidence": 0.8126418584265558,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/connorhknight/IBRAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-09T14:41:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-22T11:20:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "single-cell RNA-sequencing integrative, benchmarking tool."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9994165418596512,
      "result": {
        "type": "Text_excerpt",
        "value": " **I**ntegrated **B**enchmarking single-cell **R**NA-sequencing **A**utomated **P**ipeline endeavours to make optimal bioinformatic pipelines preconstructed into an ease-of-use tool, alongside providing gold-standard metrics to assess their effectiveness.\n \nWelcome to IBRAPs tutorial page! our tool is easy to use and automates the installation of nearly 60 packages and their dependencies for you convenience. IBRAP is a wrapper for most used and highly recommended single-cell pipelines and analytical components in Python and R. We also included benchmarking to aid users in identifying the best combination of components for their datadet. We also produced a novel S4 class object in R that contains all of these numerous pipelines that you generate in IBRAP for easy access with access functions to interpret your data. We generated numerous tutorial pages to guide you through the process of using our tool which can be found in the link below:  \n"
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/connorhknight/IBRAP/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/connorhknight/IBRAP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/connorhknight/IBRAP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "connorhknight/IBRAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\ntitle: \"Installation (MacOS)\"\nauthor: \"Connor H Knight\"\ndate: \"23/02/2022\"\noutput: html_document\n---\n\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  fig.path = \"man/figures/\"\n)\n```\n\n```{r klippy, echo=FALSE, include=TRUE}\nklippy::klippy(tooltip_message = 'Click to copy', tooltip_success = 'Done', position = c('bottom', 'right'))\n```\n\n## IBRAP dependencies\n\n```{r table1, echo=FALSE, message=FALSE, warnings=FALSE, results='asis'}\ndf <- data.frame(`Software` = c('R version >=4.0.0', 'python version >=3.8', 'Xcode version version >=11.3.1', 'ImageMagick version >=6.9.10-86', 'devtools any version', 'anaconda version >=4.10.3'), Description = c('IBRAP dependes on packages that are updated to at this version of R', 'IBRAP also uses python packages to analyse scRNA-seq data', 'ImageMagick is an image processing software and is a dependency for the celda package which contains decontX. If you do not plan on using DecontX then this is not required', 'Xcode installs fundamental compilers (including GCC) which are required for R and Python package installations','devtools enables the user to install packages directly from GitHub pages','anaconda is  required for R to access the python coding language'))\n\nknitr::kable(df)\n```\n\n## Installing IBRAP\n\nIBRAP installation and its dependencies R-based dependencies is fully automated and can be performed using the following command in R:\n\n```{r, eval=F, echo=T}\n\ninstall.packages('devtools')\ndevtools::install_github('connorhknight/IBRAP')\n\n```\n\nIBRAP automatically installs 44 R-based packages and their dependencies, hence a long installation time is to be expected. This could be anywhere between 30 minutes to to more than 2 hours according to the computational resources available and internet speed. \n\nNow, we have installed the dependencies for IBRAP external to and within R. We now need to install the dependencies for Python. \n\n## Installing destiny and celda\n\nTo access diffusion maps, we must install celda, a package that is tricky to install automatically, thus it is easier for the user to install it directly using the following command in the R-terminal:\n\n```{r, eval=F, echo=T}\n\nBiocManager::install(\"destiny\")\n\n```\n\nThis should have successfully installed destiny into R. Next, we focus on celda.\n\nCelda requires ImageMagick which some users may experience difficulty in installing, hence we did not list it as a dependency. Please note that if you could not install ImageMagick do not install celda since it will not work. However, if you were successful you can install it manually in the R-terminal:\n\n```{r, eval=F, echo=T}\n\nBiocManager::install(\"celda\")\n\n```\n\nThere is a second package\n\n## Installing miniconda\n\nIBRAP not only uses scRNA-seq analytical packages contained in the R programming language, but also packages available in Python. Therefore, we are required to install a package that enables us to access python from within R. For this purpose, we installed Reticulate as one of our dependencies. Reticulate uses a bash-based software called miniconda, which enables a user to access python in a virtual environment from within the R terminal. Indeed, we can install miniconda from our R terminal using the following command in R: \n\n```{r, eval=F, echo=T}\n# this command may ask to create a directory, which you can agree to and perhaps note where the package is being installed to. \n\nreticulate::install_miniconda()\n\n```\n\nOnce we have install miniconda, we must produce a virtual enviornment to install our python packages, as shown in the dependencies table we require the python version to be at least 3.8. We generated a file which automatically installs these dependencies correctly, it can be downloaded using the link prior to conda_create.\n\n```{r, eval=F, echo=T}\n# Use this link and command for Intel CPU mac hardware\nsystem('curl -LJO https://raw.githubusercontent.com/connorhknight/IBRAP/main/data/IBRAP.yaml')\nreticulate::conda_create(envname = \"IBRAP\", environment = \"IBRAP.yaml\")\n\n# Use this link and command for M1 Chip CPU mac hardware\nsystem('curl -LJO https://raw.githubusercontent.com/connorhknight/IBRAP/main/data/IBRAP_M1chip.yaml')\nreticulate::conda_create(envname = \"IBRAP\", environment = \"IBRAP_M1chip.yaml\")\n\n```\n\nThis will install a fresh virtual environment for us to use. Normally, R will source the general operating systems python or a python package you installed to your system and will not automatically use our python version from our IBRAP environment, therefore we must tell it where to find OUR version of python. Below, we displayed the correct command to tell python where to find our version of Python, whcih requires us to specify the directory lcoation. When you created the virtual environment the pathway where python was installed is usually printed last on your R terminal. However, if you missed it we included a default saving location for MacOS.\n\n```{r, eval=F, echo=T}\n\nreticulate::use_python('~/Library/r-miniconda/envs/IBRAP/bin/python',required = T)\n# note that his may not always be the pathway for your specific computer if there some configuration have happened. Therefore, it is always best to check. \n\n```\n\nPlease note, this command will only work in the current session you are using and R will revert back to the original python when you next use R. You can overcome this by forcing R to use this version of python every time you open R. When R is first initiated it can be told to run a set of commands prior to you using it. These commands are  within a file called .Rprofile which is contained in your home directory (~) (note than some users may not have this file, it is completely okay for you to create your own using Nano). To do this, perform the following in bash:\n\n```{bash, eval=F, echo=T}\nnano ~/.Rprofile\n#copy and paste the previous reticulate::use_python command\n\n```\n\nThen you can close the editor using ctrl + x and then enter to save. Now, R will always source our version of python. \n\nIn total, 15 python packages are installed and their dependencies. You can  repeat this command and it will tell you whether you have the correct versions installed or if any are missing, if it is unable to install the package itself it will tell which packages require manual installation. \n\nWell done for installing IBRAP, that may have been a slightly long progress, but you have now installed a wide range of IBRAP dependencies (61 directly installed packages and their own dependencies) for scRNA-seq analytics that you can not only use in IBRAP, but outside of IBRAP too! Next, you must get to grips with how IBRAP functions, for this we have included some tutorials to explain the process. For example, we have one dedicted to generally using IBRAP with a single sample in [getting started](https://connorhknight.github.io/IBRAP/articles/using_IBRAP.html) tutorial, when the need arises for using multiple samples and integrating them, we have you covered in our [integration](https://connorhknight.github.io/IBRAP/articles/integration.html). \n\nGood luck! And if you need any help, please feel free to leave a comment in our issues page on our GitHub.\n"
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/vignettes/installation_macos.Rmd",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\ntitle: \"Installation (Linux)\"\nauthor: \"Connor H Knight\"\ndate: \"23/02/2022\"\noutput: html_document\n---\n\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  fig.path = \"man/figures/\"\n)\n```\n\n```{r klippy, echo=FALSE, include=TRUE}\nklippy::klippy(tooltip_message = 'Click to copy', tooltip_success = 'Done', position = c('bottom', 'right'))\n```\n\n## IBRAP dependencies\n\n```{r table1, echo=FALSE, message=FALSE, warnings=FALSE, results='asis'}\ndf <- data.frame(`Software` = c('R version >=4.0.0', 'python version >=3.8', 'Xcode version version >=11.3.1', 'ImageMagick version >=6.9.10-86', 'devtools any version', 'anaconda version >=4.10.3'), Description = c('IBRAP dependes on packages that are updated to at this version of R', 'IBRAP also uses python packages to analyse scRNA-seq data', 'ImageMagick is an image processing software and is a dependency for the celda package which contains decontX. If you do not plan on using DecontX then this is not required', 'Xcode installs fundamental compilers (including GCC) which are required for R and Python package installations','devtools enables the user to install packages directly from GitHub pages','anaconda is  required for R to access the python coding language'))\n\nknitr::kable(df)\n```\n\n## Installing IBRAP\n\nIBRAP installation and its dependencies R-based dependencies is fully automated and can be performed using the following command in R:\n\n```{r, eval=F, echo=T}\n\ninstall.packages('devtools')\ndevtools::install_github('connorhknight/IBRAP')\n\n```\n\nIBRAP automatically installs 44 R-based packages and their dependencies, hence a long installation time is to be expected. This could be anywhere between 30 minutes to to more than 2 hours according to the computational resources available and internet speed. \n\nNow, we have installed the dependencies for IBRAP external to and within R. We now need to install the dependencies for Python. \n\n## Installing destiny and celda\n\nTo access diffusion maps, we must install celda, a package that is tricky to install automatically, thus it is easier for the user to install it directly using the following command in the R-terminal:\n\n```{r, eval=F, echo=T}\n\nBiocManager::install(\"destiny\")\n\n```\n\nThis should have successfully installed destiny into R. Next, we focus on celda.\n\nCelda requires ImageMagick which some users may experience difficulty in installing, hence we did not list it as a dependency. Please note that if you could not install ImageMagick do not install celda since it will not work. However, if you were successful you can install it manually in the R-terminal:\n\n```{r, eval=F, echo=T}\n\nBiocManager::install(\"celda\")\n\n```\n\nThere is a second package\n\n## Installing miniconda\n\nIBRAP not only uses scRNA-seq analytical packages contained in the R programming language, but also packages available in Python. Therefore, we are required to install a package that enables us to access python from within R. For this purpose, we installed Reticulate as one of our dependencies. Reticulate uses a bash-based software called miniconda, which enables a user to access python in a virtual environment from within the R terminal. Indeed, we can install miniconda from our R terminal using the following command in R: \n\n```{r, eval=F, echo=T}\n# this command may ask to create a directory, which you can agree to and perhaps note where the package is being installed to. \n\nreticulate::install_miniconda()\n\n```\n\nOnce we have install miniconda, we must produce a virtual enviornment to install our python packages, as shown in the dependencies table we require the python version to be at least 3.8. Therefore, we can install an environment that is specific for IBRAP and contains the correct python package with the following command in R:\n\n```{r, eval=F, echo=T}\n\nsystem('curl -LJO https://raw.githubusercontent.com/connorhknight/IBRAP/main/data/IBRAP.yaml')\n\nreticulate::conda_create(envname = \"IBRAP\", environment = \"IBRAP.yaml\")\n\n```\n\nThis will install a fresh virtual environment for us to use. Normally, R will source the general operating systems python or a python package you installed to your system and will not automatically use our python version from our IBRAP environment, therefore we must tell it where to find OUR version of python. Below, we displayed the correct command to tell python where to find our version of Python, whcih requires us to specify the directory lcoation. When you created the virtual environment the pathway where python was installed is usually printed last on your R terminal. However, if you missed it we included a default saving location for Linux.\n\n```{r, eval=F, echo=T}\n\nreticulate::use_python('~/share/r-miniconda/envs/IBRAP/lib/python',required = T)\n\n# note that his may not always be the pathway for your specific computer if there some configuration have happened. Therefore, it is always best to check. \n\n```\n\nPlease note, this command will only work in the current session you are using and R will revert back to the original python when you next use R. You can overcome this by forcing R to use this version of python every time you open R. When R is first initiated it can be told to run a set of commands prior to you using it. These commands are  within a file called .Rprofile which is contained in your home directory (~) (note than some users may not have this file, it is completely okay for you to create your own using Nano). To do this, perform the following in bash:\n\n```{bash, eval=F, echo=T}\nnano ~/.Rprofile\n#copy and paste the previous reticulate::use_python command\n\n```\n\nThen you can close the editor using ctrl + x and then enter to save. Now, R will always source our version of python. \n\nIn total, 15 python packages are installed and their dependencies. You can  repeat this command and it will tell you whether you have the correct versions installed or if any are missing, if it is unable to install the package itself it will tell which packages require manual installation. \n\nWell done for installing IBRAP, that may have been a slightly long progress, but you have now installed a wide range of IBRAP dependencies (61 directly installed packages and their own dependencies) for scRNA-seq analytics that you can not only use in IBRAP, but outside of IBRAP too! Next, you must get to grips with how IBRAP functions, for this we have included some tutorials to explain the process. For example, we have one dedicted to generally using IBRAP with a single sample in [getting started](https://connorhknight.github.io/IBRAP/articles/using_IBRAP.html) tutorial, when the need arises for using multiple samples and integrating them, we have you covered in our [integration](https://connorhknight.github.io/IBRAP/articles/integration.html). \n\nGood luck! And if you need any help, please feel free to leave a comment in our issues page on our GitHub.\n"
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/vignettes/Installation_linux.Rmd",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.994110100521924,
      "result": {
        "type": "Text_excerpt",
        "value": "<img width=\"300px\" height=\"100px\" src=\"https://github.com/connorhknight/IBRAP/blob/main/man/figures/logo_small.png\"/> \nhttps://connorhknight.github.io/IBRAP/\n \n"
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/connorhknight/IBRAP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/man/figures/logo_small.png"
      },
      "source": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IBRAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "connorhknight"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 9638499,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 426292,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/connorhknight/IBRAP/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:16:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}