{
  "application_domain": [
    {
      "confidence": 14.58,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jasminezhoulab/cfSNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-19T17:36:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-18T07:50:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cfSNV: An R tool of sensitively detecting tumor mutations from cell-free DNA in blood"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.954374386100176,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "`cfSNV` is an ultra-sensitive and accurate somatic SNV caller designed\nfor cfDNA sequencing. \n  - `getbam_align()` maps raw reads from fastq (gzip or not) files to\n    the reference genome.\n  - `getbam_align_after_merge()` first merges the overlapping read mates\n    in cfDNA sequencing data and then maps raw reads from fastq (gzip or\n    not) files to the reference genome.\n  - `parameter_recommend()` recommends parameters based on plasma sample\n    coverage.\n  - `variant_calling()` calls somatic SNV in cfDNA and reports estimated\n    tumor fraction. \nYou can learn more about them in\n`vignette(\"cfSNV\")`. \n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jasminezhoulab/cfSNV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jasminezhoulab/cfSNV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jasminezhoulab/cfSNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cfSNV"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "cfSNV"
        ],
        "type": "Text_excerpt",
        "value": "After downloading the `cfSNV_0.99.0.tar.gz` file to `yourPath`, you can\ninstall `cfSNV` using the following\ncode:\n\n``` r\ninstall.packages(\"yourPath/cfSNV_0.99.0.tar.gz\", repos = NULL, type = \"source\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9996871226176888,
      "result": {
        "original_header": "cfSNV",
        "type": "Text_excerpt",
        "value": "[![R-CMD-check-bioc](https://github.com/ben-laufer/DMRichR/workflows/R-CMD-check-bioc/badge.svg)](https://github.com/ben-laufer/DMRichR/actions)\n[![Lifecycle:\nmaturing](https://img.shields.io/badge/lifecycle-maturing-blue.svg)](https://lifecycle.r-lib.org/articles/stages.html#maturing) \n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jasminezhoulab/cfSNV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Academic Software License: \u00a9 2021 UCLA (\u201cInstitution\u201d). Academic or nonprofit researchers are\npermitted to use this Software (as defined below) subject to Paragraphs 1-3:\n\nInstitution hereby grants to you free of charge, so long as you are an academic or nonprofit\nresearcher, a nonexclusive license under Institution\u2019s copyright ownership interest in this\nsoftware and any derivative works made by you thereof (collectively, the \u201cSoftware\u201d) to use,\ncopy, and make derivative works of the Software solely for educational or academic research\npurposes, and to distribute such Software free of charge to other academic or nonprofit\nresearchers for their educational or academic research purposes, in all cases subject to the\nterms of this Academic Software License. Except as granted herein, all rights are reserved by\nInstitution, including the right to pursue patent protection of the Software.\n\nAny distribution of copies of this Software -- including any derivative works made by you\nthereof -- must include a copy (including the copyright notice above), and be made subject to\nthe terms, of this Academic Software License; failure by you to adhere to the requirements in\nParagraphs 1 and 2 will result in immediate termination of the license granted to you pursuant\nto this Academic Software License effective as of the date you first used the Software.\n\nIN NO EVENT WILL INSTITUTION BE LIABLE TO ANY ENTITY OR PERSON FOR DIRECT, INDIRECT, SPECIAL,\nINCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF INSTITUTION HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. INSTITUTION\nSPECIFICALLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS AND IMPLIED, INCLUDING, BUT NOT LIMITED\nTO, ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE\nIS PROVIDED \u201cAS IS.\u201d INSTITUTION HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,\nENHANCEMENTS, OR MODIFICATIONS OF THIS SOFTWARE.\n\nCommercial entities: please contact Prof. Xiangong Jasmine Zhou (xjzhou@mednet.ucla.edu) for\nlicensing opportunities.\n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/man/figures/cfSNV_pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cfSNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jasminezhoulab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 195113,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 127656,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 47242,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "cfSNV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "  - samtools 1.11:\n    <https://sourceforge.net/projects/samtools/files/samtools/>\n  - picard 2.18.4:\n    <https://github.com/broadinstitute/picard/releases/tag/2.18.4>\n  - bedtools 2.30.0:\n    <https://github.com/arq5x/bedtools2/releases/tag/v2.30.0>\n  - GATK 3.8.0: <https://github.com/broadgsa/gatk/releases/tag/3.8>\n  - bwa 0.7.17: <http://bio-bwa.sourceforge.net/>\n  - FLASH2: <https://github.com/dstreett/FLASH2>\n  - java 1.8.0\\_281 (just need to be compatible with GATK and picard\n    tools)\n  - python 3.7.0+\n      - numpy 1.13.3\n      - pandas 0.20.3\n      - scipy 1.1.0\n      - sklearn 0.24.1 (if using other versions, there will be a\n        warining, but may not cause an error)\n  - R\n4.0+\n      - Rcpp\n      - reticulate\n      - utils\n\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:47:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "cfSNV"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nlibrary(cfSNV)\n\nparameter_recommend(\n  plasma.unmerged, normal,\n  plasma.merged.extendedFrags, plasma.merge.notCombined,\n  target.bed, reference, SNP.database, samtools.dir, sample.id, roughly_estimated_tf = TRUE\n)\n#> The per base coverage of the plasma sample for each genomic region in the target bed file:\n#> average = 105.222, median = 92.9562, 95th percentile = 227.395 \n#> \n#> The roughly estimated tumor fraction in the plasma sample: 31.0295% \n#> For a more accurate estimation, please run variant_calling(). \n#> \n#> Lowest detectable VAF range under the default parameters: [2.199%, 5.277%] \n#> \n#> To detect different levels of lowest VAF, \n#> at 1% VAF: MIN_HOLD_SUPPORT_COUNT = 8, MIN_PASS_SUPPORT_COUNT = 2; \n#> at 5% VAF: MIN_HOLD_SUPPORT_COUNT = 17, MIN_PASS_SUPPORT_COUNT = 11 \n#> Note: decreasing the parameters (i.e. MIN_HOLD_SUPPORT_COUNT and MIN_PASS_SUPPORT_COUNT) \n#> can lower the detection limit, but may also lower the variant quality.\n\nresults <- variant_calling(\n  plasma.unmerged, normal, plasma.merged.extendedFrags, plasma.merge.notCombined,\n  target.bed, reference, SNP.database, samtools.dir, picard.dir, bedtools.dir,\n  sample.id, MIN_HOLD_SUPPORT_COUNT, MIN_PASS_SUPPORT_COUNT\n)\n\nresults$variant.list\n#>   CHROM POSITION ID REF ALT         QUAL FILTER       VAF\n#> 1 chr22 20640684  .   A   G 2.918513e+08   PASS 0.3333333\n#> 2 chr22 20640690  .   G   A 7.519190e+01   PASS 0.4666667\n#> 3 chr22 20640765  .   C   G 1.000000e+00   PASS 0.0800000\n#> 4 chr22 29075530  .   T   A 2.409049e+08   PASS 0.5882353\n#> 5 chr22 29445285  .   G   A 3.205572e+28   PASS 0.2037037\n#> 6 chr22 44342205  .   T   A 1.484423e+77   PASS 0.4285714\n#> 7 chr22 44965238  .   G   A 3.889089e+23   PASS 0.1702128\n#> 8 chr22 45601484  .   G   C 4.112031e+33   PASS 0.6666667\n#> 9 chr22 45723968  .   C   T 1.198760e+11   PASS 0.6400000\n\nresults$tumor.fraction\n#> [1] \"31.6137566137%\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jasminezhoulab/cfSNV/main/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}