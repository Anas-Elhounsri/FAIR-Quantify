{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "prepare data: put the HiC reads under ./fastq/; put the contig sequence file and index files under ./reference/;",
        "parent_header": [
          "mapping the unclustered short contigs into Endhic clusters, with specified cutoff"
        ],
        "type": "Text_excerpt",
        "value": "juicer/CPU/juicer.sh -S early -g draft -s MboI -z ./references/draft.fa -y ./draft_MboI.txt -p ./references/draft.fa.size -t 50 -D juicer/CPU\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fanagislab/EndHiC"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "calculate the HiC contact values among contigs, using Hi-C links data from fixed-size contig ends",
        "type": "Text_excerpt",
        "value": "ctgContact_from_ctgEndContacts.pl --binsize 100000 --binnum 10 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix > humanHiC_100000.matrix.100000.10.CtgContact\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "adjust the contig contacts, and perform linear transformation, to find the turning point",
        "parent_header": [
          "calculate the HiC contact values among contigs, using Hi-C links data from fixed-size contig ends"
        ],
        "type": "Text_excerpt",
        "value": "turningpoint_by_lineartransform.pl humanHiC_100000.matrix.100000.10.CtgContact > humanHiC_100000.matrix.100000.10.CtgContact.adjustTransform 2> humanHiC_100000.matrix.100000.10.CtgContact.turningPoint\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "build contig graph by assigning links to contigs whose contact is larger than a given cutoff, and also satisfy reciprocal best requirement",
        "type": "Text_excerpt",
        "value": "scaffold_by_trueCtgContact.pl   --contacts 147.07 --reciprocalmax  hifiasm.fa.len  humanHiC_100000_iced.matrix.100000.10.CtgContact > humanHiC_100000_iced.matrix.100000.10.CtgContact.overCutoff.1.0.reciprocalMax.gfa \n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro raw matrix data",
        "type": "Text_excerpt",
        "value": "endhic_ctgEnd_pipeline.pl --binsize 100000 --binnum 10 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data",
        "type": "Text_excerpt",
        "value": "endhic_ctgEnd_pipeline.pl --binsize 100000 --binnum 10 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000_iced.matrix\n\n\n(3) Standard pipeline: [run only one round of endhic.pl, when contig assembly is quite good] \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with various contig end size, in various automatically determined contact cutoff, using Hic-pro raw and normalized matrix data. At most cases, this can generate chromosome-level scaffolds",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "endhic.pl  hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\n\n(4) Iterative pipeline: [run multiple rounds of endhic.pl, when contig assembly is not so good]\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "calculate the HiC contact values among contigs, using Hi-C links data from half contig(i.e. max contig end size)",
        "type": "Text_excerpt",
        "value": "perl ../../../ctgContact_from_ctgEndContacts.pl  --binsize 100000  --binnum -1  hifiasm.fa.len  humanHiC_100000_abs.bed  humanHiC_100000.matrix > humanHiC_100000.matrix.halfContig.ctgContact\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "normalize the contig contact by the used bin numbers, only keep the max contact from head vs head, head vs tail, tail vs head, tail vs tail comparisons",
        "parent_header": [
          "calculate the HiC contact values among contigs, using Hi-C links data from half contig(i.e. max contig end size)"
        ],
        "type": "Text_excerpt",
        "value": "ctgContact_normalize_distance.pl  --normalize  humanHiC_100000.matrix.halfContig.ctgContact > humanHiC_100000.matrix.halfContig.ctgContact.normalize\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "normalize the contig contact by the used bin numbers, and converted to distance values ranging from 0 to 1",
        "parent_header": [
          "mapping the unclustered short contigs into Endhic clusters, with specified cutoff"
        ],
        "type": "Text_excerpt",
        "value": "ctgContact_normalize_distance.pl humanHiC_100000.matrix.100000.10.CtgContact > humanHiC_100000.matrix.100000.10.CtgContact.distance\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "build contig graph by assigning links to contigs whose contact is larger than a given cutoff, and also satisfy reciprocal best requirement",
        "type": "Text_excerpt",
        "value": "scaffold_by_trueCtgContact.pl   --contacts 147.07 --reciprocalmax  hifiasm.fa.len  humanHiC_100000_iced.matrix.100000.10.CtgContact > humanHiC_100000_iced.matrix.100000.10.CtgContact.overCutoff.1.0.reciprocalMax.gfa \n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Find the suitable stop loop, which represents correct chromosomes, by giving expected crhomosome number and minimum chromosome length cutoff",
        "parent_header": [
          "mapping the unclustered short contigs into Endhic clusters, with specified cutoff"
        ],
        "type": "Text_excerpt",
        "value": "hcluster_suitable_stop.pl --chr_num  23 --chr_len  20000000  humanHiC_100000.matrix.100000.10.CtgContact.distance.hcluster  >  humanHiC_100000.matrix.100000.10.CtgContact.distance.hcluster.need\n\n\n(3) Compare two clusters\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-31T07:10:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-29T01:01:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EndHic is a fast and easy-to-use Hi-C scaffolding tool, using the Hi-C links from contig end regions instead of whole contig regions to assemble large contigs into chromosomal-level scaffolds."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.827559468579485,
      "result": {
        "original_header": "mapping the unclustered short contigs into Endhic clusters, with specified cutoff",
        "type": "Text_excerpt",
        "value": "\n(4) Convert EndHiC result to juicebox compatible file formats, which can be viewed in Juicebox\n \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9665103979246134,
      "result": {
        "original_header": "generate the hic input file draft.hic for viewing in juicebox",
        "type": "Text_excerpt",
        "value": "For more instructions, please refer to the help pages of juicer and juicebox. \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9244200352871823,
      "result": {
        "original_header": "only compare the clustering information, not consider order and orientation information",
        "type": "Text_excerpt",
        "value": "\n8. Contact any of these authors for help: \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.93180916000256,
      "result": {
        "type": "Text_excerpt",
        "value": "EndHic is a fast and easy-to-use Hi-C scaffolding tool, using the Hi-C links from contig end regions instead of whole contig regions to assemble large contigs into chromosomal-level scaffolds.  \nEndHiC takes the HiC-pro's bin matrix results as input data. After running HiC-pro, the recommended EndHiC usage for most users is to run endhic.pl or endhic_iterate.pl. When your contig assembly is quite good, then endhic.pl [one round of EndHiC] is able to finish the job; When your contig assembly is relatively fragmental, then endhic_iterate.pl [multiple rounds of EndHiC] should be used. How many rounds is needed depend on the contig assembly level, and more fragmental contigs need higher rounds of EndHiC. \nTwo example data are included in EndHiC package: \nNote: The Arabidopsis_thalina testing data shows the usage of endhic.pl on long-continuous contig assembly, while the Cichorium_intybus testing data shows the usage of endhic_iterate.pl with relatively shorter contig assembly. \nAn example data for detecting the assembly errors in the contigs is also included in EndHiC package: \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fanagislab/EndHiC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If a single run of endhic.pl can't finish the scaffolding task, i.e. the number of resulting clusters is more than that of chromosomes, iterative running of endhic.pl is recommended. In each loop, the contig end size is increasing. In this way, the problems caused by the repeat sequences on the contig ends will be overcomed.",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "Using default parameters of endhic_iterate.pl\nendhic_iterate.pl  --rounds 3  --binnumstep 5 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\nFor more shorter contigs, try to run more rounds with smaller increasing of contig end sizes\nendhic_iterate.pl  --rounds 15 --binnumstep 1 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\n\n3. EndHiC output sub-directory and files\n\n\nIn 01.contig_end_contact_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact\n    Contig contact file, with 7 columns (#CtgId1 CtgId2  EndContact Ctg1Pos Ctg2Pos UsedBinNum1     UsedBinNum2)\n\n(2) humanHiC_100000.matrix.*.CtgContact.adjustTransform\n    Contig contact, adjusted, and linear transformed, to find the turning point\n\n(3) humanHiC_100000.matrix.*.CtgContact.turningPoint\n    Automatically inferred turning point, which will be used as the basic value for the contig contact cutoff\n\nIn 02.GFA_contig_graph_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.gfa\n    Contig graph in GFA format, contact value over cutoff, can be viewed in Bandage software\n\n(2) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa\n    Contig graph in GFA format,  contact value over cutoff, and satisfy reciprocal best, can be viewed in Bandage software\n\nIn 03.cluster_order_orient_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa.topology\n    Topology of the contig graph, identify linear or circular groups\n\n(2) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa.cluster\n    Scaffold results, including cluster, order, and orientation information\n\n\nIn 04.summary_and_merging_results/\n\n(1) z.EndHiC.A.results.summary\n    Summary and analysis results for the first loop, merging all the raw and iced results\n\n(2) z.EndHiC.A.results.summary.cluster  [Final EndHiC Result]\n    Final scaffold results with high robustness, merging all the raw and iced results\n    This is recommeded to be the final endhic result.\n\n(3) z.EndHiC.A.results.summary.cluster.gfa \n    GFA format of the final scaffold results, which can be graphically viewed in Bandage software\n\n\nInstruction of *.summary file:\n\n   Part 1: Number of clusters under each condition\n\n   Part 2: Statistics of all Cluster units\n\n   Part 3: Statistics of merged Cluster units\n\n   Part 4: Statistics of stable (high frequency) cluster units\n\n   Part 5: Statistics of stable cluster units (redundant short contigs removed)\n\n   Part 6: Included contigs, total number, total length \n\n\nFormat of *.cluster file: \n\n   In total 5 columns\n   column 1: Cluster id, sorted by cluster length   \n   column 2: Number of contigs included in this cluster \n   column 3: Cluster length, total length of contigs in this cluster \n   column 4: robustness, i.e. appearance times in the results from various contig end sizes and contact cutoffs\n   column 5: Included contigs with order and orientation, separated by \";\", and \"+-\" means strands\n             e.g. ptg000046l-;ptg000079l+;ptg000058l-;ptg000047l+ (equivalent to ptg000047l-;ptg000058l+;ptg000079l-;ptg000046l+)\n\n\n\n4.  Pre-EndHiC programs\n\n(1) draw HiC heatmap for contigs, helpful to find assembly errors in contigs, each point stands for window size 10*100000 = 1 M\nmatrix2heatmap.py humanHiC_100000_abs.bed humanHiC_100000.matrix 10\n\n(2) mapping the unitigs (p_utg) to contigs (p_ctg), only tested for Hifiasm contigs:\nperl ./map_utg_to_ctg.pl human.p_ctg.noseq.gfa human.p_utg.noseq.gfa > human.utg_to_ctg.map 2> human.utg_to_ctg.map.gfa\n\n\n(3) Identify the assembly errors in contigs by Hi-C heatmaps and unitig breaks:\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fanagislab/EndHiC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fanagislab/EndHiC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "calculate the HiC contact values among contigs, using Hi-C links data from fixed-size contig ends"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "prepare data: put the HiC reads under ./fastq/; put the contig sequence file and index files under ./reference/;",
        "parent_header": [
          "mapping the unclustered short contigs into Endhic clusters, with specified cutoff"
        ],
        "type": "Text_excerpt",
        "value": "juicer/CPU/juicer.sh -S early -g draft -s MboI -z ./references/draft.fa -y ./draft_MboI.txt -p ./references/draft.fa.size -t 50 -D juicer/CPU\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9526044963226147,
      "result": {
        "original_header": "generate the hic input file draft.hic for viewing in juicebox",
        "type": "Text_excerpt",
        "value": "3d-dna/visualize/run-assembly-visualizer.sh draft.assembly merged_nodups.txt   \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9936058097683353,
      "result": {
        "original_header": "only compare the clustering information, not consider order and orientation information",
        "type": "Text_excerpt",
        "value": "Wei Fan, 0000-0001-5036-8733  fanwei@cass.cn  or fanweiagis@126.com\nSen Wang,  0000-0001-9793-4472  wangsen1993@163.com  \nHengchao Wang, 0000-0002-8754-4195  wanghengchao000@qq.com\nFan Jiang, 0000-0003-1359-0970\t greatjf@163.com\nYan Zhang,\t0000-0003-2281-7807 milrazhang@163.com\n \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9801084777698593,
      "result": {
        "type": "Text_excerpt",
        "value": "  git clone git@github.com:fanagislab/EndHiC.git \n  cd EndHiC/z.testing_data/Arabidopsis_thalina\n  sh work.sh  \n  cd EndHiC/z.testing_data/Cichorium_intybus\n  sh work.sh \n  cd EndHiC/z.testing_data/Detect_errors_in_contigs\n  sh work.sh \n\nUsage instructions: \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9019229624171622,
      "result": {
        "original_header": "generate the enzyme cutting sites file draft_MboI.txt",
        "type": "Text_excerpt",
        "value": "juicer/misc/generate_site_positions.py MboI draft draft.fa\n \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fanagislab/EndHiC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EndHiC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fanagislab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 177666,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3286,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2711,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2111.15411v1\n\n\n8. Contact any of these authors for help:\n\nWei Fan, 0000-0001-5036-8733  fanwei@cass.cn  or fanweiagis@126.com\nSen Wang,  0000-0001-9793-4472  wangsen1993@163.com  \nHengchao Wang, 0000-0002-8754-4195  wanghengchao000@qq.com\nFan Jiang, 0000-0003-1359-0970\t greatjf@163.com\nYan Zhang,\t0000-0003-2281-7807 milrazhang@163.com"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fanagislab",
          "type": "User"
        },
        "date_created": "2022-10-31T07:13:31Z",
        "date_published": "2022-10-31T07:19:35Z",
        "html_url": "https://github.com/fanagislab/EndHiC/releases/tag/v1.0.0",
        "name": "The first release",
        "release_id": 81519540,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/fanagislab/EndHiC/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fanagislab/EndHiC/releases/81519540",
        "value": "https://api.github.com/repos/fanagislab/EndHiC/releases/81519540",
        "zipball_url": "https://api.github.com/repos/fanagislab/EndHiC/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "build contig graph by assigning links to contigs whose contact is larger than a given cutoff, and also satisfy reciprocal best requirement",
        "type": "Text_excerpt",
        "value": "scaffold_by_trueCtgContact.pl   --contacts 147.07 --reciprocalmax  hifiasm.fa.len  humanHiC_100000_iced.matrix.100000.10.CtgContact > humanHiC_100000_iced.matrix.100000.10.CtgContact.overCutoff.1.0.reciprocalMax.gfa \n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro raw matrix data",
        "type": "Text_excerpt",
        "value": "endhic_ctgEnd_pipeline.pl --binsize 100000 --binnum 10 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data",
        "type": "Text_excerpt",
        "value": "endhic_ctgEnd_pipeline.pl --binsize 100000 --binnum 10 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000_iced.matrix\n\n\n(3) Standard pipeline: [run only one round of endhic.pl, when contig assembly is quite good] \n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "run endhic with various contig end size, in various automatically determined contact cutoff, using Hic-pro raw and normalized matrix data. At most cases, this can generate chromosome-level scaffolds",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "endhic.pl  hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\n\n(4) Iterative pipeline: [run multiple rounds of endhic.pl, when contig assembly is not so good]\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If a single run of endhic.pl can't finish the scaffolding task, i.e. the number of resulting clusters is more than that of chromosomes, iterative running of endhic.pl is recommended. In each loop, the contig end size is increasing. In this way, the problems caused by the repeat sequences on the contig ends will be overcomed.",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "Using default parameters of endhic_iterate.pl\nendhic_iterate.pl  --rounds 3  --binnumstep 5 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\nFor more shorter contigs, try to run more rounds with smaller increasing of contig end sizes\nendhic_iterate.pl  --rounds 15 --binnumstep 1 hifiasm.fa.len humanHiC_100000_abs.bed humanHiC_100000.matrix humanHiC_100000_iced.matrix\n\n\n3. EndHiC output sub-directory and files\n\n\nIn 01.contig_end_contact_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact\n    Contig contact file, with 7 columns (#CtgId1 CtgId2  EndContact Ctg1Pos Ctg2Pos UsedBinNum1     UsedBinNum2)\n\n(2) humanHiC_100000.matrix.*.CtgContact.adjustTransform\n    Contig contact, adjusted, and linear transformed, to find the turning point\n\n(3) humanHiC_100000.matrix.*.CtgContact.turningPoint\n    Automatically inferred turning point, which will be used as the basic value for the contig contact cutoff\n\nIn 02.GFA_contig_graph_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.gfa\n    Contig graph in GFA format, contact value over cutoff, can be viewed in Bandage software\n\n(2) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa\n    Contig graph in GFA format,  contact value over cutoff, and satisfy reciprocal best, can be viewed in Bandage software\n\nIn 03.cluster_order_orient_results/\n\n(1) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa.topology\n    Topology of the contig graph, identify linear or circular groups\n\n(2) humanHiC_100000.matrix.*.CtgContact.overCutoff.1.0.reciprocalMax.gfa.cluster\n    Scaffold results, including cluster, order, and orientation information\n\n\nIn 04.summary_and_merging_results/\n\n(1) z.EndHiC.A.results.summary\n    Summary and analysis results for the first loop, merging all the raw and iced results\n\n(2) z.EndHiC.A.results.summary.cluster  [Final EndHiC Result]\n    Final scaffold results with high robustness, merging all the raw and iced results\n    This is recommeded to be the final endhic result.\n\n(3) z.EndHiC.A.results.summary.cluster.gfa \n    GFA format of the final scaffold results, which can be graphically viewed in Bandage software\n\n\nInstruction of *.summary file:\n\n   Part 1: Number of clusters under each condition\n\n   Part 2: Statistics of all Cluster units\n\n   Part 3: Statistics of merged Cluster units\n\n   Part 4: Statistics of stable (high frequency) cluster units\n\n   Part 5: Statistics of stable cluster units (redundant short contigs removed)\n\n   Part 6: Included contigs, total number, total length \n\n\nFormat of *.cluster file: \n\n   In total 5 columns\n   column 1: Cluster id, sorted by cluster length   \n   column 2: Number of contigs included in this cluster \n   column 3: Cluster length, total length of contigs in this cluster \n   column 4: robustness, i.e. appearance times in the results from various contig end sizes and contact cutoffs\n   column 5: Included contigs with order and orientation, separated by \";\", and \"+-\" means strands\n             e.g. ptg000046l-;ptg000079l+;ptg000058l-;ptg000047l+ (equivalent to ptg000047l-;ptg000058l+;ptg000079l-;ptg000046l+)\n\n\n\n4.  Pre-EndHiC programs\n\n(1) draw HiC heatmap for contigs, helpful to find assembly errors in contigs, each point stands for window size 10*100000 = 1 M\nmatrix2heatmap.py humanHiC_100000_abs.bed humanHiC_100000.matrix 10\n\n(2) mapping the unitigs (p_utg) to contigs (p_ctg), only tested for Hifiasm contigs:\nperl ./map_utg_to_ctg.pl human.p_ctg.noseq.gfa human.p_utg.noseq.gfa > human.utg_to_ctg.map 2> human.utg_to_ctg.map.gfa\n\n\n(3) Identify the assembly errors in contigs by Hi-C heatmaps and unitig breaks:\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contributors",
    "documentation",
    "license",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:59:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "use both the HiC data and the utg_to_ctg.map data",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "perl asm_error_check.pl human_100000_abs.bed human_100000.matrix human.utg_to_ctg.map > human.assmebly_errors.position\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "only use the HiC data, when the utg_to_ctg.map is not available",
        "parent_header": [
          "run endhic with specified contig end size, in various automatically determined contact cutoff, using Hic-pro normalized matrix data"
        ],
        "type": "Text_excerpt",
        "value": "perl asm_error_check.pl human_100000_abs.bed human_100000.matrix  > human.assmebly_errors.position\n\nThe result file contains 10 columns:\n\tCtg_id\t\tcontig id\n\tError_loc\tassembly error position inferred from HiC data\n\tInter_contact   the count of HiC links between the two bins (500kb-apart) crossing the assembly error position\n\tInter_cutoff    the cutoff of Inter_contact, which is 1/10 of the median values from all the inter-bins (500kb-apart)\n\tIntra_contact1  the count of HiC links within the left bin crossing the assembly error position\n\tIntra_contact2  the count of HiC links within the right bin crossing the assembly error position\n\tIntra_cutoff    the cutoff of Intra_contact1 and Intra_contact2, which is 1/10 of the median values of all the intra-bins\n\tBreak_pos\tassembly error position inferred from unitig break point\n\tUtg1_id\t\tthe left unitig crossing the assembly error position \n\tUtg2_id\t\tthe right unitig crossing the assembly error position \n\n\n\n5. Post-EndHiC programs\n\n\n(1) Convert to AGP and Fasta format files\n"
      },
      "source": "https://raw.githubusercontent.com/fanagislab/EndHiC/master/ReadMe.txt",
      "technique": "header_analysis"
    }
  ]
}