{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dina-lab3D/NanoNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-01T08:39:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-05T08:03:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9112130507103624,
      "result": {
        "original_header": "NanoNet",
        "type": "Text_excerpt",
        "value": "                    -s : write all the models into a single PDB file, separated with MODEL and ENDMDL (reduces running time when predicting many structures), default is False.\n                    -o <output directory> : path to a directory to put the generated models in, default is './NanoNetResults'\n                    -m : run side chains reconstruction using modeller, default is False. Output it to a pdb file named '<record name>_nanonet_full_relaxed.pdb'\n                    -c <path to Scwrl4 executable>: run side chains reconstruction using scwrl, default is False. Output it to a pdb file named '<record name>_nanonet_full.pdb'\n                    -t : use this parameter for TCR V-beta modeling, default is False \n"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dina-lab3D/NanoNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/NanoNet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/NanoNet.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dina-lab3D/NanoNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dina-lab3D/NanoNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoNet"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://drive.google.com/uc?id=1DdACpv5loaOnKbrIIlJSygUUmt9dRUut"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9709992641427169,
      "result": {
        "original_header": "NanoNet",
        "type": "Text_excerpt",
        "value": "\n<p align=\"center\"><img src=\"https://drive.google.com/uc?id=1DdACpv5loaOnKbrIIlJSygUUmt9dRUut\" height=\"250\"/></p> \n    1. Open the Colab notebook (NanoNet.ipynb, link above).\n    2. Select protein type (Nb/mAb heavy chain or TCR VB).\n    3. Select input type (sequence (String) or path to a fasta file)\n    4. Provide a Nb sequence/fasta (NanoNet will preduce a model for each entry in the fasta file).\n    5. Select whether or not you want to reconstruct the side chains using modeller (requires license - https://salilab.org/modeller/).\n    6. Press the 'Run all' option. \nHow to run NanoNet locally: \n    1. Clone the git repository : git clone \"https://github.com/dina-lab3D/NanoNet\"\n    2. Make sure you have the following libraries installed in your environment: \n            - numpy\n            - tensorflow (2.4.0 or higher)\n            - Bio\n            - modeller (optional, only if you want to reconstruct the side chains using modeller, requires license - https://salilab.org/modeller/) \n    3. If you want to reconstruct the side chains using Scwrl4, make sure you have it installed on your computer (requires license - http://dunbrack.fccc.edu/SCWRL3.php/). \n    4. Run the following command (with python 3): \n            python NanoNet.py <fasta file path> \n"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.962375827132885,
      "result": {
        "type": "Text_excerpt",
        "value": "**NEW - You can now run NanoNet predictions using our webserver, https://bio3d.cs.huji.ac.il/nanonet/** \n"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.898676813607863,
      "result": {
        "original_header": "NanoNet",
        "type": "Text_excerpt",
        "value": "            python NanoNet.py <fasta file path> \n                    -s : write all the models into a single PDB file, separated with MODEL and ENDMDL (reduces running time when predicting many structures), default is False.\n                    -o <output directory> : path to a directory to put the generated models in, default is './NanoNetResults'\n                    -m : run side chains reconstruction using modeller, default is False. Output it to a pdb file named '<record name>_nanonet_full_relaxed.pdb'\n                    -c <path to Scwrl4 executable>: run side chains reconstruction using scwrl, default is False. Output it to a pdb file named '<record name>_nanonet_full.pdb'\n                    -t : use this parameter for TCR V-beta modeling, default is False \n"
      },
      "source": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dina-lab3D/NanoNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "dina-lab3D"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "PureBasic",
        "size": 94654,
        "type": "Programming_language",
        "value": "PureBasic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 12208,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9724,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dina-lab3D/NanoNet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:13:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 42
      },
      "technique": "GitHub_API"
    }
  ]
}