{
  "application_domain": [
    {
      "confidence": 19.95,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Yujie Qian and Jiang Guo and Zhengkai Tu and Zhening Li and Connor W. Coley and Regina Barzilay",
        "doi": "10.1021/acs.jcim.2c01480",
        "format": "bibtex",
        "title": "{MolScribe}: Robust Molecular Structure Recognition with Image-to-Graph Generation",
        "type": "Text_excerpt",
        "value": "@article{MolScribe,\n    year = {2023},\n    doi = {10.1021/acs.jcim.2c01480},\n    publisher = {American Chemical Society ({ACS})},\n    journal = {Journal of Chemical Information and Modeling},\n    author = {Yujie Qian and Jiang Guo and Zhengkai Tu and Zhening Li and Connor W. Coley and Regina Barzilay},\n    title = {{MolScribe}: Robust Molecular Structure Recognition with Image-to-Graph Generation},\n}"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thomas0809/MolScribe"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-10T05:07:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T14:00:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Robust Molecular Structure Recognition with Image-to-Graph Generation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9923018072728171,
      "result": {
        "original_header": "MolScribe",
        "type": "Text_excerpt",
        "value": "This is the repository for MolScribe, an image-to-graph model that translates a molecular image to its chemical\nstructure. Try our [demo](https://huggingface.co/spaces/yujieq/MolScribe) on HuggingFace! \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9266189659238586,
      "result": {
        "type": "Text_excerpt",
        "value": "If you use MolScribe in your research, please cite our [paper](https://pubs.acs.org/doi/10.1021/acs.jcim.2c01480). \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8445347412940318,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "For training or evaluation, please download the corresponding datasets to `data/`. \nTraining data: \n| Category                                                                                   | Datasets                                      | Description                                                                                                                                                                                                                                |\n|--------------------------------------------------------------------------------------------|-----------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Synthetic <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/synthetic.zip) | Indigo <br> ChemDraw                          | Images are rendered by Indigo and ChemDraw.                                                                                                                                                                                                |\n| Realistic <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/real.zip)      | CLEF <br> UOB <br> USPTO <br> Staker <br> ACS | CLEF, UOB, and USPTO are downloaded from https://github.com/Kohulan/OCSR_Review. <br/> Staker is downloaded from https://drive.google.com/drive/folders/16OjPwQ7bQ486VhdX4DWpfYzRsTGgJkSu. <br> ACS is a new dataset collected by ourself. |\n| Perturbed <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/perturb.zip)   | CLEF <br> UOB <br> USPTO <br> Staker          | Downloaded from https://github.com/bayer-science-for-a-better-life/Img2Mol/                                                                                                                                                                | \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9460357346992314,
      "result": {
        "original_header": "Train MolScribe",
        "type": "Text_excerpt",
        "value": "```\nbash scripts/train_uspto_joint_chartok_1m680k.sh\n```\nThe script uses four GPUs and batch size of 256 by default. It takes about one day to train the model with four A100 GPUs.\nDuring training, we use a modified code of [Indigo](https://github.com/epam/Indigo) (included in `molscribe/indigo/`). \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.873654878477916,
      "result": {
        "original_header": "Evaluation Script",
        "type": "Text_excerpt",
        "value": "We implement a standalone evaluation script [`evaluate.py`](evaluate.py). Example usage:\n```\npython evaluate.py \\\n    --gold_file data/real/acs.csv \\\n    --pred_file output/uspto/swin_base_char_aux_1m680k/prediction_acs.csv \\\n    --pred_field post_SMILES\n```\nThe prediction should be saved in a csv file, with columns `image_id` for the index (must match the gold file),\nand `SMILES` for predicted SMILES. If prediction has a different column name, specify it with `--pred_field`. \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thomas0809/MolScribe/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/notebook/predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/notebook/predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/notebook/analyze_prediction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/notebook/analyze_prediction.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thomas0809/MolScribe/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "thomas0809/MolScribe"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolScribe"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/scripts/eval_uspto_joint_chartok_1m680k.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/scripts/train_uspto_joint_chartok.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/scripts/eval_uspto_joint_chartok.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/scripts/train_uspto_joint_chartok_1m680k.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MolScribe",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Option 1: Install MolScribe with pip\n```\npip install MolScribe\n```\n\nOption 2: Run the following command to install the package and its dependencies\n```\ngit clone git@github.com:thomas0809/MolScribe.git\ncd MolScribe\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999988376379113,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "| Category                                                                                   | Datasets                                      | Description                                                                                                                                                                                                                                |\n|--------------------------------------------------------------------------------------------|-----------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Synthetic <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/synthetic.zip) | Indigo <br> ChemDraw                          | Images are rendered by Indigo and ChemDraw.                                                                                                                                                                                                |\n| Realistic <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/real.zip)      | CLEF <br> UOB <br> USPTO <br> Staker <br> ACS | CLEF, UOB, and USPTO are downloaded from https://github.com/Kohulan/OCSR_Review. <br/> Staker is downloaded from https://drive.google.com/drive/folders/16OjPwQ7bQ486VhdX4DWpfYzRsTGgJkSu. <br> ACS is a new dataset collected by ourself. |\n| Perturbed <br> [Download](https://huggingface.co/yujieq/MolScribe/blob/main/perturb.zip)   | CLEF <br> UOB <br> USPTO <br> Staker          | Downloaded from https://github.com/bayer-science-for-a-better-life/Img2Mol/                                                                                                                                                                | \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9388817627005147,
      "result": {
        "original_header": "Prediction",
        "type": "Text_excerpt",
        "value": "```\npython predict.py --model_path ckpts/swin_base_char_aux_1m680k.pth --image_path assets/example.png\n```\nMolScribe prediction interface is in [`molscribe/interface.py`](molscribe/interface.py).\nSee python script [`predict.py`](predict.py) or jupyter notebook [`notebook/predict.ipynb`](notebook/predict.ipynb)\nfor example usage.\n \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8073243349216267,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Training data: \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8034722492088844,
      "result": {
        "original_header": "Model",
        "type": "Text_excerpt",
        "value": "Download the model checkpoint to reproduce our experiments:\n```\nmkdir -p ckpts\nwget -P ckpts https://huggingface.co/yujieq/MolScribe/resolve/main/swin_base_char_aux_1m680k.pth\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9436826885091494,
      "result": {
        "original_header": "Prediction",
        "type": "Text_excerpt",
        "value": "```\npython predict.py --model_path ckpts/swin_base_char_aux_1m680k.pth --image_path assets/example.png\n```\nMolScribe prediction interface is in [`molscribe/interface.py`](molscribe/interface.py).\nSee python script [`predict.py`](predict.py) or jupyter notebook [`notebook/predict.ipynb`](notebook/predict.ipynb)\nfor example usage.\n \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8847291939022003,
      "result": {
        "original_header": "Evaluation Script",
        "type": "Text_excerpt",
        "value": "We implement a standalone evaluation script [`evaluate.py`](evaluate.py). Example usage:\n```\npython evaluate.py \\\n    --gold_file data/real/acs.csv \\\n    --pred_file output/uspto/swin_base_char_aux_1m680k/prediction_acs.csv \\\n    --pred_field post_SMILES\n```\nThe prediction should be saved in a csv file, with columns `image_id` for the index (must match the gold file),\nand `SMILES` for predicted SMILES. If prediction has a different column name, specify it with `--pred_field`. \n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thomas0809/MolScribe/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chemistry, deep-learning, molecule"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Yujie Qian\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/assets/model.png"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolScribe"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "thomas0809"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 403580,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 296599,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4616,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MolScribe",
          "Experiments"
        ],
        "type": "Text_excerpt",
        "value": "Install the required packages\n```\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:45:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 145
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "MolScribe",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Download the MolScribe checkpoint from [HuggingFace Hub](https://huggingface.co/yujieq/MolScribe/tree/main) \nand predict molecular structures:\n```python\nimport torch\nfrom molscribe import MolScribe\nfrom huggingface_hub import hf_hub_download\n\nckpt_path = hf_hub_download('yujieq/MolScribe', 'swin_base_char_aux_1m.pth')\n\nmodel = MolScribe(ckpt_path, device=torch.device('cpu'))\noutput = model.predict_image_file('assets/example.png', return_atoms_bonds=True, return_confidence=True)\n```\n\nThe output is a dictionary, with the following format\n```\n{\n    'smiles': 'Fc1ccc(-c2cc(-c3ccccc3)n(-c3ccccc3)c2)cc1',\n    'molfile': '***', \n    'confidence': 0.9175,\n    'atoms': [{'atom_symbol': '[Ph]', 'x': 0.5714, 'y': 0.9523, 'confidence': 0.9127}, ... ],\n    'bonds': [{'bond_type': 'single', 'endpoint_atoms': [0, 1], 'confidence': 0.9999}, ... ]\n}\n```\n\nPlease refer to [`molscribe/interface.py`](molscribe/interface.py) and [`notebook/predict.ipynb`](notebook/predict.ipynb) \nfor details and other available APIs.\n\nFor development or reproducing the experiments, please follow the instructions below.\n"
      },
      "source": "https://raw.githubusercontent.com/thomas0809/MolScribe/main/README.md",
      "technique": "header_analysis"
    }
  ]
}