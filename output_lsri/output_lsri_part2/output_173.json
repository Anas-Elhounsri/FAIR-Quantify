{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/GeneSigNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-09T14:55:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-02T15:13:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9913822272709423,
      "result": {
        "original_header": "GeneSigNet",
        "type": "Text_excerpt",
        "value": "A computational method for constructing Gene - Signature causal network from gene expression and exposure of mutational signatures.  \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8963290875813261,
      "result": {
        "original_header": "Sample python script to visualize the resulting network",
        "type": "Text_excerpt",
        "value": "```\nimport pandas as pd\nfrom pyvis.network import Network\n\nSignatures=SigData.columns # or Signatures=['SBS1', 'SBS2',...,] (names of signature nodes)\nth=0.05                    # The threshold parameter for selecting edges to be included in the visualizing network\nVisualizeNetwork(Weight_Matrix, Signatures, th)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9417625983439982,
      "result": {
        "original_header": "Python <a href=\"package\">Package</a>",
        "type": "Text_excerpt",
        "value": "* The GeneSigNet method is implemented in python and the codes are available as [Python module](package/GeneSigNet.py) and [Jupyter Notebook module](package/GeneSigNet.ipynb). \n* The python scripts for running GeneSigNet are available as [Python script](package/Call_GeneSigNet.py) and [Jupyter Notebook script](package/Call_GeneSigNet.ipynb). The scripts are recommended to load data and run GeneSigNet. \n* Simulated data matrices for gene expression and exposure of mutational signatures are provided with the source codes [Simulated Data](package) as example inputs to run the package.  \n* Python module [VisualizeNetwork](package/VisualizeNetwork.ipynb) visualize the subnetwork covering hub-nodes (Signatures) and their up and downstream nodes (causal and affected genes). The weight matrix inferred by GeneSigNet method is as input of the network visualization module.\n   \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9863741660061429,
      "result": {
        "original_header": "Results of the analysis on breast and lung cancer data.",
        "type": "Text_excerpt",
        "value": "The following files proves the results for the analysis on breast and lung cancer data \n- [Results](results): As result of the analysis in the two cancer data sets, the weight matrices (.cvs files) inferred to represent the directed interactions among genes and signatures, and subnetwork figures (.html files) representing the interaction between signatures and their up and down stream genes.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988411807486846,
      "result": {
        "original_header": "Cancer Data <a href=\"data\">Data sets</a>",
        "type": "Text_excerpt",
        "value": "The following files provides the gene expression and exposure of mutational signatures for cancer (BRCA and LUAD) patients. \n* [Gene_Expression_BRCA.csv](data/Gene_Expression_BRCA.csv): The normalized gene expression data (ICGC data portal) for 266 breast cancer (BRCA) patients. Gene expression profiles for 2,204 genes involved in either DNA metabolic or immune response processes of the Gene Ontology (GO) database were\nselected for the analysis.\n* [Signature_Exposure_BRCA.csv](data/Signature_Exposure_BRCA.csv): Exposure of 6 mutational signatures and HRD mutational status in breast cancer are used for the analysis\n* [Gene_Expression_LUAD.csv](data/Gene_Expression_LUAD.csv): The normalized gene expression data (TCGA data portal) for 466 lung cancer (LUAD) patients. Gene expression profiles for 2,433 genes involved in either DNA metabolic or immune response processes of the Gene Ontology (GO) database were\nselected for the analysis.\n* [Signature_Exposure_LUAD.csv](data/Signature_Exposure_LUAD.csv): Exposure of 6 mutational signatures known to be operative in lung cancer are used for the analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/GeneSigNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/GeneSigNet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/GeneSigNet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/VisualizeNetwork.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/VisualizeNetwork.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/Call_GeneSigNet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/package/Call_GeneSigNet.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/GeneSigNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncbi/GeneSigNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneSigNet"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To install the GeneSigNet package",
        "parent_header": [
          "GeneSigNet"
        ],
        "type": "Text_excerpt",
        "value": "```\npip install GeneSigNet\n```\nInstallation source: [GeneSigNet 0.1.0](https://pypi.org/project/GeneSigNet/)\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-required installations",
        "parent_header": [
          "GeneSigNet"
        ],
        "type": "Text_excerpt",
        "value": "Python libraries pandas, numpy, scipy, sklearn and warnings are required to be installed before running GeneSigNet, and pandas and pyvis are required to be installed before running the network visualization module VisualizeNetwork.\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9773618445807647,
      "result": {
        "original_header": "Python <a href=\"package\">Package</a>",
        "type": "Text_excerpt",
        "value": "* The python scripts for running GeneSigNet are available as [Python script](package/Call_GeneSigNet.py) and [Jupyter Notebook script](package/Call_GeneSigNet.ipynb). The scripts are recommended to load data and run GeneSigNet. \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/GeneSigNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneSigNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 90041,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 76979,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9139,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Sample python script to load data and run GeneSigNet",
        "parent_header": [
          "GeneSigNet"
        ],
        "type": "Text_excerpt",
        "value": "```\nimport pandas as pd\nimport GeneSigNet as GSN\n\n# A gene expression data matrix (columns are genes and rows are samples) \nExpData = pd.read_csv('Gene_Expression_Data.csv', index_col=0) \n\n# A signature exposure data matrix (columns are signatures and rows are samples)\nSigData = pd.read_csv('Signature_Exposure_Data.csv', index_col=0)  \n\nmaxit=10000     # maximum number of iterations for selecting sparce partial correlation\ntolerance=1e-12 # tolerance of iteration for selecting sparce partial correlation\n\nD=pd.concat([ExpData, SigData], axis=1) # Sample matched gene expressions and exposures of mutational signatures are combined as input\nNet=GSN.WeightMatrix(D, maxit, tolerance) \nWeight_Matrix=Net.ConstructNet()\nWeight_Matrix.to_csv('Weight_Matrix.csv')\n```"
      },
      "source": "https://raw.githubusercontent.com/ncbi/GeneSigNet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:40:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}