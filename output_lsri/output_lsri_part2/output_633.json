{
  "application_domain": [
    {
      "confidence": 28.55,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MRASleepNet"
        ],
        "type": "Text_excerpt",
        "value": "If you find this work or code is helpful in your research, please cite:\n\n```\n@article{10.1088/1741-2552/aca2de,\n\tauthor={Yu, Rui and Zhou, Zhuhuang and Wu, Shuicai and Gao, Xiaorong and Bin, Guangyu},\n\ttitle={MRASleepNet: A multi-resolution attention network for sleep stage classification using single-channel EEG},\n\tjournal={Journal of Neural Engineering},\n\turl={http://iopscience.iop.org/article/10.1088/1741-2552/aca2de},\n\tyear={2022}\n}\n```"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Yu, Rui and Zhou, Zhuhuang and Wu, Shuicai and Gao, Xiaorong and Bin, Guangyu",
        "format": "bibtex",
        "title": "MRASleepNet: A multi-resolution attention network for sleep stage classification using single-channel EEG",
        "type": "Text_excerpt",
        "url": "http://iopscience.iop.org/article/10.1088/1741-2552/aca2de",
        "value": "@article{10.1088/1741-2552/aca2de,\n    year = {2022},\n    url = {http://iopscience.iop.org/article/10.1088/1741-2552/aca2de},\n    journal = {Journal of Neural Engineering},\n    title = {MRASleepNet: A multi-resolution attention network for sleep stage classification using single-channel EEG},\n    author = {Yu, Rui and Zhou, Zhuhuang and Wu, Shuicai and Gao, Xiaorong and Bin, Guangyu},\n}"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YuRui8879/MRASleepNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-09T01:49:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T14:56:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "MRASleepNet"
        ],
        "type": "Text_excerpt",
        "value": "This repository provides the code for \"MRASleepNet: A multi-resolution attention network for sleep stage classification using single-channel EEG\"\n\nOur work now was Accepted by the Journal of Neural Engineering. If you want to cite this article, please see the Citation section (at the end of README).\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9672950788446095,
      "result": {
        "original_header": "Overall",
        "type": "Text_excerpt",
        "value": "The signal pre-processing was to normalize and cut the EEG data into 30-s segments. For data enhancement, we used a contextual enhancement method to enhance the data by merging information from adjacent samplessegments. After that, the enhanced data were fed into the MRASleepNet model and different metrics were used to evaluate the performance of the model. \n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9115031255354851,
      "result": {
        "original_header": "Model",
        "type": "Text_excerpt",
        "value": "Our MRASleepNet comprised three major modules: a feature extraction (FE) module, an MRA module, and a gMLP module.  \nThe FE module used convolution to abstract and refine the features in the enhanced EEG signals to obtain a feature vector.  \nThe MRA module further abstracted the features and modeled the importance of the features so that the model focused on key features.  \nThe gMLP module was used to extract temporal information from the EEG signals and model the temporal relationship of the features.  \n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8790733188076869,
      "result": {
        "original_header": "Result",
        "type": "Text_excerpt",
        "value": "Comparison of results with other models \n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YuRui8879/MRASleepNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YuRui8879/MRASleepNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YuRui8879/MRASleepNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MRASleepNet"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/fig/overall.png"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/fig/dataenhance.jpg"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/fig/model.jpg"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/fig/result.jpg"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data set partition",
        "parent_header": [
          "MRASleepNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By running\n```\npython split_data.py --data_path . --output_path .\n```\npartitioning the data set, Where **data_path** is the generated mat file directory and **output_path** is the output dataset divided txt file directory.\n\nsplit_data.py also offers the following optional parameters\n```\n--seed          Random seed\n--file_type     choice = ['SC','ST','ALL'], Select whether to use SC files, ST files or all files\n--folds         The K for K-fold cross validation\n--fold_idx      The fold_idx round in the K-fold cross validation\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YuRui8879/MRASleepNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MRASleepNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YuRui8879"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 47120,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MRASleepNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Switch to this repository directory, download the required dependencies via pip\n\n```\npip install -r requirements\n```\n\nThe version of pytorch used in this project may give a warning when using maxpool. If you want to clear this warning, you can use a higher version of pytorch.\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:25:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Database",
        "parent_header": [
          "MRASleepNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The open source database used in this repository is from\n\n* https://www.physionet.org/content/sleep-edfx/1.0.0/\n* https://www.physionet.org/content/capslpdb/1.0.0/\n\nYou need to download the database locally, and Physionet offers different ways to do so.\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Convert data format",
        "parent_header": [
          "MRASleepNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**SleepEDF**\n\nBy running\n```\npython prepare_physionet.py --data_dir . --output_dir .\n```\nConvert edf format data in the database to mat format. **data_dir** is the path of the original data downloaded, **output_dir** is the path to save the mat file after conversion.\n\n**CAP**\n\nBy running\n```\npython CAP2mat.py --data_path . --label_path . --output_path . --select_channel Fp2-F4\n```\nConvert edf format data in the database to mat format. **data_path** is the path of the original data downloaded, **label_path** is the path of the original label downloaded, **output_path** is the path to save the mat file after conversion, **select_channel** is the selected lead.\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train and Test",
        "parent_header": [
          "MRASleepNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Run\n```\npython main.py --log_save_path . --model_save_path . --split_data_file_path .\n```\nfor training and testing, where **log_save_path** is the path to save log file, **model_save_path** is the path to save trained model and **split_data_file_path** is the path to save txt file of dataset partition results.\n\nmain.py provides the following optional parameters\n```\n--parallel        Whether to use multi-GPU training\n--batch_size      Batch size\n--learning_rate   Learning_rate\n--epochs          Max iteration\n--cuda_device     If you do not use multi-GPU training, you need to specify the GPU\n-- reg_parameter  Parameter for L2 regularization. If set to 0, L2 regularization is not used\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YuRui8879/MRASleepNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}