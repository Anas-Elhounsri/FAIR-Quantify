{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/slipnitskaya/FAVSeq"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Machine learning-based pipeline for identification of factors contributing to the technical variability between bulk and single-cell RNA-seq experiments",
        "parent_header": [
          "FAVSeq"
        ],
        "type": "Text_excerpt",
        "value": "This repository contains implementation of the **FAVSeq** pipeline presented in the paper \n[bioRxiv:10.1101/2022.01.06.474932](https://doi.org/10.1101/2022.01.06.474932) (under review).\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-28T15:21:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-14T20:42:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FAVSeq is a machine learning-based pipeline for identifying factors affecting the difference between bulk and scRNA-Seq experiments."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "FAVSeq"
        ],
        "type": "Text_excerpt",
        "value": "Recent studies in the area of transcriptomics performed on single-cell and population levels reveal noticeable \nvariability in gene expression measurements provided by different RNA sequencing technologies. Due to increased noise \nand complexity of single-cell RNA-Seq (scRNA-Seq) data over the bulk experiment, there is a substantial number of \nvariably-expressed genes and so-called dropouts, challenging the subsequent computational analysis and potentially \nleading to false positive discoveries. In order to investigate factors affecting technical variability between RNA \nsequencing experiments of different technologies, we performed a systematic assessment of single-cell and bulk RNA-Seq \ndata, which have undergone the same pre-processing and sample preparation procedures.\n\nIn order to identify which factors determine whether genes are differently detected in matched RNA-Seq experiments, we \npropose **FAVSeq** (**F**actors **A**ffecting **V**ariability in **Seq**uencing data), a machine learning-assisted \npipeline for analyzing multimodal RNA-Seq data, those design intends to support researchers in disclosing potential \nroot causes of the quantitative and dropouts-associated differences observed between RNA-Seq technologies.\n**FAVSeq** enables to select features obtaining the strongest predictive power for estimation of technical variability \nbetween RNA sequencing modalities.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.993112251209223,
      "result": {
        "original_header": "Workflow",
        "type": "Text_excerpt",
        "value": "Framework utilized in the **FAVSeq** pipeline for ranking and selection of features\naffecting the technical variability in RNA-Seq datasets of matched experiments consists of the following steps: \n\n1. Creation of the target difference by calculating OLS residuals in gene expression levels.\n2. Generation of gene-associated features based on GTF annotation and open-access databases.\n3. Optionally, imputation of missing values in features (e.g., using k-NN method).\n4. Model training and hyper-parameters optimization through the 5-fold CV grid-search.\n5. Feature importance assessment based on the RFE approach.\n6. Output the summary reports as CSV tables and visuals. \n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/slipnitskaya/FAVSeq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/slipnitskaya/FAVSeq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "slipnitskaya/FAVSeq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FAVSeq"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/images/framework.png"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/slipnitskaya/FAVSeq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, dropouts, machine-learning, multimodal-data, pipeline, python, rna-seq, scrna-seq, transcriptomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Sofya Lipnitskaya\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FAVSeq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "slipnitskaya"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30232,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "FAVSeq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Before running the code, please ensure that you use Python >= 3.8.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: Run FAVSeq pipeline",
        "parent_header": [
          "FAVSeq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The experiment is to be run from the command line, the estimated feature importance scores depend on the input data and on the actual prediction task.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Gene expression difference (regression task)",
        "parent_header": [
          "FAVSeq",
          "Usage",
          "Step 3: Run FAVSeq pipeline"
        ],
        "type": "Text_excerpt",
        "value": "``` Bash\npython -m favseq.run -i </path/to/data.csv> -o results -t regression\n```\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dropout events (classification task)",
        "parent_header": [
          "FAVSeq",
          "Usage",
          "Step 3: Run FAVSeq pipeline"
        ],
        "type": "Text_excerpt",
        "value": "``` Bash\npython -m favseq.run -i </path/to/data.csv> -o results -t classification -n knn\n```\nHere, as the presence of NaN-values assumed, those values are to be imputed using k-Nearest Neighbor approach.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:55:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "FAVSeq"
        ],
        "type": "Text_excerpt",
        "value": "In order identify factors affecting gene expression variability in your data, consider using **FAVSeq** as follows.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Clone the repository",
        "parent_header": [
          "FAVSeq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "[Clone](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository) this repository to your local machine.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Configure workflow",
        "parent_header": [
          "FAVSeq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Adjust [JSON-configuration file](protocols.json) according to your needs.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Gene expression difference (regression task)",
        "parent_header": [
          "FAVSeq",
          "Usage",
          "Step 3: Run FAVSeq pipeline"
        ],
        "type": "Text_excerpt",
        "value": "``` Bash\npython -m favseq.run -i </path/to/data.csv> -o results -t regression\n```\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dropout events (classification task)",
        "parent_header": [
          "FAVSeq",
          "Usage",
          "Step 3: Run FAVSeq pipeline"
        ],
        "type": "Text_excerpt",
        "value": "``` Bash\npython -m favseq.run -i </path/to/data.csv> -o results -t classification -n knn\n```\nHere, as the presence of NaN-values assumed, those values are to be imputed using k-Nearest Neighbor approach.\n"
      },
      "source": "https://raw.githubusercontent.com/slipnitskaya/FAVSeq/main/README.md",
      "technique": "header_analysis"
    }
  ]
}