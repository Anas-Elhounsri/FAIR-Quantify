{
  "application_domain": [
    {
      "confidence": 41.28,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sinanugur/cellsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-02T21:29:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-19T08:23:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cellsnake tool main repo"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8036306212285247,
      "result": {
        "original_header": "<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td rowspan=\"4\"> <img src=\"cellsnake-logo-blue-small.png\"> </td> <td> <a href=\"https://hub.docker.com/r/sinanugur/cellsnake\"><img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/sinanugur/cellsnake\" /></a> <a href=\"https://cellsnake.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/cellsnake/badge/?version=latest\" /></a>  </td>  </tr> <tr>    <td> <a href=\"https://badge.fury.io/py/cellsnake\"><img alt=\"PyPI version\" src=\"https://badge.fury.io/py/cellsnake.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/latest_release_relative_date.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/downloads.svg\" /></a> <a href=\"http://bioconda.github.io/recipes/cellsnake/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>  </td>  </tr></tbody></table>",
        "type": "Text_excerpt",
        "value": "\nA command line tool for easy and scalable single cell RNA sequencing analysis   \n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8401717340298739,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "The main directory structure will look like this, __resolution__ and __percent_mt__ can be visible on directory names. These are the only parameters that will generate a separate folders.\n```\nresults/integrated/percent_mt~auto/resolution~0.8/ #for regular samples\nresults_integrated/integrated/percent_mt~auto/resolution~0.8/ #for integrated samples\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cellsnake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sinanugur/cellsnake/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sinanugur/cellsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "                                           "
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td rowspan=\"4\"> <img src=\"cellsnake-logo-blue-small.png\"> </td> <td> <a href=\"https://hub.docker.com/r/sinanugur/cellsnake\"><img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/sinanugur/cellsnake\" /></a> <a href=\"https://cellsnake.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/cellsnake/badge/?version=latest\" /></a>  </td>  </tr> <tr>    <td> <a href=\"https://badge.fury.io/py/cellsnake\"><img alt=\"PyPI version\" src=\"https://badge.fury.io/py/cellsnake.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/latest_release_relative_date.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/downloads.svg\" /></a> <a href=\"http://bioconda.github.io/recipes/cellsnake/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>  </td>  </tr></tbody></table>"
        ],
        "type": "Text_excerpt",
        "value": "Please use Bioconda repo for installation. Mamba installation is also recommended. To create a clean environment and install __cellsnake__, type:\n```\nconda install mamba -c conda-forge\n\nmamba create -n cellsnake -c bioconda -c conda-forge cellsnake\n\n#Alternative installation to get a more up-to-date environment.\n\nmamba env create -n cellsnake --file=environment.yaml\n\n```\n\nApple Silicon computers have to force Osx64, you can install like this.\n\n```\nconda install mamba -c conda-forge\n\nCONDA_SUBDIR=osx-64 mamba create -n cellsnake -c bioconda -c conda-forge cellsnake\n\n#Alternative\nCONDA_SUBDIR=osx-64 mamba env create -n cellsnake --file=environment.yaml\n```\n\n\nCheck if the installation works by calling the main script.  \n```\nconda activate cellsnake\ncellsnake --help\n```\n\nThen install the R packages by typing: \n```\ncellsnake --install-packages\n```\n\n\nYou should see this message if all the packages are available:\n```\ncellsnake --install-packages\n[1] \"All packages were installed...OK\"\n```\n\n__Cellsnake__ auto install most of the packages when necessary or during the creation of environment but it is good to check if they are installable. \nYou can then move the environment to an offline location as well if required. We recommend our Docker image and it is a better solution for installation problems. Podman also works fine with our Docker image.\n\nSee our Docker repo: [Cellsnake Docker](https://hub.docker.com/r/sinanugur/cellsnake)\n\nOur latest Docker image is here: [Cellsnake Docker Latest](https://hub.docker.com/r/sinanugur/cellsnake/tags?page=1&ordering=last_updated)\n\nDocker is strongly recommended for running __cellsnake__ in a controlled environment or in Apple MAC.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8522667878284815,
      "result": {
        "original_header": "<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td rowspan=\"4\"> <img src=\"cellsnake-logo-blue-small.png\"> </td> <td> <a href=\"https://hub.docker.com/r/sinanugur/cellsnake\"><img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/sinanugur/cellsnake\" /></a> <a href=\"https://cellsnake.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/cellsnake/badge/?version=latest\" /></a>  </td>  </tr> <tr>    <td> <a href=\"https://badge.fury.io/py/cellsnake\"><img alt=\"PyPI version\" src=\"https://badge.fury.io/py/cellsnake.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/latest_release_relative_date.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/downloads.svg\" /></a> <a href=\"http://bioconda.github.io/recipes/cellsnake/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>  </td>  </tr></tbody></table>",
        "type": "Text_excerpt",
        "value": "Our main Snakemake workflow is here: https://github.com/sinanugur/scrna-workflow  \n \n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999984815965649,
      "result": {
        "original_header": "Options and Arguments",
        "type": "Text_excerpt",
        "value": "```\nUsage:\n    cellsnake <command> <INPUT> [options] [--unlock|--remove] [--dry]\n    cellsnake integrated <command> <INPUT> [options] [--unlock|--remove] [--dry]\n    cellsnake --generate-template\n    cellsnake --install-packages\n    cellsnake (-h | --help)\n    cellsnake --version\n\ncommands:\n    minimal                                Run cellsnake with minimal workflow.\n    standard                               Run cellsnake with standard workflow.\n    advanced                               Run cellsnake with advanced workflow.\n    clustree                               Run cellsnake with clustree workflow.\n    integrate                              Run cellsnake to integrate samples under analyses folder.\n                                           This option expects you have already finished processing multiple samples.\n\nmain arguments:\n    INPUT                                  Input directory or a file to process (if a directory given, batch mode is ON).\n    --configfile <text>                    Config file name in YAML format, for example, \"config.yaml\". No default but can be created with --generate-template.\n    --metadata <text>                      Metadata file name in CSV, TSV or Excel format, for example, \"metadata.csv\", header required, first column sample name. No default but can be created with --generate-template.\n    --metadata_column <text>               Metadata column for differential expression analysis [default: condition].\n\nother arguments:\n    --gene <gene or filename>              Create publication ready plots for a gene or a list of genes from a text file.\n\nmain options:\n    --percent_mt <double>                  Maximum mitochondrial gene percentage cutoff,\n                                           for example, 5 or 10, write \"auto\" for auto detection [default: 10].\n    --resolution <double>                  Resolution for cluster detection, write \"auto\" for auto detection [default: 0.8].\n\nother options:\n    --doublet_filter <bool>                [default: True] #this may fail on some samples\n    --percent_rp <double>                  [default: 0] #Ribosomal genes minimum percentage (0-100), default no filtering\n    --min_cells <integer>                  [default: 3] #seurat default, recommended\n    --min_features <integer>               [default: 200] #seurat default, recommended, nFeature_RNA\n    --max_features <integer>               [default: Inf] #seurat default, nFeature_RNA, 5000 can be a good cutoff\n    --min_molecules <integer>              [default: 0] #seurat default, nCount_RNA, min_features usually handles this so keep it 0\n    --max_molecules <integer>              [default: Inf] #seurat default, nCount_RNA, to filter potential doublets, doublet filtering is already default, so keep this Inf\n    --highly_variable_features <integer>   [default: 2000] #seurat defaults, recommended\n    --variable_selection_method <text>     [default: vst] #seurat defaults, recommended\n\n    --normalization_method <text>          [default: LogNormalize]\n    --scale_factor <integer>               [default: 10000]\n    --logfc_threshold <double>             [default: 0.25]\n    --test_use <text>                      [default: wilcox]\n\n\n    --mapping <text>                       [default: org.Hs.eg.db] #you may install others from Bioconductor, this is for human\n    --organism <text>                      [default: hsa] #alternatives https://www.genome.jp/kegg/catalog/org_list.html\n    --species <text>                       [default: human] for cellchat, #only human or mouse is accepted\n\nplotting parameters:\n    --min_percentage_to_plot <double>        [default: 2] #only show clusters more than % of cells on the legend\n    --show_labels <bool>                     [default: True] #\n    --marker_plots_per_cluster_n <integer>   [default: 20] #plot summary marker plots for top markers\n    --umap_markers_plot <bool>               [default: True]\n    --tsne_markers_plot <bool>               [default: False]\n\nannotation options:\n    --singler_ref <text>                    [default: BlueprintEncodeData] # https://bioconductor.org/packages/release/data/experiment/vignettes/celldex/inst/doc/userguide.html#1_Overview\n    --celltypist_model <text>               [default: Immune_All_Low.pkl] #refer to Celltypist for another model\n\nmicrobiome options:\n    --kraken_db_folder <text>              No default, you need to provide a folder with kraken2 database\n    --taxa <text>                          [default: genus] # available options \"domain\", \"kingdom\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\"\n    --microbiome_min_cells <integer>       [default: 1]\n    --microbiome_min_features <integer>    [default: 3]\n    --confidence <double>                  [default: 0.05] #see kraken2 manual\n    --min_hit_groups <integer>             [default: 4] #see kraken2 manual\n\nintegration options:\n    --dims <integer>                       [default: 30] #refer to Seurat for more details\n    --reduction <text>                     [default: cca] #refer to Seurat for more details\n\nothers:\n    --generate-template                    Generate config file template and metadata template in the current directory.\n    --install-packages                     Install, reinstall or check required R packages.\n    -j <integer>, --jobs <integer>         Total CPUs. [default: 2]\n    -u, --unlock                           Rescue stalled jobs (Try this if the previous job ended prematurely or currently failing).\n    -r, --remove                           Delete all output files (this won't affect input files).\n    -d, --dry                              Dry run, nothing will be generated.\n    -h, --help                             Show this screen.\n    --version                              Show version.\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8028297043777946,
      "result": {
        "original_header": "Options and Arguments",
        "type": "Text_excerpt",
        "value": "```\nUsage:\n    cellsnake <command> <INPUT> [options] [--unlock|--remove] [--dry]\n    cellsnake integrated <command> <INPUT> [options] [--unlock|--remove] [--dry]\n    cellsnake --generate-template\n    cellsnake --install-packages\n    cellsnake (-h | --help)\n    cellsnake --version\n\ncommands:\n    minimal                                Run cellsnake with minimal workflow.\n    standard                               Run cellsnake with standard workflow.\n    advanced                               Run cellsnake with advanced workflow.\n    clustree                               Run cellsnake with clustree workflow.\n    integrate                              Run cellsnake to integrate samples under analyses folder.\n                                           This option expects you have already finished processing multiple samples.\n\nmain arguments:\n    INPUT                                  Input directory or a file to process (if a directory given, batch mode is ON).\n    --configfile <text>                    Config file name in YAML format, for example, \"config.yaml\". No default but can be created with --generate-template.\n    --metadata <text>                      Metadata file name in CSV, TSV or Excel format, for example, \"metadata.csv\", header required, first column sample name. No default but can be created with --generate-template.\n    --metadata_column <text>               Metadata column for differential expression analysis [default: condition].\n\nother arguments:\n    --gene <gene or filename>              Create publication ready plots for a gene or a list of genes from a text file.\n\nmain options:\n    --percent_mt <double>                  Maximum mitochondrial gene percentage cutoff,\n                                           for example, 5 or 10, write \"auto\" for auto detection [default: 10].\n    --resolution <double>                  Resolution for cluster detection, write \"auto\" for auto detection [default: 0.8].\n\nother options:\n    --doublet_filter <bool>                [default: True] #this may fail on some samples\n    --percent_rp <double>                  [default: 0] #Ribosomal genes minimum percentage (0-100), default no filtering\n    --min_cells <integer>                  [default: 3] #seurat default, recommended\n    --min_features <integer>               [default: 200] #seurat default, recommended, nFeature_RNA\n    --max_features <integer>               [default: Inf] #seurat default, nFeature_RNA, 5000 can be a good cutoff\n    --min_molecules <integer>              [default: 0] #seurat default, nCount_RNA, min_features usually handles this so keep it 0\n    --max_molecules <integer>              [default: Inf] #seurat default, nCount_RNA, to filter potential doublets, doublet filtering is already default, so keep this Inf\n    --highly_variable_features <integer>   [default: 2000] #seurat defaults, recommended\n    --variable_selection_method <text>     [default: vst] #seurat defaults, recommended\n\n    --normalization_method <text>          [default: LogNormalize]\n    --scale_factor <integer>               [default: 10000]\n    --logfc_threshold <double>             [default: 0.25]\n    --test_use <text>                      [default: wilcox]\n\n\n    --mapping <text>                       [default: org.Hs.eg.db] #you may install others from Bioconductor, this is for human\n    --organism <text>                      [default: hsa] #alternatives https://www.genome.jp/kegg/catalog/org_list.html\n    --species <text>                       [default: human] for cellchat, #only human or mouse is accepted\n\nplotting parameters:\n    --min_percentage_to_plot <double>        [default: 2] #only show clusters more than % of cells on the legend\n    --show_labels <bool>                     [default: True] #\n    --marker_plots_per_cluster_n <integer>   [default: 20] #plot summary marker plots for top markers\n    --umap_markers_plot <bool>               [default: True]\n    --tsne_markers_plot <bool>               [default: False]\n\nannotation options:\n    --singler_ref <text>                    [default: BlueprintEncodeData] # https://bioconductor.org/packages/release/data/experiment/vignettes/celldex/inst/doc/userguide.html#1_Overview\n    --celltypist_model <text>               [default: Immune_All_Low.pkl] #refer to Celltypist for another model\n\nmicrobiome options:\n    --kraken_db_folder <text>              No default, you need to provide a folder with kraken2 database\n    --taxa <text>                          [default: genus] # available options \"domain\", \"kingdom\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\"\n    --microbiome_min_cells <integer>       [default: 1]\n    --microbiome_min_features <integer>    [default: 3]\n    --confidence <double>                  [default: 0.05] #see kraken2 manual\n    --min_hit_groups <integer>             [default: 4] #see kraken2 manual\n\nintegration options:\n    --dims <integer>                       [default: 30] #refer to Seurat for more details\n    --reduction <text>                     [default: cca] #refer to Seurat for more details\n\nothers:\n    --generate-template                    Generate config file template and metadata template in the current directory.\n    --install-packages                     Install, reinstall or check required R packages.\n    -j <integer>, --jobs <integer>         Total CPUs. [default: 2]\n    -u, --unlock                           Rescue stalled jobs (Try this if the previous job ended prematurely or currently failing).\n    -r, --remove                           Delete all output files (this won't affect input files).\n    -d, --dry                              Dry run, nothing will be generated.\n    -h, --help                             Show this screen.\n    --version                              Show version.\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Sinan U\u011fur Umu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/cellsnake-logo-blue-small.png"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cellsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "sinanugur"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20478,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1200,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinanugur",
          "type": "User"
        },
        "date_created": "2024-02-18T12:53:06Z",
        "date_published": "2024-02-19T10:39:23Z",
        "description": "Installation issue solved. Few improvements. \r\n",
        "html_url": "https://github.com/sinanugur/cellsnake/releases/tag/v0.2.0.12",
        "name": "v0.2.0.12",
        "release_id": 142568444,
        "tag": "v0.2.0.12",
        "tarball_url": "https://api.github.com/repos/sinanugur/cellsnake/tarball/v0.2.0.12",
        "type": "Release",
        "url": "https://api.github.com/repos/sinanugur/cellsnake/releases/142568444",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/releases/142568444",
        "zipball_url": "https://api.github.com/repos/sinanugur/cellsnake/zipball/v0.2.0.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinanugur",
          "type": "User"
        },
        "date_created": "2023-08-25T12:07:37Z",
        "date_published": "2023-08-25T12:12:39Z",
        "description": "Publication release, bug fixes on performance, plotting and metagenome analysis.",
        "html_url": "https://github.com/sinanugur/cellsnake/releases/tag/v0.2.0.11",
        "name": "v0.2.0.11",
        "release_id": 118704600,
        "tag": "v0.2.0.11",
        "tarball_url": "https://api.github.com/repos/sinanugur/cellsnake/tarball/v0.2.0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/sinanugur/cellsnake/releases/118704600",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/releases/118704600",
        "zipball_url": "https://api.github.com/repos/sinanugur/cellsnake/zipball/v0.2.0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinanugur",
          "type": "User"
        },
        "date_created": "2023-05-22T09:34:32Z",
        "date_published": "2023-05-23T07:49:53Z",
        "description": "Some updates and bug fixes and changes on the default parameters.",
        "html_url": "https://github.com/sinanugur/cellsnake/releases/tag/v0.2.0.1",
        "name": "v0.2.0.1",
        "release_id": 103910236,
        "tag": "v0.2.0.1",
        "tarball_url": "https://api.github.com/repos/sinanugur/cellsnake/tarball/v0.2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/sinanugur/cellsnake/releases/103910236",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/releases/103910236",
        "zipball_url": "https://api.github.com/repos/sinanugur/cellsnake/zipball/v0.2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinanugur",
          "type": "User"
        },
        "date_created": "2023-04-27T08:17:23Z",
        "date_published": "2023-04-27T08:18:32Z",
        "description": "The first release of cellsnake.",
        "html_url": "https://github.com/sinanugur/cellsnake/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 101063473,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/sinanugur/cellsnake/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/sinanugur/cellsnake/releases/101063473",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/releases/101063473",
        "zipball_url": "https://api.github.com/repos/sinanugur/cellsnake/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinanugur",
          "type": "User"
        },
        "date_created": "2023-03-22T13:18:58Z",
        "date_published": "2023-03-22T13:23:27Z",
        "description": "First development release.",
        "html_url": "https://github.com/sinanugur/cellsnake/releases/tag/v0.2.0-dev1",
        "name": "v0.2.0-dev1",
        "release_id": 96490353,
        "tag": "v0.2.0-dev1",
        "tarball_url": "https://api.github.com/repos/sinanugur/cellsnake/tarball/v0.2.0-dev1",
        "type": "Release",
        "url": "https://api.github.com/repos/sinanugur/cellsnake/releases/96490353",
        "value": "https://api.github.com/repos/sinanugur/cellsnake/releases/96490353",
        "zipball_url": "https://api.github.com/repos/sinanugur/cellsnake/zipball/v0.2.0-dev1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:24:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start examples",
        "parent_header": [
          "<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> <tbody> <tr> <td rowspan=\"4\"> <img src=\"cellsnake-logo-blue-small.png\"> </td> <td> <a href=\"https://hub.docker.com/r/sinanugur/cellsnake\"><img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/sinanugur/cellsnake\" /></a> <a href=\"https://cellsnake.readthedocs.io/en/latest/?badge=latest\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/cellsnake/badge/?version=latest\" /></a>  </td>  </tr> <tr>    <td> <a href=\"https://badge.fury.io/py/cellsnake\"><img alt=\"PyPI version\" src=\"https://badge.fury.io/py/cellsnake.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/latest_release_relative_date.svg\" /></a> </td>  </tr>  <tr>    <td> <a href=\"https://anaconda.org/bioconda/cellsnake\"><img alt=\"Anaconda-Server Badge\" src=\"https://anaconda.org/bioconda/cellsnake/badges/downloads.svg\" /></a> <a href=\"http://bioconda.github.io/recipes/cellsnake/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>  </td>  </tr></tbody></table>"
        ],
        "type": "Text_excerpt",
        "value": "Run `cellsnake` in a clean directory and `cellsnake` will create the required directories while running. You may download publicly available fetal brain dataset to test your `cellsnake` installation. The link is here.\n\nhttps://www.dropbox.com/sh/1qn2odtnci0vvtr/AADPxHH-GR4h-OuQG0TLQyxWa?dl=0\n\nAfter downloading the dataset, just point the data folder which contains the two datasets, this will trigger a standard cellsnake workflow:\n```\ncellsnake standard data\n```\n\nAfter the pipeline finishes, browse the output files. You can also integrate these two samples which makes sense.\n```\ncellsnake integrate data\n```\n\nThat is it. Lets work on the integrated object from now on, we already processed the samples separately. \n\nLet's do a minimal run, this will also generate a __clustree__ plot as well which can be used to investigate the optimal resolution.\n```\ncellsnake integrated minimal analyses_integrated/seurat/integrated.rds\n```\n\nYou want a resolution of 0.1 after checking clustree plot, then you can trigger a run with this resolution.\n```\ncellsnake integrated standard analyses_integrated/seurat/integrated.rds --resolution 0.1\n```\n\nIt is also possible to use automatic resolution selection, however this might be very slow in large datasets.\n```\ncellsnake integrated standard analyses_integrated/seurat/integrated.rds --resolution auto\n```\n\nSee our documentation for detailed explanations and to read full features: https://cellsnake.readthedocs.io/\n"
      },
      "source": "https://raw.githubusercontent.com/sinanugur/cellsnake/main/README.md",
      "technique": "header_analysis"
    }
  ]
}