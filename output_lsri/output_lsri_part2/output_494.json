{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "=====\n\n[1] Moen, M.T. and Johnston, I.G., 2023. HyperHMM: efficient inference of evolutionary and progressive dynamics on hypercubic transition graphs. Bioinformatics, 39(1), p.btac803.\n\n[2] Johnston, I.G. and Williams, B.P., 2016. Evolutionary inference across eukaryotes identifies specific pressures favoring mitochondrial gene retention. Cell systems, 2(2), pp.101-111.\n\n[3] Greenbury, S.F., Barahona, M. and Johnston, I.G., 2020. HyperTraPS: inferring probabilistic patterns of trait acquisition in evolutionary and disease progression pathways. Cell systems, 10(1), pp.39-51.\n\n[4] Szabo,A. and Pappas,L. (2022) Oncotree: Estimating Oncogenetic Trees. R package version 0.3.4.\n\n[5] De Sano,L. et al. (2016) TRONCO: an R package for the inference of cancer progression models from heterogeneous genomic data. Bioinformatics, 32, 1911\u20131913.\n\n[6] Schill,R. et al. (2020) Modelling cancer progression using mutual hazard networks. Bioinformatics, 36, 241\u2013249.\n\n[7] Conrad Sanderson and Ryan Curtin. Armadillo: a template-based c++ library for linear algebra. Journal of Open Source Software, 1(2):26, 2016.\n\n[8] Hadley Wickham. stringr: Simple, Consistent Wrappers for Common String Operations, 2019. R package version 1.4.0.\n\n[9] Hadley Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.\n\n[10] Kamil Slowikowski. ggrepel: Automatically Position Non-Overlapping Text Labels with \u2019ggplot2\u2019, 2021. R package version 0.9.1.\n\n[11] Baptiste Auguie. gridExtra: Miscellaneous Functions for \u201dGrid\u201d Graphics, 2017. R package version 2.3.\n\n[12] Gabor Csardi and Tamas Nepusz. The igraph software package for complex network research. InterJournal, Complex Systems:1695, 2006.\n\n[13] Dirk Eddelbuettel and Romain Francois (2011). Rcpp:Seamless R and C++ Integration. Journal of Statistical Software, 40(8), 1-18, <doi:10.18637/jss.v040.i08>.\n\n[14] Eddelbuettel D, Sanderson C (2014). \u201cRcppArmadillo: Accelerating R with high-performance C++ linear algebra.\u201d _Computational Statistics and Data Analysis_, *71*, 1054-1063. doi:10.1016/j.csda.2013.02.005 <https://doi.org/10.1016/j.csda.2013.02.005>.\n\n[15] Turid Knutsen et al. The interactive online sky/m-fish & cgh database and the entrez cancer chromosomes search database: linkage of chromosomal aberrations with the genome sequence. Genes, Chromosomes and Cancer, 44(1):52\u201364, 2005.\n\n[16] Nicola Casali et al. Evolution and transmission of drug-resistant tuberculosis in a russian population. Nature genetics, 46(3):279\u2013286, 2014.\n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/StochasticBiology/hypercube-hmm"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-04T08:51:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-02T07:43:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hypercubic inference using Hidden Markov Models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9675576577872279,
      "result": {
        "original_header": "hypercube-hmm",
        "type": "Text_excerpt",
        "value": "Code for HyperHMM [1] to infer the transition probabilities on a hypercubic transition network given some observations of emitted signals from a hidden Markov model on that network. Visualisations of the inferred parameterised model and its summary dynamics are also performed. This is the expectation-maximisation cousin of HyperTraPS https://github.com/StochasticBiology/HyperTraPS (simple implementation here https://github.com/StochasticBiology/hypertraps-simple). \nWe also compare the behaviour of HyperHMM with HyperTraPS [2,3], Oncotrees [4], conjunctive Bayes networks (CBN) via TRONCO [5], and mutual hazard networks (MHN) [6].\n \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9564898600503993,
      "result": {
        "original_header": "Inference",
        "type": "Text_excerpt",
        "value": "| Argument | R | Command-line | Default |\n|----------|---|--------------|---------|\n| Input data | obs=*matrix* | --obs *filename* | None (required) |\n| Label for output files | [none] | --label *labelstring* | *filename*-out |\n| Random number seed (for bootstrapping) | seed=*N* | --seed *N* | 1 |\n| Number of bootstrap resamples | nboot=*N*| --nboot *N* | 100 |\n| Simulate random walkers for each resample? | fullsample=*N* | --fullsample | (off) |\n| Initial states for longitudinal data | initialstates=*matrix* | [in input data, see below] | (none)\n| Longitudinal data? | [implied by initialstates] | --longitudinal | (off) | \nThe code outputs several objects. In R, these are elements of a named list that is returned by `HyperHMM`; from the command line, they are datafiles. These objects describe the maximum likelihood inferred transition probabilities between states (`$transitions` in R; `transitions_labelstring.txt` from the command-line), the mean and bootstrap standard deviation (`$stats`; wide-form `mean_labelstring.txt` and `sd_labelstring.txt`), and a set of transitions from sampled trajectories of random walkers simulated on the inferred network (`$viz`; `graph_viz_labelstring.txt`).\n \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.959548365557549,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "------\nSynthetic and published data is in `Data`. The ovarian cancer dataset is from [15]; the tuberculosis dataset is from [16]. \nData is provided as a matrix via the required first argument \"obs\", where each row gives an independent snapshot observation of length L, for example \nFor longitudinal data, a matrix with the same number of rows and columns can be provided describing the initial states for each observation via the argument \"initialstates\", for example \nFor cross-sectional observations, data should be provided as a single-column file where each row gives an independent snapshot observation of length L, for example \nFor longitudinal observations, including those derived from estimated phylogenies, data should be provided as a two-column file where each row gives an independent transition observation between two states of length L, for example \nThe initial state is assumed to be all `0`s, and the system evolves by acquiring `1`s. \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9793646022608491,
      "result": {
        "original_header": "Output and plotting",
        "type": "Text_excerpt",
        "value": "| Element | Description |\n|---------|---------|\n| *stats* | \"Bubble plot\" summary statistics: the mean and bootstrap s.d. of the probability that a feature is acquired at a given ordering step in the accumulation process |\n| *transitions* | The weights and probability fluxes for each transition between states, for each bootstrap resample and for the original dataset (corresponding to *Bootstrap* == 0 in the data frame) |\n| *features* | Empty by default, to allow for feature names |\n| *viz* | Collection of observed transitions from simulated random walkers, represented as string containing before and after states, for use in sampled visualisation |\n| *L* | The number of features in the system  \nPlotting is done in R, using functions in `hypercube-plots.R`. These include \"bubble\" plots for mean feature orderings, hypercube visualisations illustrating the complete transition network, and ordering graphs showing pairwise acquisition orderings. \n| Element | Description | Optional arguments\n|---------|---------|------|\n| `plot.bubbles2` | \"Bubble plot\" summary statistics: the mean and bootstrap s.d. of the probability that a feature is acquired at a given ordering step in the accumulation process | |\n| `plot.hypercube2` | Visualisation of the hypercubic transition graph | |\n| `plot.pfg` | Visualisation of which feature acquisitions follow which others | |\n| `plot.standard` | Collection of the three above plot types | |\n| `plot.hypercube.flux` | (Rather improved) visualisation of the hypercubic transition graph -- recommended over the above |\n \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9276589875852975,
      "result": {
        "original_header": "Other approaches and manuscript links",
        "type": "Text_excerpt",
        "value": "From earlier development, the code base includes several R scripts that \"wrap\" external calls to HyperHMM, including preparing data and pulling output for plots. This setup was less streamlined than fully integrating HyperHMM into the R environment via Rcpp. There is also code that \"wraps\" HyperTraPS, and explores other inference approaches. These are now all in the `wrappers` directory and will currently have some path issues relative to the other files. \nThe analyses and figures in the associated manuscript are reproduced with the various `...-start.R` and `...-retrieve.R` scripts. If you want to run these, pull the `Data/` contents into the working directory first. *As of a 2023 update, the HyperHMM results in the paper are also produced with a single R script `hyperhmm-run.R` in the root directory.* \nSpecifically, `double-approach-....R` compares HyperHMM and HyperTraPS, and `other-approaches-....R` compares HyperHMM, HyperTraPS, Oncotrees, MHN, and CBN (TRONCO).\n \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9581387526445465,
      "result": {
        "original_header": "Old command-line formatting",
        "type": "Text_excerpt",
        "value": "In its first published form, the following was true. This input format is preserved for backwards compatibility but the setup above is recommended for flexibility. \n`./hyperhmm.ce [datafile] [number of features] [number of bootstrap resamples] [output file label] [cross-sectional data (0 or 1)] [simulate random walkers for each sample (0 or 1)]` \n- `datafile` -- a datafile containing cross-sectional or longitudinal observations as bit strings (see below)\n- `number of features` -- the number of features/traits/characters in the system (i.e. the length of a bit string in the datafile)\n- `number of bootstrap resamples` -- 0 for a single point estimate; >0 runs the given number of resamples in addition\n- `output file label` -- a string to label output files\n- `cross-sectional data` -- if 1, data are assumed to be independent snapshots and the datafile should have one column. If 0, data are assumed to be observed transitions between two states and the datafile should have two columns (ancestor and descendant state)\n- `simulate random walkers for each sample` -- random walkers are simulated on the point estimate hypercube to summarise the dynamics. If 1, they are simulated on every bootstrapped hypercube too and the summary is over all resamples. This can make the code take much longer for simple systems. \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/StochasticBiology/hypercube-hmm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/StochasticBiology/hypercube-hmm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "StochasticBiology/hypercube-hmm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hypercube-hmm"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/assets/50171196/893b96c8-12ec-4511-b314-567955870ab2"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9264532617068987,
      "result": {
        "original_header": "hypercube-hmm",
        "type": "Text_excerpt",
        "value": "Hypercubic inference using Hidden Markov Models, from https://academic.oup.com/bioinformatics/article/39/1/btac803/6895098  \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9017415345908697,
      "result": {
        "original_header": "Other approaches and manuscript links",
        "type": "Text_excerpt",
        "value": "The analyses and figures in the associated manuscript are reproduced with the various `...-start.R` and `...-retrieve.R` scripts. If you want to run these, pull the `Data/` contents into the working directory first. *As of a 2023 update, the HyperHMM results in the paper are also produced with a single R script `hyperhmm-run.R` in the root directory.* \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8565317517320893,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Examples\n------\n_In R:_ \n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/StochasticBiology/hypercube-hmm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hypercube-hmm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "StochasticBiology"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 156624,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 56256,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 14507,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "hypercube-hmm"
        ],
        "type": "Text_excerpt",
        "value": "-------\n\nThe inference code uses the C++ `armadillo` library [7]. Other visualisations use R libraries `stringr` [8], `ggplot2` [9], `ggrepel` [10], `gridExtra` [11], and `igraph` [12].\n\nThe R implementation requires `Rcpp` [13] and `RcppArmadillo` [14].\n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:54:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Contents"
        ],
        "type": "Text_excerpt",
        "value": "-------\n\n_In R:_\n\nMake sure you have the `Rcpp` and `RcppArmadillo` libraries installed. Then you can access HyperHMM functionality with\n\n```\nlibrary(Rcpp)\nlibrary(RcppArmadillo)\nsourceCpp(\"hyperhmm-r.cpp\")\n```\n\nThe function `HyperHMM`, described further below, performs inference given (at least) a matrix of observations. For example,\n\n```\nm = matrix(c(0,0,1,0,1,1), byrow=TRUE, ncol=3)\nHyperHMM(m)\n```\n\nHave a look at `hyperhmm-demos.R` for some simple examples, and `hyperhmm-run.R` for more examples from the paper.\n\n_From the command line:_\n\nYou'll need to compile the C++ code. Install the `armadillo` library on your machine, then the command to compile from the Terminal may look something like\n```\ng++ hyperhmm.cpp -larmadillo -o hyperhmm.ce\n```\n\nThen a simple example could be run with\n\n```\n./hyperhmm.ce --obs Data/simple_case1_L5.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/StochasticBiology/hypercube-hmm/main/README.md",
      "technique": "header_analysis"
    }
  ]
}