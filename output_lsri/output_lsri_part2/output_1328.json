{
  "application_domain": [
    {
      "confidence": 13.11,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EPFL-LCSB/skimpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-28T06:16:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T14:42:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Symbolic Kinetic Models with Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9677530739191549,
      "result": {
        "original_header": "SKiMpy: Symbolic Kinetic Models in Python",
        "type": "Text_excerpt",
        "value": "SKiMpy is a python package bridging implementing an efficient kinetic model-ing toolbox to build and analyze large-scale kinetic models for various biological domains such as signaling, gene expression, and metabolism. Furthermore, we demonstrate how this toolbox is used to parameterize kinetic models around a steady-state reference efficiently. Finally, we show how SKiMpy can implement multispecies bioreactor simulations to assess biotechnological processes. \n\n    - Non-linear ordinary equations for large scale kinetic models\n    - Steady state consistent parameter sampling(see ORACLE)\n    - Metabolic control analysis\n    - Modal analysis\n    - Uncertainty propagation in metabolic control\n    - Multispecies bioreactor modeling \n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://real-skimpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EPFL-LCSB/SKiMpy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EPFL-LCSB/skimpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SKiMpy: Symbolic Kinetic Models in Python"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/doc/autodoc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/.scripts/run_osx_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/.scripts/build_steps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/.scripts/run_docker_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/.scripts/logging_utils.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/utils/install_chrome.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/utils/activate_gurobi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/utils/install_gurobi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/utils/install_sundials.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/docker/utils/install_cplex.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Container-based install",
        "type": "Text_excerpt",
        "value": "\nYou might want to use this program inside of a container. The\n|docker|_\nsubfolder has all the necessary information and source files to build it\nlocally.\n\nAlso you can directly pull the docker image: docker.io/danielweilandt/skimpy\nNote that if you want to use a comercial solver such as CPLEX or GUROBI you will need rebuild the |docker|_ repository.\n\n.. |docker| replace:: ``docker/``\n.. _docker: https://github.com/EPFL-LCSB/skimpy/tree/master/docker\n\n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "type": "Text_excerpt",
        "value": "*This step is not required if you're using the container, which bundles all this.*\n\nIf you prefer a local installation of skimpy we provide a conda package bundeling binary depdendecies for linux and OSX operatings systems. \nWindows users can install the conda packages using a linux subsystem via `WLS <https://docs.microsoft.com/en-us/windows/wsl/install>`_.\n\nA comprehensive explanation to install anaconda/miniconda within the WLS linux subsystem can be found `here <https://gist.github.com/kauffmanes/5e74916617f9993bc3479f401dfec7da>`_.\n\n\nWe arre currently in the process of deploying SKiMpy and its depdency pyTFA to conda forge for a fullly atomated installation. \nIn the meantime you can download current version of the respective packages `here <https://github.com/EPFL-LCSB/skimpy/releases/tag/v1.0.0>`_.\n\nThen install pytfa and skimpy using the local source:\n\n.. code:: bash\n  \n  # Add conda-forge / bioconda channels (required)\n  conda config --add channels bioconda\n  conda config --add channels conda-forge\n  conda config --set channel_priority strict\n\n\n  # Create a new environment (highly recommended since currently only python 3.8 is supported for conda)\n  conda create --name skimpy-env python=3.8\n  conda activate skimpy-env \n \n  conda install weilandtd::skimpy\n\nWIP: the conda package package will currenly print an error message upon plotting with bokeh although  it produces the desired file see #11. \n\nAlternatively you can install this module from source using ``pip``:\n*For Python 3, you might have to use* ``pip3`` *instead of* ``pip``\n\n.. code:: bash\n\n    git clone https://github.com/EPFL-LCSB/skimpy.git /path/to/skimpy\n    pip3 install -e /path/to/skimpy\n\n\nInstallation of these packages on the native windows system is challenging we thus recommend windows users to install\nthe package only with in linux subsystem using `WLS <https://docs.microsoft.com/en-us/windows/wsl/install>`_.\n  \nTo use the ODE integration features scikit-odes is required to be installed beforehand following the instructions found\n`here <https://scikits-odes.readthedocs.io/en/stable/installation.html>`_.\nTo use the 'cvode' solver from the scikit-odes packages we strongly recommend to install the\n`sundials <https://computing.llnl.gov/projects/sundials>`_ solvers as ODE integration of large ODE system can be\nslow with python implemented solvers see benchmark `here <https://scikits-odes.readthedocs.io/en/stable/solvers.html>`_.\n\nInstallation from source has been tested on Ubuntu 21.10  (`@eladnoor <https://github.com/eladnoor/>`_) the additional\npackages can be installed using:\n\n.. code:: bash\n\n  sudo apt install gfortran libsundials-dev libflint-dev libgmp-dev\n\n\nWindows users using *WSL* can install these dependencies in a similar fashion after starting the subsystem console.\n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8589726871271961,
      "result": {
        "original_header": "SKiMpy: Symbolic Kinetic Models in Python",
        "type": "Text_excerpt",
        "value": " |docs| |Build Status| |Codecov| |Codacy branch grade| |license|  \n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "The software in this repository is put under an APACHE-2.0 licensing scheme - please see the `LICENSE <https://github.com/EPFL-LCSB/skimpy/blob/master/LICENSE.txt>`_ file for more details.\n\n.. |docs| image:: https://readthedocs.org/projects/real-skimpy/badge/?version=latest\n   :target: https://real-skimpy.readthedocs.io/en/latest/?badge=latest\n.. |license| image:: http://img.shields.io/badge/license-APACHE2-blue.svg\n   :target: https://github.com/EPFL-LCSB/skimpy/blob/master/LICENSE.txt\n.. |Build Status| image:: https://travis-ci.org/EPFL-LCSB/skimpy.svg?branch=master\n   :target: https://travis-ci.org/EPFL-LCSB/skimpy\n.. |Codecov| image:: https://img.shields.io/codecov/c/github/EPFL-LCSB/skimpy.svg\n   :target: https://codecov.io/gh/EPFL-LCSB/skimpy\n.. |Codacy branch grade| image:: https://img.shields.io/codacy/grade/d56d598a8a3b444e8ea5fb1f7eee6e2a\n   :target: https://www.codacy.com/app/realLCSB/skimpy\n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "skimpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "EPFL-LCSB"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 620139,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 17114,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 4533,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2456,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 139,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 104,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scikits-odes.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://real-skimpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weilandtd",
          "type": "User"
        },
        "date_created": "2022-06-27T15:07:45Z",
        "date_published": "2022-06-27T14:31:49Z",
        "description": "Release implementing second round of revisions. \r\n\r\nTo install the conda distribution, download the respective archive for your operating system and unpack it in the desired location\r\nFollow the installation instruction given in the README. Windows users can install this package in their Linux subsystem using WSL. \r\n\r\nIMPORTANT NOTE: Currently GitHub does not include binary files in compressed release archives [See this [issue].](https://github.com/git-lfs/git-lfs/issues/3877) If downloading the compressed files you will need to download the *.mat and *.thermodb files manually. This issue does not persist when cloning the repository. \r\n\r\n**Full Changelog**: https://github.com/EPFL-LCSB/skimpy/compare/v1.0.1...v1.0.2",
        "html_url": "https://github.com/EPFL-LCSB/skimpy/releases/tag/v1.0.2",
        "name": "v1.0.2",
        "release_id": 70649938,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/70649938",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/70649938",
        "zipball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weilandtd",
          "type": "User"
        },
        "date_created": "2022-05-11T05:25:06Z",
        "date_published": "2022-05-11T00:03:43Z",
        "description": "Patched release dropped python 3.9 support due to reoccurring conflict see [conda issue](https://github.com/conda/conda/issues/11442)\r\n\r\nTo install the conda distribution, download the respective archive for your operating system and unpack it in the desired location\r\nFollow the installation instruction given in the README. Windows users can install this package in their Linux subsystem using WSL. \r\n\r\n\r\n",
        "html_url": "https://github.com/EPFL-LCSB/skimpy/releases/tag/v1.0.1",
        "name": "Patched revision release",
        "release_id": 66527770,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/66527770",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/66527770",
        "zipball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weilandtd",
          "type": "User"
        },
        "date_created": "2022-05-09T00:40:55Z",
        "date_published": "2022-05-09T00:42:27Z",
        "description": "First attempt for a release for the review. \r\n\r\nDownload the respective archive for your operating system and unpack it in the desired location\r\nFollow the installation instruction given in the README \r\n\r\nWindows users install Linux-64 skimpy in WSL ",
        "html_url": "https://github.com/EPFL-LCSB/skimpy/releases/tag/v1.0.0",
        "name": "Release for review ",
        "release_id": 66327445,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/66327445",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/66327445",
        "zipball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weilandtd",
          "type": "User"
        },
        "date_created": "2022-04-25T15:32:35Z",
        "date_published": "2022-04-25T22:26:27Z",
        "description": "This is a test release for conda packaging ",
        "html_url": "https://github.com/EPFL-LCSB/skimpy/releases/tag/v0.9.1-beta",
        "name": "Conda test 1",
        "release_id": 65287614,
        "tag": "v0.9.1-beta",
        "tarball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/tarball/v0.9.1-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/65287614",
        "value": "https://api.github.com/repos/EPFL-LCSB/skimpy/releases/65287614",
        "zipball_url": "https://api.github.com/repos/EPFL-LCSB/skimpy/zipball/v0.9.1-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "You will need to have `Git-LFS <https://git-lfs.github.com/>`_ in order to properly download some binary files:\n\n.. code:: bash\n\n    git clone https://github.com/EPFL-LCSB/skimpy.git /path/to/skimpy\n    cd /path/to/skimpy\n    git lfs install\n    git lfs pull\n\nThis module was developed in Python 3.9, and it is recommended to run Python 3.9.\nThe module also was tested in Python 3.8.\n\nFurther the following pip-python packages are required\n    - sympy >=1.1\n    - pytest\n    - scipy\n    - numpy\n    - bokeh\n    - pandas\n    - Cython\n    - markupsafe <=2.0.1\n    - bokeh >=0.12.0\n    - scikits.odes ==2.6.3\n    - deap\n    - dill\n    - h5py\n    - escher\n    - pytfa\n    - cobra <=0.24.0\n\n\nThe installation requires additionaly the following libraries:\n  - gcc\n  - gfortran\n  - libsundials-dev\n  - libflint-dev\n  - libgmp-dev\n\nFurther more using the escher plot and aninmation functions (skimpy.viz.escher) requires a Chrome installation. \nAn installation script for linux systems can be found in docker/utils/install_chrome.sh\n\nTo use the ORACLE method for large-scale metabolic networks it is recommended to install a commercial\nsolver package such as CPLEX or GUROBI.\nNote that SKiMpy requires a python version >= 3.7 the default docker version is currently 3.9.\nIt is important that your solver supports your installed python version. We recommend installing CPLEX Studio221 which\nsupports python versions: 3.7, 3.8, 3.9 and 3.10. A point by point installation guide for OSx and Linux is found `here <https://github.com/EPFL-LCSB/skimpy/edit/master/SOLVERS.md>`_.\n\n"
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:02:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "type": "Text_excerpt",
        "value": "To get right into building kinetic models please find below a simple example to get started:\n\n.. code-block:: python\n\n    import numpy as np\n    from skimpy.core import *\n    from skimpy.mechanisms import *\n\n    name = 'pfk'\n    metabolites = ReversibleMichaelisMenten.Reactants(substrate = 'A',\n                                                       product = 'B')\n\n    parameters = ReversibleMichaelisMenten.Parameters(\n        vmax_forward = 1.0,\n        k_equilibrium=2.0,\n        km_substrate = 10.0,\n        km_product = 10.0,\n        total_enzyme_concentration = 1.0,\n    )\n\n\n    pfk = Reaction(name=name,\n                   mechanism = ReversibleMichaelisMenten,\n                   reactants=metabolites,\n                   )\n\n    this_model = KineticModel()\n    this_model.add_reaction(pfk)\n    this_model.parametrize_by_reaction({pfk.name:parameters})\n    this_model.compile_ode(sim_type = QSSA)\n\n    this_model.initial_conditions['A'] = 1.0\n    this_model.initial_conditions['B'] = 1.0\n\n    this_sol_qssa = this_model.solve_ode(np.linspace(0.0, 100.0, 1000), solver_type='cvode')\n\n    this_sol_qssa.plot('output/uni_uni_base_out_qssa.html')\n\n\nMore information can be found\n`here <http://real-skimpy.readthedocs.io/en/latest/quickstart.html>`__.\n\n\n   "
      },
      "source": "https://raw.githubusercontent.com/EPFL-LCSB/SKiMpy/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}