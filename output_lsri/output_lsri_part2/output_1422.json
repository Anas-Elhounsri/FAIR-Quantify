{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "@article{Jackman_2017,\ntitle={ABySS 2.0: resource-efficient assembly of large genomes using a Bloom filter},\nvolume={27},\nISSN={1549-5469},\nurl={http://doi.org/10.1101/gr.214346.116},\nDOI={10.1101/gr.214346.116},\nnumber={5},\njournal={Genome Research},\npublisher={Cold Spring Harbor Laboratory},\nauthor={Jackman, Shaun D. and Vandervalk, Benjamin P. and Mohamadi, Hamid and Chu, Justin and Yeo, Sarah and Hammond, S. Austin and Jahesh, Golnaz and Khan, Hamza and Coombe, Lauren and Warren, Rene L. and et al.},\nyear={2017},\nmonth={Feb},\npages={768\u2013777}\n}\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/CITATION.bib",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"http://doi.org/10.1101/gr.214346.116\">ABySS 2.0</a>",
        "parent_header": [
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Shaun D Jackman, Benjamin P Vandervalk, Hamid Mohamadi, Justin Chu, Sarah Yeo, S Austin Hammond, Golnaz Jahesh, Hamza Khan, Lauren Coombe, Ren\u00e9 L Warren, and Inanc Birol (2017).\n**ABySS 2.0: Resource-efficient assembly of large genomes using a Bloom filter**.\n*Genome research*, 27(5), 768-777.\n[doi:10.1101/gr.214346.116](http://doi.org/10.1101/gr.214346.116)\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"http://genome.cshlp.org/content/19/6/1117\">ABySS</a>",
        "parent_header": [
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Simpson, Jared T., Kim Wong, Shaun D. Jackman, Jacqueline E. Schein,\nSteven JM Jones, and Inanc Birol (2009).\n**ABySS: a parallel assembler for short read sequence data**.\n*Genome research*, 19(6), 1117-1123.\n[doi:10.1101/gr.089532.108](http://dx.doi.org/10.1101/gr.089532.108)\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcgsc/abyss"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2012-03-19T23:13:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T22:26:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":microscope: Assemble large genomes using short reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9925380234099157,
      "result": {
        "original_header": "ABySS",
        "type": "Text_excerpt",
        "value": "ABySS is a *de novo* sequence assembler intended for short paired-end reads and genomes of all sizes. \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8711129655127202,
      "result": {
        "original_header": "Compiling ABySS from source",
        "type": "Text_excerpt",
        "value": "ABySS will receive an error when compiling with Boost 1.51.0 or 1.52.0\nsince they contain a bug. Later versions of Boost compile without error. \nWhile OpenMPI is assumed by default you can switch to LAM/MPI or MPICH\nusing: \nThe default maximum k-mer size is 192 and may be decreased to reduce\nmemory usage or increased at compile time. This value must be a\nmultiple of 32 (i.e. 32, 64, 96, 128, etc): \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9222452580363211,
      "result": {
        "original_header": "Bloom filter mode",
        "type": "Text_excerpt",
        "value": "The recommended mode of running ABySS is the Bloom filter mode. Specifying\nthe Bloom filter memory budget with the `B` parameter enables this mode, which can\nreduce memory consumption by ten-fold compared to the MPI mode. `B` may be specified\nwith unit suffixes 'k' (kilobytes), 'M' (megabytes), 'G' (gigabytes). If no units\nare specified bytes are assumed. Internally, the Bloom filter assembler allocates\nthe entire memory budget (`B * 8/9`) to a Counting Bloom filter, and an additional\n(`B/9`) memory to another Bloom filter that is used to track k-mers that have previously\nbeen included in contigs. \nA good value for `B` depends on a number of factors, but primarily on the\ngenome being assembled. A general guideline is: \nFor other genome sizes, the value for `B` can be interpolated. Note that\nthere is no downside to using larger than necessary `B` value, except for\nthe memory required. To make sure you have selected a correct `B` value,\ninspect the standard error log of the assembly process and ensure that the\nreported FPR value under `Counting Bloom filter stats` is 5% or less. This\nrequires using verbosity level 1 with `v=-v` option.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9713497465301248,
      "result": {
        "original_header": "MPI mode (legacy)",
        "type": "Text_excerpt",
        "value": "This mode is legacy and we do not recommend running ABySS with it.\nTo run ABySS in the MPI mode, you need to specify the `np` parameter,\nwhich specifies the number of processes to use for the parallel MPI job.\nWithout any MPI configuration, this will allow you to use multiple cores\non a single machine. To use multiple machines for assembly, you must create\na `hostfile` for `mpirun`, which is described in the `mpirun` man page. \nThe paired-end assembly stage is multithreaded, but must run on a\nsingle machine. The number of threads to use may be specified with the\nparameter `j`. The default value for `j` is the value of `np`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9475677177650538,
      "result": {
        "original_header": "Optimizing the parameters k and kc",
        "type": "Text_excerpt",
        "value": "It is standard practice when running ABySS to run multiple assemblies\nto find the optimal values for the `k` and `kc` parameters. `k` determines\nthe k-mer size in the de Bruijn Graph, and `kc` is the k-mer minimum coverage\nmultiplicity cutoff, which filters out erroneous k-mers. The range in which `k`\nshould be tested depends on the read size and read coverage. \nA rough indicator is, for 2x150bp reads and 40x coverage, the right `k` value is often around 70 to 90. For 2x250bp reads and 40x coverage, the right value might be around 110 to 140. \nFor `kc`, 2 is most often a good value, but can go as high as 4. \nThe following shell snippet will assemble for `k` values 2 and 3, and every eighth value of `k` from 50 to 90. In the end, we calculate the contiguity statistics, as a proxy for identifying the optimal assembly. Other metrics can be used, as needed. \n\tfor kc in 2 3; do\n\t\tfor k in `seq 50 8 90`; do\n\t\t\tmkdir k${k}-kc${kc}\n\t\t\tabyss-pe -C k${k}-kc${kc} name=ecoli B=2G k=$k kc=$kc in=../reads.fa\n\t\tdone\n\tdone\n\tabyss-fac k*/ecoli-scaffolds.fa \nThe default maximum value for `k` is 192. This limit may be changed at\ncompile time using the `--enable-maxk` option of configure. It may be\ndecreased to 32 to decrease memory usage or increased to larger values.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9819279627115584,
      "result": {
        "original_header": "Using the DIDA alignment framework",
        "type": "Text_excerpt",
        "value": "ABySS supports the use of DIDA (Distributed Indexing Dispatched Alignment),\nan MPI-based framework for computing sequence alignments in parallel across\nmultiple machines. The DIDA software must be separately downloaded and\ninstalled from http://www.bcgsc.ca/platform/bioinfo/software/dida. In\ncomparison to the standard ABySS alignment stages which are constrained\nto a single machine, DIDA offers improved performance and the ability to\nscale to larger targets. Please see the DIDA section of the abyss-pe man\npage (in the `doc` subdirectory) for details on usage.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9815095042676043,
      "result": {
        "original_header": "Assembly Parameters",
        "type": "Text_excerpt",
        "value": " * `a`: maximum number of branches of a bubble [`2`]\n * `b`: maximum length of a bubble (bp) [`\"\"`]\n * `B`: Bloom filter size (e.g. \"100M\")\n * `c`: minimum mean k-mer coverage of a unitig [`sqrt(median)`]\n * `d`: allowable error of a distance estimate (bp) [`6`]\n * `e`: minimum erosion k-mer coverage [`round(sqrt(median))`]\n * `E`: minimum erosion k-mer coverage per strand [1 if `sqrt(median) > 2` else 0]\n * `G`: genome size, used to calculate NG50\n * `H`: number of Bloom filter hash functions [`4`]\n * `j`: number of threads [`2`]\n * `k`: size of k-mer (when `K` is not set) or the span of a k-mer pair (when `K` is set)\n * `kc`: minimum k-mer count threshold for Bloom filter assembly [`2`]\n * `K`: the length of a single k-mer in a k-mer pair (bp)\n * `l`: minimum alignment length of a read (bp) [`40`]\n * `m`: minimum overlap of two unitigs (bp) [`0` (interpreted as `k - 1`) if `mp` is provided or if `k<=50`, otherwise `50`]\n * `n`: minimum number of pairs required for building contigs [`10`]\n * `N`: minimum number of pairs required for building scaffolds [`15-20`]\n * `np`: number of MPI processes [`1`]\n * `p`: minimum sequence identity of a bubble [`0.9`]\n * `q`: minimum base quality [`3`]\n * `s`: minimum unitig size required for building contigs (bp) [`1000`]\n * `S`: minimum contig size required for building scaffolds (bp) [`100-5000`]\n * `t`: maximum length of blunt contigs to trim [`k`]\n * `v`: use `v=-v` for verbose logging, `v=-vv` for extra verbose\n * `x`: spaced seed (Bloom filter assembly only)\n * `lr_s`: minimum contig size required for building scaffolds with linked reads (bp) [`S`]\n * `lr_n`: minimum number of barcodes required for building scaffolds with linked reads [`10`]\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8733733155913058,
      "result": {
        "original_header": "ABySS programs",
        "type": "Text_excerpt",
        "value": "`abyss-pe` is a driver script implemented as a Makefile. Any option of\n`make` may be used with `abyss-pe`. Particularly useful options are: \n * `ABYSS`: de Bruijn graph assembler\n * `ABYSS-P`: parallel (MPI) de Bruijn graph assembler\n * `AdjList`: find overlapping sequences\n * `DistanceEst`: estimate the distance between sequences\n * `MergeContigs`: merge sequences\n * `MergePaths`: merge overlapping paths\n * `Overlap`: find overlapping sequences using paired-end reads\n * `PathConsensus`: find a consensus sequence of ambiguous paths\n * `PathOverlap`: find overlapping paths\n * `PopBubbles`: remove bubbles from the sequence overlap graph\n * `SimpleGraph`: find paths through the overlap graph\n * `abyss-fac`: calculate assembly contiguity statistics\n * `abyss-filtergraph`: remove shim contigs from the overlap graph\n * `abyss-fixmate`: fill the paired-end fields of SAM alignments\n * `abyss-map`: map reads to a reference sequence\n * `abyss-scaffold`: scaffold contigs using distance estimates\n * `abyss-todot`: convert graph formats and merge graphs\n * `abyss-rresolver`: resolve repeats using short reads \nThis [flowchart](https://github.com/bcgsc/abyss/blob/master/doc/flowchart.pdf) shows the ABySS assembly pipeline and its intermediate files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9573062801987349,
      "result": {
        "original_header": "Export to SQLite Database",
        "type": "Text_excerpt",
        "value": "ABySS has a built-in support for SQLite database to export log values into a SQLite file and/or `.csv` files at runtime.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9478981594078751,
      "result": {
        "original_header": "Database parameters",
        "type": "Text_excerpt",
        "value": " * `db`: path to SQLite repository file [`$(name).sqlite`]\n * `species`: name of species to archive [ ]\n * `strain`: name of strain to archive [ ]\n * `library`: name of library to archive [ ] \nFor example, to export data of species 'Ecoli', strain 'O121' and library 'pea' into your SQLite database repository named '/abyss/test.sqlite': \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9805451766467,
      "result": {
        "original_header": "<a href=\"http://www.nature.com/nmeth/journal/v7/n11/abs/nmeth.1517.html\">Trans-ABySS</a>",
        "type": "Text_excerpt",
        "value": "Robertson, Gordon, Jacqueline Schein, Readman Chiu, Richard Corbett,\nMatthew Field, Shaun D. Jackman, Karen Mungall, et al (2010).\n**De novo assembly and analysis of RNA-seq data**.\n*Nature methods*, 7(11), 909-912.\n[doi:10.1038/10.1038/nmeth.1517](http://dx.doi.org/10.1038/nmeth.1517)\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcgsc/abyss/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 107
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcgsc/abyss/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bcgsc/abyss"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ABySS"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/vendor/btl_bloomfilter/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/vendor/nthash/autogen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install ABySS using Conda (recommended)",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you have the [Conda](https://docs.conda.io/en/latest/) package manager (Linux, MacOS) installed, run:\n\n\tconda install -c bioconda -c conda-forge abyss\n\nOr you can install ABySS in a dedicated environment:\n\n    conda create -n abyss-env\n    conda activate abyss-env\n    conda install -c bioconda -c conda-forge abyss\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install ABySS using Homebrew",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you have the [Homebrew](https://brew.sh) package manager (Linux, MacOS) installed, run:\n\n\tbrew install abyss\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install ABySS on Windows",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install [Windows Subsystem for Linux](https://docs.microsoft.com/en-us/windows/wsl/) from which you can run Conda or Homebrew installation.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Assemble a small synthetic data set",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "\twget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/1.3.4/test-data.tar.gz\n\ttar xzvf test-data.tar.gz\n\tabyss-pe k=25 name=test B=1G \\\n\t\tin='test-data/reads1.fastq test-data/reads2.fastq'\n\nCalculate assembly contiguity statistics:\n\n\tabyss-fac test-unitigs.fa test-contigs.fa test-scaffolds.fa\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9452870409035078,
      "result": {
        "original_header": "Compiling ABySS from source",
        "type": "Text_excerpt",
        "value": "When compiling ABySS from source the following tools are\nrequired: \nABySS requires a C++ compiler that supports\n[OpenMP](http://www.openmp.org) such as [GCC](http://gcc.gnu.org). \nThe following libraries are required: \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9647390237755505,
      "result": {
        "original_header": "Optional dependencies",
        "type": "Text_excerpt",
        "value": "Conda: \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999998627722149,
      "result": {
        "original_header": "Compiling ABySS from source",
        "type": "Text_excerpt",
        "value": "\tconda install -c conda-forge boost openmpi\n\tconda install -c bioconda google-sparsehash btllib \nIt is also helpful to install the compilers Conda package that automatically passes the correct compiler flags to use the available Conda packages: \n\tconda install -c conda-forge compilers \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8856278322065159,
      "result": {
        "original_header": "Optional dependencies",
        "type": "Text_excerpt",
        "value": "Homebrew: \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9875024919869851,
      "result": {
        "original_header": "Compiling ABySS from source",
        "type": "Text_excerpt",
        "value": "\tbrew install boost open-mpi google-sparsehash \nTo compile, run the following: \n\t./autogen.sh\n\tmkdir build\n\tcd build\n\t../configure --prefix=/path/to/abyss\n\tmake\n\tmake install \nYou may also pass the following flags to `configure` script: \n\t--with-boost=PATH\n\t--with-mpi=PATH\n\t--with-sqlite=PATH\n\t--with-sparsehash=PATH\n\t--with-btllib=PATH \nWhere PATH is the path to the directory containing the corresponding dependencies. This should only be necessary if `configure` doesn't find the dependencies by default. If you are using Conda, PATH would be the path to the Conda installation. SQLite and MPI are optional dependencies. \nThe above steps install ABySS at the provided path, in this case `/path/to/abyss`.\nNot specifying `--prefix` would install in `/usr/local`, which requires\nsudo privileges when running `make install`. \nABySS requires a modern compiler such as GCC 6 or greater. If you have multiple\nversions of GCC installed, you can specify a different compiler: \n\t../configure CC=gcc-10 CXX=g++-10 \n        ../configure --enable-lammpi\n        ../configure --enable-mpich \n\t../configure --enable-maxk=160 \nIf you encounter compiler warnings that are not critical, you can allow the compilation to continue: \nTo run ABySS, its executables should be found in your `PATH` environment variable. If you\ninstalled ABySS in `/opt/abyss`, add `/opt/abyss/bin` to your `PATH`: \n\tPATH=/opt/abyss/bin:$PATH\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9878750199779955,
      "result": {
        "original_header": "Bloom filter mode",
        "type": "Text_excerpt",
        "value": "For other genome sizes, the value for `B` can be interpolated. Note that\nthere is no downside to using larger than necessary `B` value, except for\nthe memory required. To make sure you have selected a correct `B` value,\ninspect the standard error log of the assembly process and ensure that the\nreported FPR value under `Counting Bloom filter stats` is 5% or less. This\nrequires using verbosity level 1 with `v=-v` option.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9290565284096577,
      "result": {
        "original_header": "MPI mode (legacy)",
        "type": "Text_excerpt",
        "value": "This mode is legacy and we do not recommend running ABySS with it.\nTo run ABySS in the MPI mode, you need to specify the `np` parameter,\nwhich specifies the number of processes to use for the parallel MPI job.\nWithout any MPI configuration, this will allow you to use multiple cores\non a single machine. To use multiple machines for assembly, you must create\na `hostfile` for `mpirun`, which is described in the `mpirun` man page. \n*Do not* run `mpirun -np 8 abyss-pe`. To run ABySS with 8 threads, use\n`abyss-pe np=8`. The `abyss-pe` driver script will start the MPI\nprocess, like so: `mpirun -np 8 ABYSS-P`. \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9926971916568059,
      "result": {
        "original_header": "Optimizing the parameters k and kc",
        "type": "Text_excerpt",
        "value": "The default maximum value for `k` is 192. This limit may be changed at\ncompile time using the `--enable-maxk` option of configure. It may be\ndecreased to 32 to decrease memory usage or increased to larger values.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9388813059558565,
      "result": {
        "original_header": "Environment variables",
        "type": "Text_excerpt",
        "value": "`abyss-pe` configuration variables may be set on the command line or from the environment, for example with `export k=96`. It can happen that `abyss-pe` picks up such variables from your environment that you had not intended, and that can cause trouble. To troubleshoot that situation, use the `abyss-pe env` command to print the values of all the `abyss-pe` configuration variables: \n\tabyss-pe env [options]\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9899644337039337,
      "result": {
        "original_header": "ABySS programs",
        "type": "Text_excerpt",
        "value": "`abyss-pe` uses the following programs, which must be found in your\n`PATH`: \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9414591479226754,
      "result": {
        "original_header": "Helper programs",
        "type": "Text_excerpt",
        "value": "Found in your `path`: \n    abyss-db-txt /your/repository\n    abyss-db-csv /your/repository program(s) \n\tabyss-db-txt repo.sqlite\n\tabyss-db-csv repo.sqlite DistanceEst\n\tabyss-db-csv repo.sqlite DistanceEst abyss-scaffold\n\tabyss-db-csv repo.sqlite --all\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.805523621764552,
      "result": {
        "original_header": "MPI mode (legacy)",
        "type": "Text_excerpt",
        "value": "*Do not* run `mpirun -np 8 abyss-pe`. To run ABySS with 8 threads, use\n`abyss-pe np=8`. The `abyss-pe` driver script will start the MPI\nprocess, like so: `mpirun -np 8 ABYSS-P`. \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.825906220611438,
      "result": {
        "original_header": "Helper programs",
        "type": "Text_excerpt",
        "value": " * `abyss-db-txt`: create a flat file showing entire repository at a glance\n * `abyss-db-csv`: create `.csv` table(s) from the repository \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcgsc/abyss/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "assembler, bioinformatics, bloom-filter, c-plus-plus, genome, mpi, openmp, scaffold, science"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "ABySS\nCopyright 2016 British Columbia Cancer Agency Branch\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, version 3.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n\nFor commercial licensing options, please contact\nPatrick Rebstein <prebstein@bccancer.bc.ca>\n\nSee the file COPYRIGHT for details of the copyright and license of\neach individual file included with this software.\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abyss"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bcgsc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1761039,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 259700,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 79973,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 43538,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Haskell",
        "size": 19032,
        "type": "Programming_language",
        "value": "Haskell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 14754,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 13569,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 786,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2024-09-11T20:01:53Z",
        "date_published": "2024-09-11T21:32:28Z",
        "description": "Release version 2.3.9\r\n\r\nGeneral:\r\n\r\n- Deallocate memory used by alignment data structure in dialign",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.9",
        "name": "2.3.9",
        "release_id": 174643941,
        "tag": "2.3.9",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.9",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/174643941",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/174643941",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lcoombe",
          "type": "User"
        },
        "date_created": "2024-07-19T15:40:30Z",
        "date_published": "2024-07-19T16:22:46Z",
        "description": "  * Release version 2.3.8\r\n  \r\n    General:\r\n     * Type changes to allow building with LTO",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.8",
        "name": "2.3.8",
        "release_id": 166268309,
        "tag": "2.3.8",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/166268309",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/166268309",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lcoombe",
          "type": "User"
        },
        "date_created": "2023-05-16T22:53:03Z",
        "date_published": "2023-05-16T23:29:29Z",
        "description": "  * Release version 2.3.7\r\n\r\n    General:\r\n\t* Fix build on macOS-12 and macOS-13 (Thanks @parham-k!)",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.7",
        "name": "2.3.7",
        "release_id": 103238376,
        "tag": "2.3.7",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/103238376",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/103238376",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lcoombe",
          "type": "User"
        },
        "date_created": "2023-05-03T18:08:50Z",
        "date_published": "2023-05-04T18:32:48Z",
        "description": "  * Release version 2.3.6\r\n\r\n    General:\r\n    * btllib is now a dependency\r\n\t* Documentation updates\r\n\r\n\tabyss-rresolver-short:\r\n\t* btllib source code removed due to btllib now being a dependency",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.6",
        "name": "2.3.6",
        "release_id": 101920037,
        "tag": "2.3.6",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/101920037",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/101920037",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2022-05-11T22:23:32Z",
        "date_published": "2022-05-11T22:38:23Z",
        "description": "  * Release version 2.3.5\r\n\r\n    General:\r\n\t* Fixed compile errors when using the -DNDEBUG flag.\r\n\t* Removed deprecated C++ features.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.5",
        "name": "2.3.5",
        "release_id": 66632022,
        "tag": "2.3.5",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/66632022",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/66632022",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-12-20T19:46:37Z",
        "date_published": "2021-12-20T20:34:29Z",
        "description": "  * Release version 2.3.4\r\n\r\n    General:\r\n\t* Dropped support for gcc5 due to lack of support for more recent C++ features.\r\n\r\n\tabyss-rresolver-short:\r\n\t* Reduced memory consumption.\r\n\t* Better calculation of read size proportions in the input dataset.\r\n\t* Increased max read read size allowed.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.4",
        "name": "2.3.4",
        "release_id": 55699662,
        "tag": "2.3.4",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/55699662",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/55699662",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-11-10T21:08:19Z",
        "date_published": "2021-11-10T21:20:14Z",
        "description": "  * Release version 2.3.3\r\n\r\nGeneral:\r\n  * Fixed a contig overlap distance assertion.\r\n\r\nabyss-rresolver-short:\r\n  * Multiple read sizes are better handled. E.g. 150 and 151 are processed as one read size.\r\n  * Updated default parameters.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.3",
        "name": "2.3.3",
        "release_id": 53121923,
        "tag": "2.3.3",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/53121923",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/53121923",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-10-13T21:15:37Z",
        "date_published": "2021-10-13T21:37:31Z",
        "description": "  * Release version 2.3.2\r\n\r\nGeneral:\r\n  * Updated the `m` parameter and the `S` and `N` scaffolding parameters to better defaults.\r\n\r\nabyss-rresolver-short:\r\n  * Updated btllib to 1.1.7",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.2",
        "name": "2.3.2",
        "release_id": 51319129,
        "tag": "2.3.2",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/51319129",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/51319129",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-04-21T23:47:04Z",
        "date_published": "2021-04-21T23:57:21Z",
        "description": "abyss-rresolver-short:\r\n  * Fixed a bug that crashed ABySS if Bloom filter size is not specified.\r\n  * Fixed a compilation error for clang-10.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.1",
        "name": "2.3.1",
        "release_id": 41808941,
        "tag": "2.3.1",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/41808941",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/41808941",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-03-23T05:55:48Z",
        "date_published": "2021-03-23T05:57:40Z",
        "description": "* The RResolver algorithm is now part of the default pipeline. RResolver resolves repeats using short reads and generates assemblies with better contiguity and often fewer misassemblies.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.3.0",
        "name": "2.3.0",
        "release_id": 40202192,
        "tag": "2.3.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/40202192",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/40202192",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vlad0x00",
          "type": "User"
        },
        "date_created": "2021-03-09T02:24:32Z",
        "date_published": "2021-03-13T00:05:45Z",
        "description": "- Added the RResolver component to the ABySS pipeline. This release updates the 2.2.4 ABySS version and is used as a reference for the RResolver manuscript.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/rresolver-release",
        "release_id": 39743661,
        "tag": "rresolver-release",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/rresolver-release",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/39743661",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/39743661",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/rresolver-release"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2020-09-18T18:42:12Z",
        "date_published": "2020-09-18T20:55:08Z",
        "description": "\r\n Release version 2.2.5\r\n\r\nGeneral:\r\n* Resolve various compilation errors in newer versions of clang\r\n* Use ntHash's 0th hash as the default hash instead of the 1st hash\r\n* Added optional RResolver module, not currently part of the ABySS assembly pipeline\r\n\r\nabyss-rresolver-short:\r\n* Improves genome assemblies at unitig stage by using a sliding window at read size level\r\nacross repeats to determine which paths are correct\r\n* For further information: consult http://www.birollab.ca/assets/posts/195_Nikolic_Vladimir_HiTSeq_ISMB2020.pdf\r\n\t\r\nmisc:\r\n* Extract all tags in a SAM file",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.5",
        "name": "2.2.5",
        "release_id": 31545078,
        "tag": "2.2.5",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/31545078",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/31545078",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2020-01-30T18:48:44Z",
        "date_published": "2020-01-30T19:48:25Z",
        "description": "* Release version 2.2.4\r\n\r\nGeneral:\r\n* Refactor deprecated functions in clang-8\r\n\r\nSealer:\r\n* Remove unsupported -D option from help page\r\n\r\nabyss-bloom:\r\n* Add counting Bloom Filter instruction to help page\r\n\r\nabyss-bloom-dbg:\r\n* Report coverage information of unitigs",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.4",
        "name": "2.2.4",
        "release_id": 23267708,
        "tag": "2.2.4",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/23267708",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/23267708",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2019-09-27T20:02:10Z",
        "date_published": "2019-09-27T21:27:39Z",
        "description": "* Release version 2.2.3\r\n* Revert memory consumption of Bloom filters to pre 2.2.0 behaviour.\r\nABySS will now share the specified memory among all Bloom filters\r\ninstead of just the counting Bloom filter.\r\n* Fix gcc-9 compilation warnings",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.3",
        "release_id": 20320315,
        "tag": "2.2.3",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/20320315",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/20320315",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2019-08-16T21:29:32Z",
        "date_published": "2019-09-27T20:56:34Z",
        "description": "* Release version 2.2.2\r\n* Fix abyss-overlap for 32-bit systems",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.2",
        "release_id": 20319743,
        "tag": "2.2.2",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/20319743",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/20319743",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2019-08-12T18:48:44Z",
        "date_published": "2019-08-12T19:58:18Z",
        "description": "* Release version 2.2.1\r\n* Fix abyss-bloom for macOS",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.1",
        "release_id": 19238973,
        "tag": "2.2.1",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/19238973",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/19238973",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2019-08-06T17:54:02Z",
        "date_published": "2019-08-06T18:34:19Z",
        "description": "* Release version 2.2.0\r\n* Construct a counting bloom filter instead of a cascading bloom filter.\r\n\r\nabyss-bloom:\r\n* Add 'counting' as valid argument to '-t' option to build a counting\r\nbloom filter",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.2.0",
        "release_id": 19115747,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/19115747",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/19115747",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sauparna",
          "type": "User"
        },
        "date_created": "2018-12-05T00:06:46Z",
        "date_published": "2018-12-05T00:55:23Z",
        "description": "* Release version 2.1.5\r\n* Compiler fixes and increase stack size limits to avoid stack overflows.\r\n\r\nabyss-pe:\r\n* Add 'ulimit' statements to the Makefile to increase a thread's stack size to 64MB.",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.5",
        "name": "2.1.5",
        "release_id": 14352238,
        "tag": "2.1.5",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/14352238",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/14352238",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-11-09T19:32:51Z",
        "date_published": "2018-11-09T19:44:38Z",
        "description": "This release provides major improvements to Bloom filter assembly contiguity                                                                                                                 \r\nand correctness. Bloom filter assemblies now have equivalent scaffold contiguity                                                                                                             \r\nand better correctness than MPI assemblies of the same data, while still                                                                                                                     \r\nrequiring less than 1/10th of the memory. On human, Bloom filter assembly times                                                                                                              \r\nare still a few hours longer than MPI assemblies (e.g. 17 hours vs. 13 hours,                                                                                                                \r\nusing 48 threads).                                                                                                                                                                           \r\n                                                                                                                                                                                             \r\nabyss-pe:                                                                                                                                                                                    \r\n* Change default value of `m` from 50 => 0, which has the effect                                                                                                                             \r\nof disallowing sequence overlaps < k-1 bp. QUAST tests on E. coli /                                                                                                                          \r\nC. elegans / H. sapiens showed that both contiguity and                                                                                                                                      \r\ncorrectness were improved by allowing only overlaps of k-1 bp                                                                                                                                \r\nbetween sequence ends. ",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.4",
        "name": "2.1.4",
        "release_id": 13928042,
        "tag": "2.1.4",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/13928042",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/13928042",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-11-05T18:36:20Z",
        "date_published": "2018-11-05T18:44:27Z",
        "description": "This release fixes a SAM-formatting bug that broke the ABySS-LR pipeline (Tigmint/ARCS).                                                                                                                                                                      \r\n                                                                                                                                                                                             \r\nabyss-bloom:                                                                                                                                                                                 \r\n* Added `graph` command for visualizing neighbourhoods of the                                                                                                                                \r\nBloom filter de Bruijn graph (produces GraphViz)                                                                                                                                           \r\n                                                                                                                                                                                             \r\nabyss-fixmate-ssq:                                                                                                                                                                           \r\n* Fixed missing tab in SAM output which broke ABySS linked reads                                                                                                                             \r\npipeline (Tigmint/ARCS)",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.3",
        "name": "2.1.3",
        "release_id": 13837450,
        "tag": "2.1.3",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/13837450",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/13837450",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-10-24T19:10:03Z",
        "date_published": "2018-10-24T19:15:31Z",
        "description": "This release improves scaffold N50 on human by ~10%, due to implementation of a new `--median` option for `DistanceEst` (thanks to @lcoombe!).  This release also adds a new `--max-cost` option for `konnector` and `abyss-sealer` that curbs indeterminately long running times, particularly at low k values.\r\n\r\nabyss-pe:\r\n* Use the new `DistanceEst --median` option as the\r\ndefault for the scaffolding stage\r\n\r\nDockerfile:\r\n* Fix OpenMPI setup\r\n\r\nDistanceEst:\r\n* Added `--median` option\r\n\r\nkonnector:\r\n* Added `--max-cost` option to bound running time\r\n\r\nsealer:\r\n* Added `--max-cost` option to bound running time\r\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.2",
        "name": "2.1.2",
        "release_id": 13639842,
        "tag": "2.1.2",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/13639842",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/13639842",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-09-11T20:45:43Z",
        "date_published": "2018-09-11T21:04:57Z",
        "description": "This release provides bug fixes and modest improvements to                                                                                                                                   \r\nBloom filter assembly contiguity/correctness. Parallelization                                                                                                                                \r\nof Sealer has also been improved, thanks to contributions by                                                                                                                                 \r\n@vlad0x00.                                                                                                                                                                               \r\n                                                                                                                                                                                             \r\nabyss-bloom-dbg:                                                                                                                                                                             \r\n* upgrade to most recent version of ntHash to reduce                                                                                                                                         \r\nsome assembly/hashing artifacts. On a human assembly, this                                                                                                                                   \r\nreduced QUAST major misassemblies by 5% and increased                                                                                                                                        \r\nscaffold contiguity by 10%                                                                                                                                                                   \r\n* `kc` parameter now also applies to MPI assemblies (see below)                                                                                                                              \r\n                                                                                                                                                                                             \r\nabyss-fac:                                                                                                                                                                                   \r\n* change N20 and N80 to N25 and N75, respectively                                                                                                                                            \r\n                                                                                                                                                                                             \r\nABYSS-P:                                                                                                                                                                                     \r\n* add `--kc` option, with implements a hard minimum k-mer                                                                                                                                    \r\nmultiplicity cutoff                                                                                                                                                                          \r\n                                                                                                                                                                                             \r\nabyss-pe:                                                                                                                                                                                    \r\n* fix `zsh: no such option: pipefail` error with                                                                                                                                             \r\nold versions of `zsh` (fallback to `bash` instead)                                                                                                                                           \r\n* adding `time=1` now times *all* assembly commands                                                                                                                                          \r\n                                                                                                                                                                                             \r\nabyss-sealer:                                                                                                                                                                                \r\n* parallelize gap sealing with OpenMP (thanks to                                                                                                                                             \r\n@vlad0x00!)                                                                                                                                                                              \r\n* add `--gap-file` option (thanks to @vlad0x00!)                                                                                                                                         \r\n                                                                                                                                                                                             \r\nDistanceEst:                                                                                                                                                                                 \r\n* add support for GFA output                           ",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.1",
        "name": "2.1.1",
        "release_id": 12846886,
        "tag": "2.1.1",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/12846886",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/12846886",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-04-14T00:56:20Z",
        "date_published": "2018-04-14T00:33:14Z",
        "description": "This release adds support for misassembly correction and scaffolding\r\n using linked reads, using Tigmint and ARCS. (Tigmint and\r\n ARCS must be installed separately.)  In addition, simultaneous optimization\r\nof `s` (seed length) and `n` (min supporting read pairs / Chromium barcodes)\r\nis now supported during scaffolding.\r\n\r\n abyss-longseqdist:\r\n * Fix hang on input SAM containing no alignments with MAPQ > 0\r\n\r\n abyss-pe:\r\n * New `lr` parameter. Provide linked reads (i.e. 10x Genomics\r\n Chromium reads) via this parameter to perform misassembly\r\n correction and scaffolding using Chromium barcode information.\r\n Requires Tigmint and ARCS tools to be installed in addition\r\n to ABySS.\r\n * Fix bug where `j` (threads) was not being correctly passed to\r\n to `bgzip`/`pigz`\r\n * Fix bug where `zsh` time/memory profiling was not being used,\r\n even when `zsh` was available\r\n\r\n abyss-scaffold:\r\n * Simultaneous optimization of `n` and `s` using line search\r\n or grid search [default]\r\n\r\n SimpleGraph:\r\n * add options `-s` and `-n` to filter paired-end paths by\r\n seed length and edge weight, respectively",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.1.0",
        "name": "2.1.0",
        "release_id": 10544492,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/10544492",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/10544492",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2018-03-14T21:57:37Z",
        "date_published": "2018-03-14T22:25:23Z",
        "description": "This minor release provides bug fixes and improved reliability for both MPI assemblies and Bloom filter assemblies on large datasets.  In addition, many usability improvements have been made to the `abyss-samtobreak` program for misasssembly assessment.\r\n\r\noverall:                                \r\n* Many compiler fixes for GCC >= 6, Boost >= 1.64              \r\n* Read and write GFA 2 assembly graphs with `abyss-pe graph=gfa2`\r\n* Support reading CRAM via samtools                            \r\n                                                               \r\nabyss-bloom:                                                   \r\n* New `abyss-bloom build -t rolling-hash` option, to           \r\npre-build input Bloom filters for `abyss-bloom-dbg`            \r\n* Fix incorrect output of `abyss-bloom kmers -r`               \r\n(thanks to @notestaff!)                                        \r\n                                                               \r\nabyss-bloom-dbg:                                               \r\n* New `-i` option to read Bloom filter files built by          \r\n`abyss-bloom build -t rolling-hash`                            \r\n* Improved error branch trimming (reduces number of            \r\nsmall output sequences)                                        \r\n* Fix intermittent segfaults caused by non-null-terminated     \r\nstrings                                                        \r\n                                                               \r\nabyss-map:                                                     \r\n* Append BX tag to SAM output (Chromium 10x Genomics data)     \r\n                                                               \r\nABYSS-P:                                                       \r\n* Increase default number of sparsehash buckets from           \r\n200,000,000 => 1,000,000,000                                   \r\n* Benefit: Allows larger datasets to be assembled without      \r\ntime-consuming sparsehash resize operations (e.g. H. sapiens)  \r\n* Caveat: Increases minimum memory requirement per             \r\nCPU core from 89 MB to 358 MB                                  \r\n                                                               \r\nabyss-pe:                                                      \r\n* Parallelize `gzip` with `pigz`, if available                 \r\n* Report time/memory for each program with `zsh`, if available \r\n* Fix: use `N` instead of `n` for scaffold stage,              \r\nwhen set by user                                               \r\n                                                               \r\nabyss-samtobreak:                                              \r\n* New `--alignment-length` (`-a`) option to exclude alignments \r\nshorter than a given length                                    \r\n* New `--contig-length` (`-l`) option to exclude contigs       \r\nshorter than a given length                                    \r\n* New `--genome-size` (`-G`) option, for contiguity metrics    \r\nthat depend on the reference genome size                       \r\n* New `--mapq` (`-q`) option for minimum MAPQ score            \r\n* New `--patch-gaps` (`-g`) option to join alignments          \r\nseparated by small gaps                                        \r\n* New TSV output format with additional contiguity             \r\nstats (e.g. L50, NG50)                                         \r\n* Fix handling of hard-clipped alignments                      \r\n                                                               \r\nabyss-todot:                                                   \r\n* New `--add-complements` option                               \r\n                                                               \r\nabyss-tofastq:                                                 \r\n* New `--bx` option to copy BX tag from from SAM/BAM           \r\nto FASTQ header comment (Chromium 10x Genomics                 \r\ndata)                                                          ",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.0.3",
        "name": "2.0.3",
        "release_id": 10093445,
        "tag": "2.0.3",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/10093445",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/10093445",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2016-10-21T22:02:57Z",
        "date_published": "2016-10-21T21:08:05Z",
        "description": "# Summary\n\nFix compile errors with gcc-6 and boost-1.62.\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.0.2",
        "name": "2.0.2",
        "release_id": 4454479,
        "tag": "2.0.2",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/4454479",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/4454479",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2016-09-14T22:55:13Z",
        "date_published": "2016-09-14T21:16:25Z",
        "description": "# Summary\n\nThis release resolves some licensing issues with that were pointed out in 2.0.0.  As of 2.0.1, ABySS is now available under a standard GPL-3 license, and the libraries included under `lib/rolling-hash` and `lib/bloomfilter` are now also licensed under GPL-3.  For alternative licensing terms, please contact Patrick Rebstein (prebstein at bccancer.bc.ca).\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.0.1",
        "name": "2.0.1",
        "release_id": 4135928,
        "tag": "2.0.1",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/4135928",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/4135928",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2016-09-01T17:41:16Z",
        "date_published": "2016-09-01T17:49:04Z",
        "description": "# Summary\n\nThis release introduces a new Bloom filter assembly mode that enables large genome assemblies with minimal memory (e.g. 34 GB for H. sapiens with 76X coverage bfc-corrected reads).  Bloom filter assemblies are currently less contiguous than the default (MPI) assembly mode but are still of high quality (e.g. 3.5 Mbp vs. 4.8 Mbp scaffold NG50 for H. sapiens). Bloom filter assembly mode is enabled by adding three 'abyss-pe' parameters (B = _Bloom filter size_, H = _number of Bloom filter hash functions_, kc = _k-mer coverage threshold_). See 'README.md' for an example.\n\nThis release also updates several 'abyss-pe' parameter defaults to be more suitable for large genome assemblies with recent Illumina data.  In addition, ABySS 2.0.0 includes minor usability improvements for 'abyss-sealer' and removes an unnecessary build dependency on sqlite3.\n\n# ChangeLog\n\n2016-08-30  Ben Vandervalk benv@bcgsc.ca\n- Release version 2.0.0\n- New Bloom filter mode for assembly => assemble large genomes\n  with minimal memory (e.g. 34G for H. sapiens)\n- Update param defaults for modern Illumina data\n- Make sqlite3 an optional dependency\n\nabyss-bloom:\n- New 'compare' command for bitwise comparison of Bloom filters\n  (thanks to @bschiffthaler!)\n- New 'kmers' command for printing k-mers that match a Bloom filter\n  (thanks to @bschiffthaler!)\n\nabyss-bloom-dbg:\n- New preunitig assembler that uses Bloom filter\n- Add 'B' param (Bloom filter size) to 'abyss-pe' command to enable\n  Bloom filter mode\n- See README.md and '--help' for further instructions\n\nabyss-fatoagp:\n- Mask scaftigs shorter than 50bp with 'N's (short scaftigs\n  were causing problems with NCBI submission)\n\nabyss-pe:\n- Update default parameter values for modern Illumina data\n- Change 'l=k' => 'l=40'\n- Change 's=200' => 's=1000'\n- Change 'S=s' => 'S=1000-10000' (do a param sweep of 'S')\n- Use 'DistanceEst --mean' for scaffolding stage, instead of\n  the default '--mle'\n\nabyss-sealer:\n- New '--max-gap-length' ('-G') option to replace unintuitive\n  '--max-frag'; use of '--max-frag' is now deprecated\n- Require user to explicitly specify Bloom filter size (e.g.\n  '-b40G')\n- Report false positive rate (FPR) when building/loading Bloom\n  filters\n- Don't require input FASTQ files when using pre-built Bloom\n  filter files\n\nkonnector:\n- Fix bug causing output read 2 file to be empty\n- New percent sequence identity options ('-x' and '-X')\n- New '--alt-paths-mode' option to output alternate connecting\n  paths between read pairs\n\nREADME.md:\n- Fix documentation of ABYSS and abyss-pe parameters\n  (thanks to @nsoranzo!)\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/2.0.0",
        "name": "2.0.0",
        "release_id": 4031587,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/4031587",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/4031587",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benvvalk",
          "type": "User"
        },
        "date_created": "2015-05-29T21:53:11Z",
        "date_published": "2015-05-29T22:38:43Z",
        "description": "# Summary\n\nThis release introduces a new paired de Bruijn graph mode for assembly.  In paired de Bruijn graph mode, ordinary k-mers are replaced by k-mer pairs, where each k-mer pair is separated by a fixed-size gap.  The primary advantage of paired de Bruijn graph mode is that the span of a k-mer pair can be arbitrarily wide without consuming additional memory, and thus provides improved scalability for assemblies of long sequencing reads.\n\nThis release also introduces a new tool called Sealer for closing scaffold gaps, new Konnector functionality for producing long pseudo-reads, and support for the DIDA (Distributed Indexing Dispatched Alignment) parallel alignment framework.\n\n# ChangeLog\n\n2015-05-28  Ben Vandervalk benv@bcgsc.ca\n- Release version 1.9.0\n- New paired de Bruijn graph mode for assembly.\n- First official release of Sealer, a tool for closing\n  scaffold gaps by navigating a Bloom filter de Bruijn graph.\n- New outward extension feature for Konnector to generate\n  long pseudo-reads.\n- Support for the DIDA (Distributed Indexing Dispatched\n  Alignment) framework, for computing sequence alignments\n  in parallel across multiple machines.\n- Unit tests can now be run easily with 'make check', without\n  external dependencies.\n\nabyss-bloom:\n- abyss-bloom 'build' command now supports `-j` option for\n  multi-threaded Bloom filter construction.\n\nabyss-map:\n- New `--protein` option for mapping protein sequences.\n\nabyss-pe:\n- New paired de Bruijn graph mode for assembly. Enable by\n  setting `k` to the k-mer pair span and `K` to size of an\n  individual k-mer in a k-mer pair. See README.md for further\n  details.\n- New `aligner=dida` option for using the DIDA parallel alignment\n  framework. See the DIDA section of the abyss-pe man page\n  for usage details.\n- New `graph=gfa` option to use the GFA (Graphical\n  Fragment Assembly) format for intermediate graph files.\n\nabyss-sealer:\n- New tool for closing scaffold gaps by navigating a Bloom\n  filter de Bruijn graph\n- See Sealer/README.md or abyss-sealer man page for details\n  and examples.\n\nkonnector:\n- New `--extend` option for extending merged and unmerged\n  reads outwards in the de Bruijn graph.\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/1.9.0",
        "name": "1.9.0",
        "release_id": 1355201,
        "tag": "1.9.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/1355201",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/1355201",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/1.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "traymond",
          "type": "User"
        },
        "date_created": "2014-07-09T23:15:40Z",
        "date_published": "2014-07-10T18:35:49Z",
        "description": "# Summary\n\nIn this release we introduce Konnector, a fast and memory-efficient tool to fill the gap between paired-end reads. Konnector determines the intervening sequence by building a Bloom filter de Bruijn graph and searching for paths between paired-end reads within the graph. A companion tool called abyss-bloom is also provided which can be used to construct reusable bloom filter files for input to Konnector; otherwise, Konnector will build an in-memory Bloom filter for one-time use. In addition to Konnector, we have fixed bugs related to compiling with GCC 4.8+ and parsing BWA output SAM files.\n\n# ChangeLog\n\n2014-07-09 Anthony Raymond traymond@bcgsc.ca \n- Release version 1.5.2 \n- First official release of Konnector and abyss-bloom. \n- More GCC 4.8+ fixes! Modified Boost install instructions. \n- Fixed rare bug when parsing output of BWA. \n\nABYSS: \n- New option, --mask-cov, use kmers with lowercased bases, but \n  don't count them towards multiplicity. \n\nabyss-bloom: \n- Construct reusable Bloom filter files for use with Konnector. \n- Perform boolean operations on two or more bloom filters. \n  Currently supports union and intersection operations. \n\nabyss-fixmate: \n- Check for boost 1.43+ when using `unordered_map::quick_erase`. \n- New option, --all, to report all alignments. \n- Set mate unmapped flag for mateless reads. \n\nabyss-longseqdist: \n- Fixed `error: invalid CIGAR` when reading BWA output. \n\nconfigure: \n- Include mpi and boost libraries as system libraries. Silences \n  warnings (treated as errors) when compiling with GCC 4.8+. \n\nkonnector: \n- Merge read pairs into a single sequence (pseudoread) by \n  building a Bloom filter de Bruijn graph and searching for paths \n  between the paired end reads. Input reads may be \n  FASTA/FASTQ/SAM/BAM. The input files must be sorted by read name \n  and may not contain orphan reads.\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/1.5.2",
        "name": "1.5.2",
        "release_id": 422423,
        "tag": "1.5.2",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/1.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/422423",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/422423",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/1.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "traymond",
          "type": "User"
        },
        "date_created": "2014-05-08T19:23:49Z",
        "date_published": "2014-05-08T19:45:11Z",
        "description": "# Summary\n\nIn this release we fix a compatibility issue with Trans-ABySS 1.5.0 where the output of abyss-filtergraph is not strand-specific. Also, we include a FCC portability fix.\n\n# ChangeLog\n\n2014-05-07  Anthony Raymond  traymond@bcgsc.ca\n- Release version 1.5.1\n- Fix an issue with strand-specific RNA-Seq assembly when running\n  `abyss-filtergraph --assemble --SS`.\n- Portability fixes for Fujitsu C Compiler (FCC).\n\nabyss-filtergraph:\n- Assemble contigs in forward orientation with `--assemble --SS`\n\nabyss-pe:\n- Fix some cases where abyss-pe uses incorrect executables\n\nABYSS-P:\n- Portability fix with FCC\n",
        "html_url": "https://github.com/bcgsc/abyss/releases/tag/1.5.1",
        "name": "1.5.1",
        "release_id": 310858,
        "tag": "1.5.1",
        "tarball_url": "https://api.github.com/repos/bcgsc/abyss/tarball/1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/abyss/releases/310858",
        "value": "https://api.github.com/repos/bcgsc/abyss/releases/310858",
        "zipball_url": "https://api.github.com/repos/bcgsc/abyss/zipball/1.5.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies for linked reads",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- [ARCS](https://github.com/bcgsc/arcs) for scaffolding.\n- [Tigmint](https://github.com/bcgsc/tigmint) for correcting assembly errors.\n\nThese can be installed through Conda:\n\n\tconda install -c bioconda arcs tigmint\n\nOr Homebrew:\n\n\tbrew install brewsci/bio/arcs brewsci/bio/links-scaffolder\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional dependencies",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- [pigz](https://zlib.net/pigz/) for parallel gzip.\n- [samtools](https://samtools.github.io) for reading BAM files.\n- [zsh](https://sourceforge.net/projects/zsh/) for reporting time and memory usage.\n\nConda:\n\n\tconda install -c bioconda samtools\n\tconda install -c conda-forge pigz zsh\n\nHomebrew:\n\n\tbrew install pigz samtools zsh\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running ABySS on a cluster",
        "type": "Text_excerpt",
        "value": "ABySS integrates well with cluster job schedulers, such as:\n\n * SGE (Sun Grid Engine)\n * Portable Batch System (PBS)\n * Load Sharing Facility (LSF)\n * IBM LoadLeveler\n\nFor example, to submit an array of jobs to assemble every eighth value of\n`k` between 50 and 90 using 64 processes for each job:\n\n\tqsub -N ecoli -pe openmpi 64 -t 50-90:8 \\\n\t\t<<<'mkdir k$SGE_TASK_ID && abyss-pe -C k$SGE_TASK_ID in=/data/reads.fa'\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:22:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 308
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "type": "Text_excerpt",
        "value": "[Create a new issue on GitHub.](https://github.com/bcgsc/abyss/issues)\n\n[Ask a question on Biostars.](https://www.biostars.org/tag/abyss/)\n\nSubscribe to the [ABySS mailing list](http://groups.google.com/group/abyss-users), <abyss-users@googlegroups.com>.\n\nFor questions related to transcriptome assembly, contact the [Trans-ABySS mailing list](http://groups.google.com/group/trans-abyss), <trans-abyss@googlegroups.com>.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Before starting an assembly",
        "type": "Text_excerpt",
        "value": "ABySS stores temporary files in `TMPDIR`, which is `/tmp` by default on most systems. If your default temporary disk volume is too small, set `TMPDIR` to a larger volume, such as `/var/tmp` or your home directory.\n\n\texport TMPDIR=/var/tmp\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Assembling a paired-end library",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "To assemble paired reads in two files named `reads1.fa` and\n`reads2.fa` into contigs in a file named `ecoli-contigs.fa`, run the\ncommand:\n\n\tabyss-pe name=ecoli k=96 B=2G in='reads1.fa reads2.fa'\n\nThe parameter `in` specifies the input files to read, which may be in\nFASTA, FASTQ, qseq, export, SRA, SAM or BAM format and compressed with\ngz, bz2 or xz and may be tarred. The assembled contigs will be stored\nin `${name}-contigs.fa` and the scaffolds will be stored in `${name}-scaffolds.fa`.\n\nA pair of reads must be named with the suffixes `/1` and `/2` to\nidentify the first and second read, or the reads may be named\nidentically. The paired reads may be in separate files or interleaved\nin a single file.\n\nReads without mates should be placed in a file specified by the\nparameter `se` (single-end). Reads without mates in the paired-end\nfiles will slow down the paired-end assembler considerably during the\n`abyss-fixmate` stage.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Assembling multiple libraries",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The distribution of fragment sizes of each library is calculated\nempirically by aligning paired reads to the contigs produced by the\nsingle-end assembler, and the distribution is stored in a file with\nthe extension `.hist`, such as `ecoli-3.hist`. The N50 of the\nsingle-end assembly must be well over the fragment-size to obtain an\naccurate empirical distribution.\n\nHere's an example scenario of assembling a data set with two different\nfragment libraries and single-end reads. Note that the names of the libraries\n(`pea` and `peb`) are arbitrary.\n\n * Library `pea` has reads in two files,\n   `pea_1.fa` and `pea_2.fa`.\n * Library `peb` has reads in two files,\n   `peb_1.fa` and `peb_2.fa`.\n * Single-end reads are stored in two files, `se1.fa` and `se2.fa`.\n\nThe command line to assemble this example data set is:\n\n\tabyss-pe k=96 B=2G name=ecoli lib='pea peb' \\\n\t\tpea='pea_1.fa pea_2.fa' peb='peb_1.fa peb_2.fa' \\\n\t\tse='se1.fa se2.fa'\n\nThe empirical distribution of fragment sizes will be stored in two\nfiles named `pea-3.hist` and `peb-3.hist`. These files may be\nplotted to check that the empirical distribution agrees with the\nexpected distribution. The assembled contigs will be stored in\n`${name}-contigs.fa` and the scaffolds will be stored in `${name}-scaffolds.fa`.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Scaffolding",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Long-distance mate-pair libraries may be used to scaffold an assembly.\nSpecify the names of the mate-pair libraries using the parameter `mp`.\nThe scaffolds will be stored in the file `${name}-scaffolds.fa`.\nHere's an example of assembling a data set with two paired-end\nlibraries and two mate-pair libraries. Note that the names of the libraries\n(`pea`, `peb`, `mpa`, `mpb`) are arbitrary.\n\n\tabyss-pe k=96 B=2G name=ecoli lib='pea peb' mp='mpc mpd' \\\n\t\tpea='pea_1.fa pea_2.fa' peb='peb_1.fa peb_2.fa' \\\n\t\tmpc='mpc_1.fa mpc_2.fa' mpd='mpd_1.fa mpd_2.fa'\n\nThe mate-pair libraries are used only for scaffolding and do not\ncontribute towards the consensus sequence.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Scaffolding with linked reads",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "ABySS can scaffold using linked reads from 10x Genomics Chromium. The barcodes must first be extracted from the read sequences and added to the `BX:Z` tag of the FASTQ header, typically using the `longranger basic` command of [Long Ranger](https://support.10xgenomics.com/genome-exome/software/overview/welcome) or [EMA preproc](https://github.com/arshajii/ema#readme). The linked reads are used to correct assembly errors, which requires that [Tigmint](https://github.com/bcgsc/tigmint). The linked reads are also used for scaffolding, which requires [ARCS](https://github.com/bcgsc/arcs). See [Dependencies](#dependencies) for installation instructions.\n\nABySS can combine paired-end, mate-pair, and linked-read libraries. The `pe` and `lr` libraries will be used to build the de Bruijn graph. The `mp` libraries will be used for paired-end/mate-pair scaffolding. The `lr` libraries will be used for misassembly correction using Tigmint and scaffolding using ARCS.\n\n\tabyss-pe k=96 B=2G name=hsapiens \\\n\t\tpe='pea' pea='lra.fastq.gz' \\\n\t\tmp='mpa' mpa='lra.fastq.gz' \\\n\t\tlr='lra' lra='lra.fastq.gz'\n\nABySS performs better with a mixture of paired-end, mate-pair, and linked reads, but it is possible to assemble only linked reads using ABySS, though this mode of operation is experimental.\n\n\tabyss-pe k=96 name=hsapiens lr='lra' lra='lra.fastq.gz'\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Rescaffolding with long sequences",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Long sequences such as RNA-Seq contigs can be used to rescaffold an\nassembly. Sequences are aligned using BWA-MEM to the assembled\nscaffolds. Additional scaffolds are then formed between scaffolds that\ncan be linked unambiguously when considering all BWA-MEM alignments.\n\nSimilar to scaffolding, the names of the datasets can be specified with\nthe `long` parameter. These scaffolds will be stored in the file\n`${name}-long-scaffs.fa`. The following is an example of an assembly with PET, MPET and an RNA-Seq assembly. Note that the names of the libraries are arbitrary.\n\n\tabyss-pe k=96 B=2G name=ecoli lib='pe1 pe2' mp='mp1 mp2' long='longa' \\\n\t\tpe1='pe1_1.fa pe1_2.fa' pe2='pe2_1.fa pe2_2.fa' \\\n\t\tmp1='mp1_1.fa mp1_2.fa' mp2='mp2_1.fa mp2_2.fa' \\\n\t\tlonga='longa.fa'\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Assembling using a paired de Bruijn graph",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Assemblies may be performed using a _paired de Bruijn graph_ instead\nof a standard de Bruijn graph. In paired de Bruijn graph mode, ABySS\nuses _k-mer pairs_ in place of k-mers, where each k-mer pair consists of\ntwo equal-size k-mers separated by a fixed distance. A k-mer pair\nis functionally similar to a large k-mer spanning the breadth of the k-mer\npair, but uses less memory because the sequence in the gap is not stored.\nTo assemble using paired de Bruijn graph mode, specify both individual\nk-mer size (`K`) and k-mer pair span (`k`). For example, to assemble E.\ncoli with a individual k-mer size of 16 and a k-mer pair span of 96:\n\n\tabyss-pe name=ecoli K=16 k=96 in='reads1.fa reads2.fa'\n\nIn this example, the size of the intervening gap between k-mer pairs is\n64 bp (96 - 2\\*16). Note that the `k` parameter takes on a new meaning\nin paired de Bruijn graph mode. `k` indicates kmer pair span in\npaired de Bruijn graph mode (when `K` is set), whereas `k` indicates\nk-mer size in standard de Bruijn graph mode (when `K` is not set).\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Assembling a strand-specific RNA-Seq library",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Strand-specific RNA-Seq libraries can be assembled such that the\nresulting unitigs, contigs and scaffolds are oriented correctly with\nrespect to the original transcripts that were sequenced. In order to\nrun ABySS in strand-specific mode, the `SS` parameter must be used as\nin the following example:\n\n\tabyss-pe name=SS-RNA B=2G k=96 in='reads1.fa reads2.fa' SS=--SS\n\nThe expected orientation for the read sequences with respect to the\noriginal RNA is RF. i.e. the first read in a read pair is always in\nreverse orientation.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/abyss/master/RResolver/README.md",
      "technique": "header_analysis"
    }
  ]
}