{
  "application_domain": [
    {
      "confidence": 19.47,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations ###",
        "parent_header": [
          "Quantitative Velocity Tool (QVT) - MATLAB"
        ],
        "type": "Text_excerpt",
        "value": "- [Roberts GS, Hoffman CA, Rivera-Rivera LA, Berman SE, Eisenmenger LB, Wieben O. Automated hemodynamic assessment for cranial 4D flow MRI. Magn Reson Imaging. 2022 Dec 26:S0730-725X(22)00231-4. doi: 10.1016/j.mri.2022.12.016. Epub ahead of print. PMID: 36581214](https://pubmed.ncbi.nlm.nih.gov/36581214/)\n\n- [Schrauben E, Wahlin A, Ambarki K, Spaak E, Malm J, Wieben O, Eklund A. (2015). Fast 4D flow MRI intracranial segmentation and quantification in tortuous arteries. J Magn Reson Imaging, 42(5), 1458-1464. doi:10.1002/jmri.24900](https://pubmed.ncbi.nlm.nih.gov/25847621/)\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/uwmri/QVT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-19T23:00:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-07T09:33:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cranial 4D Flow Analysis Tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Quantitative Velocity Tool (QVT) - MATLAB"
        ],
        "type": "Text_excerpt",
        "value": "To address this issue, our group developed a semi-automated post-processing tool that automated vessel segmentation, vessel centerline generation, placement of tangential cut-planes, and flow assessment. This work started in 2015 with Eric Schrauben (alumni of Oliver Wieben Lab) in collaboration with the Umea University 4D flow group. More recently in 2018, Carson Hoffman, Grant Roberts, and Leonardo Rivera made substantial updates to the tool, improving visualization and overall usability of the tool. \n\nThe QVT (Quantitative Velocity Tool) user interface that we developed is designed to load in reconstructed 4D flow MRI data and perform the following steps automatically:\n\n* Perform global segmentation on the volume to create an angiogram\n    * Threshold-based algorithm (\"sliding threshold\" method developed by Carson Hoffman)\n* Skeletonize the angiogram to create vessel centerlines (1D lines representing the center of the vessel in 3D space)\n* Identify unique branches on the vessel centerline\n* Create tangent cut-planes orthogonal to the direction of the vessel at every centerline point\n* Segment vessels in each generated cut-plane\n    * Threshold-based segmentation *OR* k-means clustering segmentation \n* Calculate hemodynamics at each cut-plane (blood flow rates, pulsatility, resistivity, vessel area, etc.)\n\nThis process takes around 5 minutes, depending on your machine. After the above steps have completed, a 'pcviprData.mat' file is saved which can be loaded directly into the tool and allows one to skip the pre-processing steps above and load 4D flow data within seconds. Once data has been loaded into the tool, a user can then select a vessel of interest and save hemodynamic information at that specific vessel location. \n\nOne of the most unique features of this tool is the 3D vessel selection window, which allows a user to rotate/zoom/pan a 3D representation of the cranial vasculature (centerlines) in order to locate vessels of interest for hemodynamic analysis. This interactive interface also color-codes the vessel centerlines by flow, pulsatility, or any other hemodynamic parameter of interest, allowing one to visualize these parameters across the entire vasculature, not just at 1 location. A semi-transparent angiogram can also be overlayed on the vessel centerlines. Additionally, we created a real-time control window, which shows 2D cut planes and flow curves at selected vessel points. This window is updated when a user selects a new vessel location of interest in the interactive window. We also created a visualization tool to show vector glyphs and colored angiograms for publication-quality images.\n\n![QVT Analysis Tool](files/QVT_3_qvt.gif)\n\n![QVT Visualization Tool](files/QVT_4_viz.PNG)\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9628479575834686,
      "result": {
        "original_header": "Quantitative Velocity Tool (QVT) - MATLAB",
        "type": "Text_excerpt",
        "value": "**Maintainers: Grant S. Roberts, Carson A. Hoffman, and Leonardo A. Rivera-Rivera** \n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9392543470014961,
      "result": {
        "original_header": "Additional Resources",
        "type": "Text_excerpt",
        "value": "Please contact us with any issues and we will address them as quickly as we can.\n \n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/uwmri/QVT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/uwmri/QVT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "uwmri/QVT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Quantitative Velocity Tool (QVT) - MATLAB"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uwmri/QVT/master/files/QVT_4_viz.PNG"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Quantitative Velocity Tool (QVT) - MATLAB"
        ],
        "type": "Text_excerpt",
        "value": "Clone the 'QVT' repository into the directory of your choice (e.g., 'C:\\Users\\username\\Documents\\MATALB') with Git Bash or GitHub CLI:\n`git clone https://github.com/uwmri/QVT.git`\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/uwmri/QVT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2020, Carson A Hoffman\nCopyright (c) 2020, Grant S Roberts\nCopyright (c) 2020, University of Wisconsin - Madison\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the distribution\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uwmri/QVT/master/files/QVT_3_qvt.gif"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "QVT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "uwmri"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 275159,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Quantitative Velocity Tool (QVT) - MATLAB",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Image Processing Toolbox (for medfilt3) \\\nCurve Fitting Toolbox (for csaps) \\\nStatistics and Machine Learning Toolbox (for kmeans)\n\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:05:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Quantitative Velocity Tool (QVT) - MATLAB"
        ],
        "type": "Text_excerpt",
        "value": "1. Move to the directory containing the 'QVT' folder, right click on 'QVT', select \"Add to Path --> Selected Folders and Subfolders\". \n2. `>> addpath(genpath('C:\\Users\\username\\Documents\\MATALB\\QVT'))`\n\n(Optional) In Matlab, change to the directory where the 4D flow data exists. This is not necessary but is convenient for locating 4D flow data.\n\nFrom the command window, type the following command to open the GUI:\n`>> paramMap`\n\nOnce opened, select 'Load Data'. From the pop-up window, select the folder which contains 4D flow MRI data. Note that you will not see .dat files or .h5 files because it asking for you to select a directory; you must know beforehand the folder in which the 4D flow data exists.\n\n**IMPORTANT NOTE: Currently, this data must be in a format specific to UW-Madison** \\\nFrom the PCVIPR reconstruction, data may be in .dat format (multiple .dat files of containing 3D volumes of magnitude, complex difference, and velocity data) or in HDF5 format (single file usually named 'Flow.h5'). Both formats can be loaded into the tool with the 'loadpcvipr.m' and 'loadHDF5.m' functions. \n\nIn the near future, we plan to implement functions to load more universal 4D flow data formats (e.g., DICOM series, NIFTI?, etc) from other institutions into our tool. However, this is currently not possible. If you have data from outside of UW-Madison and would like to use the QVT, please reach out and we can help develop functions to load in this data.\n\n"
      },
      "source": "https://raw.githubusercontent.com/uwmri/QVT/master/Readme.md",
      "technique": "header_analysis"
    }
  ]
}