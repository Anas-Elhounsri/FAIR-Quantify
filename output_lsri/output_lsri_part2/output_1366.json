{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yceh/matOptimize-experiments"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-05T23:33:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-11T07:16:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yceh/matOptimize-experiments/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yceh/matOptimize-experiments/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yceh/matOptimize-experiments"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "matOptimize-experiments"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/env/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/env/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/MPI_matOptimize_env/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/MPI_matOptimize_env/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/weak_scaling_env/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/weak_scaling_env/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/benchmark_matOptimize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/benchmark_tnt.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/date_sample.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/prep_sample_list.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/run_scaling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/ticker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/random_prune/benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/random_prune/rename_vcf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/random_prune/prune_tree.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yceh/matOptimize-experiments/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "matOptimize-experiments"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yceh"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "PureBasic",
        "size": 4013042,
        "type": "Programming_language",
        "value": "PureBasic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7067,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3906,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2991,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 2275,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 896,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run TNT",
        "type": "Text_excerpt",
        "value": "```\nbash benchmark_tnt.sh <directory> <number of processes for parallel sectorial search> <number of processes for parallel TBR move>\n```\nIt expects tnt to be in $PATH, init.fa.gz (FASTA input for TNT), init.nwk (newick input for TNT) and init.vcf.gz (VCF input for matOptimize to compute parsimony score again) in the directory. TNT can be downloaded from http://www.lillo.org.ar/phylogeny/tnt. Only the latest versions is available from the website and we couldn't re-distribute the older version we used due to licensing restrictions.\n\nIt will output the log (tnt_parallel_sect_log) and the newick file (tnt_parallel_sect.nwk) to the same folder in the end.\n"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run matOptimize",
        "type": "Text_excerpt",
        "value": "```\nmpirun -np <number of processes> --hostfile <hostfile> matOptimize -i <input protobuf> -v <input vcf file> -o <output protobuf> -n -m 0.000001\n```\n-n is for not dumping protobuf\n\n-m 0.000001 is to keep matOptimize running until no improvement can be done.\n\nhostfile expect one hostname per line, and the same number of lines as the number of processes specified.\n"
      },
      "source": "https://raw.githubusercontent.com/yceh/matOptimize-experiments/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:10:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}