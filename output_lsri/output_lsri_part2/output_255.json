{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sing-group/my-brain-seq"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-08T09:00:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-16T05:53:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "myBrain-Seq: a Compi pipeline for miRNA-Seq data analysis in neuropsychiatry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9972096863660854,
      "result": {
        "original_header": "What does myBrain-Seq do?",
        "type": "Text_excerpt",
        "value": "**MyBrain-Seq** is a [Compi](https://www.sing-group.org/compi/) pipeline for performing full analyses of miRNA-Seq data, with particular interest on neuropsychiatric data.  \nIt can automatically identify differentially expressed microRNAs (DE miRNAs) between two conditions using two differential expression analysis software, namely DESeq2 and EdgeR, and is able to offer an integrated result suitable for experimental validation. Additionally, a functional analysis module puts biological meaning behind the list of DE miRNAs and eases the process of biomarker identification.  \nIts features and analysis are designed and tuned to work with miRNA data. We designed myBrain-Seq with the particularities of neuropsychiatric data in mind. In this way, myBrain-Seq addresses its most common limitations while offering results that help the investigator to identify potential biomarkers and molecular mechanisms for the studied conditions. When more than two conditions are involved, myBrain-Seq facilitates performing all the pairwise comparisons of interest. \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9453608806982288,
      "result": {
        "original_header": "Preprocessing",
        "type": "Text_excerpt",
        "value": "Prepare the input FastQ files for the differential expression analysis. This process comprises: \n1. Quality control of the sequences using FastQC.\n2. Trimming of the adapter sequences using Cutadapt (optional).\n3. Alignment to the reference genome with Bowtie. \n4. Format conversion of the Bowtie output files to BAM using sam-tools.\n5. Quality control of the alignments with sam-tools. \n6. Quantification and annotation with featureCounts.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9414221551008128,
      "result": {
        "original_header": "Differential expression analysis",
        "type": "Text_excerpt",
        "value": "1. Differential expression analysis with DESeq2 (with/without factor correction). \n2. Differential expression analysis with EdgeR (with/without factor correction).\n3. Intersection of the DESeq2 and EdgeR results and averagement of their q-values and fold change optional).\n4. Creation of a venn diagram with the integrated results using VennDiagram.\n5. Creation of a volcano plot with the results using EnhancedVolcano. \nIn addition, the user can instruct myBrain-Seq to generate a genome index for the Bowtie alignment; this index will be built in parallel with the preprocessing tasks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9599410285759998,
      "result": {
        "original_header": "Functional analysis",
        "type": "Text_excerpt",
        "value": "1. Hierarchical clustering of the samples using the expression of the DE miRNAs.\n2. Functional enrichment analysis of the DE miRNAs using Diana Tarbase and Reactome databases as reference.\n3. Creation of a miRNA-target network, expanded using Reactome protein-protein interactions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9605994783371596,
      "result": {
        "original_header": "Results summarization",
        "type": "Text_excerpt",
        "value": "Finally, a single MultiQC report is generated to summarize the results of the quality, alignment, assignment and quantification of all the samples. \n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9509868515224527,
      "result": {
        "original_header": "Using the myBrain-Seq image in Linux",
        "type": "Text_excerpt",
        "value": "1. Initialize a working directory with the files required myBrain-Seq.\n2. Add the data analysis (fastQ reads, genomes, contrast files, and so on).\n3. Configure the pipeline parameters. \nThis section provides a comprehensive guide on how to perform these steps and the tools and scripts included in the myBrain-Seq image to do it easily. \n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9590712991183133,
      "result": {
        "original_header": "Building the directory tree",
        "type": "Text_excerpt",
        "value": "To start a new analysis, the first thing to do is build the directory tree in your local file system. This directory tree will be referred as the **working directory** and its structure is recognized and used by the pipeline during the analysis.  \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9420731235278493,
      "result": {
        "original_header": "Structure of the working-directory",
        "type": "Text_excerpt",
        "value": "- **README.txt** contains the next steps you need to do to run the analysis. \n- **compi.parameters** contains the paths and parameters needed for the analysis.\n- **conditions_file.txt** contains the names and conditions of each fastQ file. \n- **contrast_file.txt** contains the names and labels of the conditions to compare in the differential expression analysis.\n- **run.sh** is the script to run the analysis. \nThe creations of these files is detailed in the following sections as well as briefly indicated in the `README.txt` file. You may find it convenient to create additional directories and files within the working directory to group all the data related to a particular study.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8838396113243876,
      "result": {
        "original_header": "Writing the `compi.parameters` file",
        "type": "Text_excerpt",
        "value": "The `compi.parameters` file is used by myBrain-Seq to locate the files needed for the analysis as well as to define which optional tasks will be run. Here is an example of a `compi.parameters` file using the working directory created in the previous example:\n```\nworkingDir=/path/to/mbs-project\nfastqDir=/path/to/study_1/data/\ngffFile=/path/to/study_1/refs/mirbase_hsa.gff3\nconditions=/path/to/mbs-project/input/conditions_file_study_1.txt\ncontrast=/path/to/mbs-project/input/contrast_file_study_1.txt\nbwtIndex=/path/to/study_1/refs/bowtie-index_GRCh38/GCA_000001405.15_GRCh38_no_alt_analysis_set\nadapter=TGGAATTCTCGGGTGCCAAGG\norganism=Homo sapiens\n```\n \n- **workingDir**: the path to the myBrain-Seq working directory of the analysis (first example of this section).\n- **fastqDir**: the path to the directory with the fastQ files to analyse.\n- **gffFile**: the path to the the GFF3 file with the miRNA annotations. This file could be obtained from [miRBase](https://www.mirbase.org/ftp.shtml) or [NCBI Genomes](https://www.ncbi.nlm.nih.gov/genome/).\n- **conditions**: the path to conditions_file.txt.\n- **contrast**: the path to contrast_file.txt.\n- **genome** *(optional if bwtIndex is provided)*: the path to the reference genome in FASTA from which the Bowtie index will be built.\n- **bwtIndex** *(optional if genome is provided)*: the path to a directory containing a Bowtie index, including the basename of the bowtie index files. If this parameter is omitted myBrain-Seq will build a new index using a genome in FASTA provided in the genome parameter.\n- **organism**: the organism used in the study. This parameter is used for the functional enrichment analysis and for the network construction. Available organisms are: *Mus musculus, Homo sapiens, Caenorhabditis elegans, Danio rerio, Rattus norvegicus, Gallus gallus, Drosophila melanogaster*. \n- **adapter**: the sequence of the adapter to remove. If this parameter is omitted myBrain-Seq will skip the adapter removal step.\n- **gffFeature**: the name of the feature of the GFF3 file from which the attributes will be obtained; the default value is \"miRNA\".\n- **gffAttribute**: the name of the attribute in the GFF3 file to use in the annotations; the default value is \"Name\".\n- **qvalue**: FDR-corrected pvalue used to filter miRNAs after the differential expression analysis; the default value is \"0.05\".\n- **log2FC**: Absolute value of the log2FC, used to filter miRNAs after the differential expression analysis; the default value is \"0.5\".\n- **distance_method**: Method used to compute distances on the hierarchical clustering step; the default value is \"euclidean\". Availiable methods are: \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"pearson\", \"abspearson\", \"correlation\", \"abscorrelation\", \"spearman\" and \"kendall\". \nA full list of the optional parameters is on the section [pipeline parameters](#pipeline-parameters).\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8823195652685483,
      "result": {
        "original_header": "Writing the `conditions_file.txt` file",
        "type": "Text_excerpt",
        "value": "The `conditions_file.txt` is a TSV file used by myBrain-Seq to link each fastQ file with its condition. This information will be used to choose the group of samples to compare in the differential expression analysis. Here is an example of a conditions file: \n- Columns must be separated by single tabulations.\n- The first row must be the header: \u201cname\u201d, \u201ccondition\u201d and \u201clabel\u201d.\n- The first column must be the file rootnames of the fastQ files (i.e.: C019.fastq --> C019).\n- The second column must be the conditions.\n- The third column is the label, which is only used so that the user can identify each sample in case there is more than one condition. It has no impact on the analysis result but it must be present.\n- Additional columns with factors can be included. All these factors will be added to the statistical model of differential expression analysis. Only one factor per column, they can be omitted.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9204291947597286,
      "result": {
        "original_header": "Writing the `contrast_file.txt` file",
        "type": "Text_excerpt",
        "value": "The `contrast_file.txt` is used by myBrain-Seq to perform the comparisons between samples of two different conditions in the differential expression analysis. Each line on this file corresponds with a contrast that myBrain-Seq has to perform. Here is an example of a contrast file:\n```\nname\n\"Control-First_episode\" = \"C-FE\"\n\"Control-Second_episode\" = \"C-SEP\"\n\"First_episode-Second_episode\" = \"FE-SEP\"\n```\n \nThe first line of `contrast_file.txt` is the header, the following lines begin with the contrast label (left side of the equal sign) and the factors to compare (right side of the equal sign). In order to obtain a file with a valid format, the following considerations must be taken into account: \n- The first row should be \"name\", in lowercase.\n- The following rows must follow this structure: double quotes, ***label of the factor to compare***, hyphen, ***label of the reference factor***, double quotes, space, equal sign, space, double quotes, ***factor to compare***, hyphen, ***reference factor***, double quotes. No additional spaces should be added, use underscore symbol instead (eg.: *First episode* should be *First_episode*). Here is a visual representation of this structure where \"B\" is the reference factor: `\"Label_A-Label_B\" = \"Factor_A-Factor_B\"`\n- The name of the factors to be compared (right side of the equal sign) must be the same as those specified in the \"condition\" column of the `conditions_file.txt`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9150222077269997,
      "result": {
        "original_header": "myBrain-Seq parameters",
        "type": "Text_excerpt",
        "value": "MyBrain-Seq needs the values of some parameters to work, as already indicated in the [*writing the `compi.parameters` file*](#writing-the-compiparameters-file) section. However, optional parameters with default values can also be edited by adding them to the compi.parameters file. Below is a list of all myBrain-Seq parameters: \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9618295954629963,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "The sample data is available [here](http://static.sing-group.org/software/myBrainSeq/downloads/test-data-1.0.zip). Download and decompress it to get a directory named `working-dir` that contains an example of a functional working directory, were the data and biological references were grouped within it. Here you can find: \n- A directory called `input`, with the `compi.parameters`, `condition_file.txt` and `contrast_file.txt` of this particular study.\n- A directory called `data`, with the fastQ files of the study, the Bowtie index and the miRNA annotations.  \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8993322657942237,
      "result": {
        "original_header": "Related work",
        "type": "Text_excerpt",
        "value": "- P\u00e9rez-Rodr\u00edguez, D., L\u00f3pez-Fern\u00e1ndez, H., & Ag\u00eds-Balboa, R. C. (2021). Application of miRNA-seq in neuropsychiatry: A methodological perspective. Computers in Biology and Medicine, 135, 31-42. https://doi.org/10.1016/j.compbiomed.2021.104603\n- P\u00e9rez-Rodr\u00edguez, D., L\u00f3pez-Fern\u00e1ndez, H., & Ag\u00eds-Balboa, R. C. (2022). On the Reproducibility of MiRNA-Seq Differential Expression Analyses in Neuropsychiatric Diseases. En M. Rocha, F. Fdez-Riverola, M. S. Mohamad, & R. Casado-Vara (Eds.), Practical Applications of Computational Biology & Bioinformatics, 15th International Conference (PACBB 2021) (pp. 41-51). Springer International Publishing. https://doi.org/10.1007/978-3-030-86258-9_5\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8385991198698984,
      "result": {
        "original_header": "Building the Docker image",
        "type": "Text_excerpt",
        "value": "To build the Docker image, [`compi-dk`](https://www.sing-group.org/compi/#downloads) is required. Once you have it installed, simply run `compi-dk build -drd -tv` from the project directory to build the Docker image. The image will be created with the name specified in the `compi.project` file. This file also specifies the version of compi that goes into the Docker image.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9533200035884877,
      "result": {
        "original_header": "Versioning",
        "type": "Text_excerpt",
        "value": "The pipeline version is set in the `<version>` section of the `pipeline.xml`. Nevertheless, as the version number is referenced from other sites, it is recommended to update it using the following command:\n```\n./resources/development/set-new-version.sh $(pwd) <new_version>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9657475686523612,
      "result": {
        "original_header": "Team",
        "type": "Text_excerpt",
        "value": "MyBrain-Seq is a pipeline developed by the SING and NeuroEpigenetics Lab groups. \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989198327663888,
      "result": {
        "type": "Text_excerpt",
        "value": "<img src=\"https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/docs/mybrain-seq_logo.png\"\n         alt=\"myBrain-Seq logo\"\n         width=\"240px\"\n\t\t style=\"vertical-align: middle; margin-left: 0;\"/>\n    \n      \n        myBrain-Seq is a \n\t\t\tCompi pipeline for miRNA-Seq analysis of neuropsychiatric data. A Docker image is available for this pipeline in  this Docker Hub repository . \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sing-group/my-brain-seq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Find out tasks with errors",
        "parent_header": [
          "Using the myBrain-Seq image in Linux"
        ],
        "type": "Text_excerpt",
        "value": "Some tasks may produce errors that do not cause the pipeline to fail, but they can be important. Such errors are reported in the log files produced in the `logs` directory of the pipeline working directory. Inside this directory myBrain-Seq will create additional directories with the logs of each execution, they will be named with the date and hour of the analysis. Files containing the errors are saved with extension `*.err.log`, whereas normal output is saved with extension `*.out.log`.\n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sing-group/my-brain-seq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sing-group/my-brain-seq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/visual_console/visual_console.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/bam-stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/hclust.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/fastqc-qc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/functional-enrichment.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/functions.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/dea-integration.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/edger.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/network.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/pull-docker-images.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/feature-counts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/init_working_dir.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/test_isadapter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/cut-sequences.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/initialization.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/bowtie-alignment.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/build-genome-index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/venn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/multiqc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/deseq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/sam-to-bam.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/scripts/volcano.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/init-working-dir/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/init-working-dir/make_run-sh.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/init-working-dir/make_compi-parameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/development/set-new-version.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/docs/pipeline_workflow.png"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8995667456981653,
      "result": {
        "original_header": "Using the myBrain-Seq image in Linux",
        "type": "Text_excerpt",
        "value": "To perform a myBrain-Seq analysis users must first: \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9714976481395673,
      "result": {
        "original_header": "Building the directory tree",
        "type": "Text_excerpt",
        "value": "MyBrain-seq offers two options to generate the working directory: interactively using myBrain-Seq's terminal user interface (*v.console*) or adapting and running a command in the console.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999729500523439,
      "result": {
        "original_header": "Creating the working directory interactively with the v.console",
        "type": "Text_excerpt",
        "value": "Run the *v.console* (see section \"*Running the v.console*\") and select the option \"Initialize the working-directory\"; then, paste the full path where the \"working-directory\" should be placed and confirm.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999994503899882,
      "result": {
        "original_header": "Creating the working directory with a command",
        "type": "Text_excerpt",
        "value": "To build the working directory adapt the first line of the following code and run it:\n```bash\nWORKING_DIRECTORY=/path/to/the/working-directory\ndocker run --rm -v ${WORKING_DIRECTORY}:${WORKING_DIRECTORY} -u \"$(id -u)\":\"$(id -g)\" singgroup/my-brain-seq init_working_dir.sh ${WORKING_DIRECTORY}\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999956772389491,
      "result": {
        "original_header": "Structure of the working-directory",
        "type": "Text_excerpt",
        "value": "After completing any of the above options, the selected working-directory (`mbs_project` in the example below) should have the following structure: \n```\n/home/user/mbs-project \n\t|-- README.txt\n\t|-- input\n\t|   |-- compi.parameters\n\t|   |-- conditions_file.txt\n\t|   `-- contrast_file.txt\n\t|-- output\n\t`-- run.sh\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989471905017839,
      "result": {
        "original_header": "Writing the `compi.parameters` file",
        "type": "Text_excerpt",
        "value": "The `compi.parameters` file is used by myBrain-Seq to locate the files needed for the analysis as well as to define which optional tasks will be run. Here is an example of a `compi.parameters` file using the working directory created in the previous example:\n```\nworkingDir=/path/to/mbs-project\nfastqDir=/path/to/study_1/data/\ngffFile=/path/to/study_1/refs/mirbase_hsa.gff3\nconditions=/path/to/mbs-project/input/conditions_file_study_1.txt\ncontrast=/path/to/mbs-project/input/contrast_file_study_1.txt\nbwtIndex=/path/to/study_1/refs/bowtie-index_GRCh38/GCA_000001405.15_GRCh38_no_alt_analysis_set\nadapter=TGGAATTCTCGGGTGCCAAGG\norganism=Homo sapiens\n```\n \n- **workingDir**: the path to the myBrain-Seq working directory of the analysis (first example of this section).\n- **fastqDir**: the path to the directory with the fastQ files to analyse.\n- **gffFile**: the path to the the GFF3 file with the miRNA annotations. This file could be obtained from [miRBase](https://www.mirbase.org/ftp.shtml) or [NCBI Genomes](https://www.ncbi.nlm.nih.gov/genome/).\n- **conditions**: the path to conditions_file.txt.\n- **contrast**: the path to contrast_file.txt.\n- **genome** *(optional if bwtIndex is provided)*: the path to the reference genome in FASTA from which the Bowtie index will be built.\n- **bwtIndex** *(optional if genome is provided)*: the path to a directory containing a Bowtie index, including the basename of the bowtie index files. If this parameter is omitted myBrain-Seq will build a new index using a genome in FASTA provided in the genome parameter.\n- **organism**: the organism used in the study. This parameter is used for the functional enrichment analysis and for the network construction. Available organisms are: *Mus musculus, Homo sapiens, Caenorhabditis elegans, Danio rerio, Rattus norvegicus, Gallus gallus, Drosophila melanogaster*. \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8111500522895164,
      "result": {
        "original_header": "Writing the `conditions_file.txt` file",
        "type": "Text_excerpt",
        "value": "In order to obtain a file with a valid format, the following considerations must be taken into account: \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9988333343345881,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "To run the pipeline with this test data, edit the `compi.parameters` (at `/working-dir/input`) and modify the paths to adapt them to the absolute location of the working directory in your computer (e.g.: `workingDir=/working-dir` could be `workingDir=/home/user/working-dir`). After doing this, just run the `run.sh` script included.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985968679214952,
      "result": {
        "original_header": "Building the Docker image",
        "type": "Text_excerpt",
        "value": "To build the Docker image, [`compi-dk`](https://www.sing-group.org/compi/#downloads) is required. Once you have it installed, simply run `compi-dk build -drd -tv` from the project directory to build the Docker image. The image will be created with the name specified in the `compi.project` file. This file also specifies the version of compi that goes into the Docker image.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999728406348759,
      "result": {
        "original_header": "Versioning",
        "type": "Text_excerpt",
        "value": "The pipeline version is set in the `<version>` section of the `pipeline.xml`. Nevertheless, as the version number is referenced from other sites, it is recommended to update it using the following command:\n```\n./resources/development/set-new-version.sh $(pwd) <new_version>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8821401132334169,
      "result": {
        "original_header": "Team",
        "type": "Text_excerpt",
        "value": "- Daniel P\u00e9rez-Rodr\u00edguez [![ORCID](https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif)](https://orcid.org/0000-0002-8110-3567), daniel.prz.rodriguez@gmail.com \n- Hugo L\u00f3pez-Fern\u00e1ndez [![ORCID](https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif)](https://orcid.org/0000-0002-6476-7206), hlfernandez@uvigo.es\n- Roberto C. Ag\u00eds-Balboa [![ORCID](https://info.orcid.org/wp-content/uploads/2020/12/orcid_16x16.gif)](https://orcid.org/0000-0001-9899-9569), roberto.carlos.agis.balboa@sergas.es\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8202524953278894,
      "result": {
        "original_header": "Structure of the working-directory",
        "type": "Text_excerpt",
        "value": "After completing any of the above options, the selected working-directory (`mbs_project` in the example below) should have the following structure: \n```\n/home/user/mbs-project \n\t|-- README.txt\n\t|-- input\n\t|   |-- compi.parameters\n\t|   |-- conditions_file.txt\n\t|   `-- contrast_file.txt\n\t|-- output\n\t`-- run.sh\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sing-group/my-brain-seq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "compi, differential-expression, docker, mirna, mirna-seq, pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2022 Daniel P\u00e9rez-Rodr\u00edguez, Hugo L\u00f3pez-Fern\u00e1ndez, and\nRoberto Carlos Ag\u00eds-Balboa\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/resources/docs/mybrain-seq_logo.png"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "my-brain-seq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "sing-group"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 85229,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 55550,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1386,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hlfernandez",
          "type": "User"
        },
        "date_created": "2023-04-14T13:44:06Z",
        "date_published": "2023-04-14T13:45:41Z",
        "html_url": "https://github.com/sing-group/my-brain-seq/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 99549747,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/sing-group/my-brain-seq/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549747",
        "value": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549747",
        "zipball_url": "https://api.github.com/repos/sing-group/my-brain-seq/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hlfernandez",
          "type": "User"
        },
        "date_created": "2023-03-31T13:50:16Z",
        "date_published": "2023-04-14T13:46:00Z",
        "html_url": "https://github.com/sing-group/my-brain-seq/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 99549783,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/sing-group/my-brain-seq/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549783",
        "value": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549783",
        "zipball_url": "https://api.github.com/repos/sing-group/my-brain-seq/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hlfernandez",
          "type": "User"
        },
        "date_created": "2023-03-14T09:46:09Z",
        "date_published": "2023-04-14T13:46:16Z",
        "html_url": "https://github.com/sing-group/my-brain-seq/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 99549821,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/sing-group/my-brain-seq/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549821",
        "value": "https://api.github.com/repos/sing-group/my-brain-seq/releases/99549821",
        "zipball_url": "https://api.github.com/repos/sing-group/my-brain-seq/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the myBrain-Seq's terminal user interface",
        "parent_header": [
          "Using the myBrain-Seq image in Linux"
        ],
        "type": "Text_excerpt",
        "value": "Some steps on the preparation of myBrain-Seq analysis require either to adapt and run code on a console or to use myBrain-Seq's terminal user interface (*v.console*). As the *v.console* can perform several operations, please refer to this section whenever you need to use it. To launch the *v.console* just run the following command on a terminal:\n\n```bash\ndocker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp singgroup/my-brain-seq visual_console.sh\n```\n\nAn interactive menu should be displayed in your terminal. \n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running myBrain-Seq analysis",
        "parent_header": [
          "Using the myBrain-Seq image in Linux"
        ],
        "type": "Text_excerpt",
        "value": "Once all the required files were built, to start myBrain-Seq analysis run the script \"run.sh\" placed on the root of the working directory. This also can be done interactively by using the *v.console* (see section \"*Running the v.console*\"). To run the script manually adapt the following code:\n\n```bash\n/path/to/working-dir/run.sh /path/to/compi.parameters\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adapting myBrain-Seq execution",
        "parent_header": [
          "Using the myBrain-Seq image in Linux",
          "Running myBrain-Seq analysis"
        ],
        "type": "Text_excerpt",
        "value": "MyBrain-Seq admits some parameters to customize the execution. Using these parameters you can perform partial executions or control the number of parallel processes of the analysis. These parameters should be quoted and added at the end of the running command:\n\n- **Start myBrain-Seq execution at a specific task**: `/path/to/working-dir/run.sh /path/to/compi.parameters \"--from task_name\"`\n\n- **Run myBrain-Seq until a specific task**: `/path/to/working-dir/run.sh /path/to/compi.parameters \"--until task_name\"`\n- **Start myBrain-Seq execution after a specific task**: `/path/to/working-dir/run.sh /path/to/compi.parameters \"--after task_name\"`\n- **Change the number of parallel processes** *(default 5)*: `/path/to/working-dir/run.sh /path/to/compi.parameters \"--num-tasks 2\"`\n\nYou can combine several parameters to gain greater control of the analysis process. Since these parameters are controlled by the Compi framework, please refer to the [Compi manual](https://www.sing-group.org/compi/docs/introduction.html#) for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running time",
        "parent_header": [
          "Test data"
        ],
        "type": "Text_excerpt",
        "value": "- \u2248 6 minutes - 5 parallel tasks - Ubuntu 20.04.4 LTS, 8 CPUs (Intel\u00ae Core\u2122 i7-9700 @ 3.00GHz), 16GB of RAM and SSD disk.\n- \u2248 12 minutes - 5 parallel tasks - Ubuntu 18.04.6 LTS, 8 CPUs (Intel\u00ae Core\u2122 i7-8565U @ 1.80GHz), 16GB of RAM and SSD disk.\n"
      },
      "source": "https://raw.githubusercontent.com/sing-group/my-brain-seq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:57:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}