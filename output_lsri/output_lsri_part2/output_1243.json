{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Ginnay/CBLRR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-19T06:45:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-28T08:44:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CBLRR: A Bounded Constraint-Based Cauchy Low-Rank Representation Method for Single-cell RNA-seq Data Analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9820897781478697,
      "result": {
        "original_header": "CBLRR",
        "type": "Text_excerpt",
        "value": "\r\nCBLRR: A Cachy-Based Bounded Constraint Low-Rank Representation Method for Single-cell RNA-seq Data Analysis\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9790965855092345,
      "result": {
        "original_header": "2. Input Arguments",
        "type": "Text_excerpt",
        "value": "Please see the /Data/Examples/Input folder and the script file `demo.m` for details.\r\n\r\n* `in_X.mat`: the expression matrix of scRNA-seq data used in the CBLRR method. Taking the kolod data matrix as an example, the rows are the genes (10685) and the columns are the samples (704).\r\n\r\n* `true_labs.mat`: the labels of scRNA-seq data used in the CBLRR method. Taking the Kolod labels as an example, it contains 5 types (1, 2, ..., 5).\r\n\r\n* `n_space`: the number of clusters, predefined by the number of eigenvalues. The default setting is the number of cell types if the number of clusters is given. \r\n\r\n* `alpha`: the tuning parameter for the bounded nuclear norm regulation. We set the value of this parameter by default as 1.\r\n\r\n* `a`: the scale parameter for regularizing the cauchy loss function. We set the value of this parameter by default as 10.\r\n\r\n* `mu`: the tuning parameter for optimizing and solving the objective function. We set the value of this parameter by default as 110.\r\n\r\n* `beta`: the tuning parameter for optimizing and solving the objective function. We set the value of this parameter by default as 1.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8559172729839801,
      "result": {
        "original_header": "3. Output variables",
        "type": "Text_excerpt",
        "value": "\r\nThere are five output variables. Please see the /Data/Examples/Output folder and the following details.\r\n\r\n* `NMI`: the Normalized Mutual Information of clustering results.\r\n\r\n* `ARI`: the Adjusted Rand Index of clustering results.\r\n\r\n* `grps`: the cell labels predicted by the CBLRR clustering method.\r\n\r\n* `Similarity`: the local similarity matrix to learn the heterogeneity of cells and can be used to indicate cell clusters, formed as matrix format.\r\n\r\n* `Z`: the coefficient matrix obtained by the CBLRR method, formed as matrix format.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9806661088575687,
      "result": {
        "original_header": "4. Files:",
        "type": "Text_excerpt",
        "value": "\r\nCBLRR.m - The main function.\r\n\r\ndemo.m - A script with a real scRNA-seq data to show how to run the code.\r\n\r\nLRR.m - Solve the low-rank problem via ADMM.\r\n\r\nBound.m - Compute the bounded constraint.\r\n\r\nContingency.m - Form contigency matrix for two vectors.\r\n\r\nFilterGenesZero.m - Count the zero expression of genes in different cells, and filter genes to control the data quality.\r\n\r\nSpectralClustering.m - Computes the clustering of the nodes using the spectral clustering algorithm.\r\n\r\ncal_eigenvalues.m - Calculate the number of eigenvalues to determine the number of clusters(If the number of clusters is not given).\r\n\r\ndata file: Due to the space limitation of github, we only give some datasets, other datasets can be downloaded from (https://hemberg-lab.github.io/scRNA.seq.datasets/) or (https://github.com/10XGenomics/single-cell-3prime-paper) and (https://doi.org/10.6084/m9.figshare.5829687.v7). While Examples file provides the example of input data and output data.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Ginnay/CBLRR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Ginnay/CBLRR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ginnay/CBLRR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Ginnay/CBLRR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CBLRR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Ginnay"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "M",
        "size": 10532,
        "type": "Programming_language",
        "value": "M"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Run CBLRR",
        "type": "Text_excerpt",
        "value": "\r\nTo apply CBLRR, please run the Matlab script file `demo.m`. We provide real examples used in our manuscript (Kolod) to reproduce our results. \r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:42:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Example:",
        "type": "Text_excerpt",
        "value": "\r\nFollow the steps below to run CBLRR (also contained in the \" demo.m\" file). Here use a real scRNA-seq dataset (Kolod) as an example.\r\n\r\nclear all;\r\nclc;\r\n\r\n%% input:\r\nload('Data\\Examples\\Input\\in_X.mat') %Loading data, each column denotes a gene and each row denotes a cell.\r\nload('Data\\Examples\\Input\\true_labs.mat') %Loading labels.\r\n\r\n%% set tuning parameters:\r\nalpha=1; % set as 1 by default.\r\nmu =110; % set as 110 by default.\r\na = 10; % set as 10 by default.\r\nbeta = 1; %set as 1 by default.\r\nn_space = length(unique(true_labs));% The cluster is predefine:\r\n%[n_space,eigenvalues] = cal_eigenvalues(Z);% The number of cluster is not given:\r\n\r\n%% perform CBLRR:\r\n[NMI,ARI,grps,similarity,Z] = CBLRR(in_X,true_labs,n_space,alpha,beta,mu,a);\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/Ginnay/CBLRR/main/README.md",
      "technique": "header_analysis"
    }
  ]
}