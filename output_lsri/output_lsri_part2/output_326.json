{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen-lab/TIVAN-indel"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-07T21:38:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-15T08:30:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A computational framework for annotating and predicting noncoding regulatory small insertion and deletion (sindel)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9165628794656058,
      "result": {
        "original_header": "TIVAN-Indel",
        "type": "Text_excerpt",
        "value": "By leveraging labelled noncoding sindels identified by cis-expression quantitative trait loci (cis- eQTLs) analyses across 44 tissues in GTEx, and a compilation of both generic functional annotations and tissue-specific multi-omics features, we developed TIVAN-indel, which is a supervised computational framework for predicting noncoding sindels that potentially regulate the nearby gene expression.  \n<p align=\"center\"><img src=\"res/overview.png\" alt=\"Overview\"></p>\n<p align=\"center\">Figure 1. Overview of the TIVAN-Indel.</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8629380542132112,
      "result": {
        "original_header": "Obtain precomputed tissue-specific functional scores for query small indels",
        "type": "Text_excerpt",
        "value": "To make TIVAN-indel widely accessible to the research community, we provide the precomputed functional scores for all nc-sindels in 1000 Genomes Project across 44 tissues on the github webpage. With the provided R scripts on the github webpage ([R/TIVAN-indel.R](R/TIVAN-indel.R)), users can easily and quickly retrieve the functional scores for query sindels for one or multiple tissues.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9511953409464995,
      "result": {
        "original_header": "Command line arguments",
        "type": "Text_excerpt",
        "value": "```r \n- Usage: R --slave --args --no-save arg1 arg2 arg3 arg4 < TIVAN-indel.R \n\n  - arg1: Input region: regionfile of small indels. The file has three columns \"chr start end\" with space/tab-delimited (chr1 10001 20000)\n  - arg2: A file of all known 1000 Genome indels\n  - arg3: A file/files of pre-computed score of 1000 Genome indels, multiple files are separated by comma\n  - arg4: A output file contains retrieved scores for sindels in query region\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen-lab/TIVAN-indel/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen-lab/TIVAN-indel/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lichen-lab/TIVAN-indel"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TIVAN-Indel"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/res/overview.png"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/29525389/210155683-13f95a25-415d-47ae-bcc5-30d37b92f139.png"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/29525389/210155653-b3f622be-af92-4589-8fc1-dea9de285bda.png"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare training data",
        "parent_header": [
          "TIVAN-Indel",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "We use a compilation of both generic functional annotations and tissue-specific functional annotations to train the TIVAN-indel model. Given query sindels (example: [train/snp.pos.txt](train/snp.pos.txt)), R script ``prepare.R\" will generated (1) CADD annotations for query sindels and (2) reference genomic sequence and alterntive genomic sequence with sindels. A R rda file ``CADD.indel.rda\" contains the CADD annotations for all indels in 1000 Genome Project can be downloaded [Here](https://drive.google.com/file/d/1Eio1YYZNmrVIoqFg6r-GUTGuwjudi30P/view?usp=share_link) \n\n\nRunning the R command line with four arguments\n\n```bash\nR --slave --args --no-save CADD.indel.rda train/snp.pos.txt train/snp.neg.txt train  <  prepare.R \n\n- CADD.indel.rda:  a R rda file contains the CADD annotations for all indels in 1000 Genome Project.\n\n- snp.pos.txt: (example: [train/snp.pos.txt](train/snp.pos.txt)) a file with indel information \"chr start end refallele and altallele\" in the positve set\n\n- snp.neg.txt: (example: [train/snp.neg.txt](train/snp.neg.txt)) a file with indel information \"chr start end refallele and altallele\" in the negative set\n\n- train: the output folder\n```\n\n\nThe output files are stored in the ``train\" folder, which contains five files as below\n\n```bash\n- annot.csv: (example: [train/annot.csv](train/annot.csv)), which contains CADD annotations for both positive indels and negative indels. \n\n- snp.pos.ref.fasta: reference genomic sequence for indels in the positve set\n\n- snp.pos.ref.fasta: alternative genomic sequence for indels in the positve set\n\n- snp.neg.ref.fasta: reference genomic sequence for indels in the negative set\n\n- snp.neg.ref.fasta: alternative genomic sequence for indels in the negative set\n```\n\n\nWe further apply the pretrained deep learning model (e.g. DanQ model) to predict 919 multi-omics features using reference/alternative genomic sequences \nThe trained weights of DanQ model are provided in the `checkpoint/` directory, while the model code is present in `models/` directory. You can train your own model by using data from DeepSEA website (http://deepsea.princeton.edu/help/). \n\nFile `src/prepare.py` calls DanQ model to predict 919 multi-omics features. You can learn more about the script arguments using the `-h` command for individual files.\n\n```\n$ python prepare.py -h\nusage: prepare.py [-h] [--path PATH]\n\nArguments for preparing features.\n\noptions:\n  -h, --help   show this help message and exit\n  --path PATH  path for input data\n  \nExample:\npython prepare.py --path ../train\npython prepare.py --path ../test\n\n``seq_features.h5\" will be generated in the desired folder\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data and code preparation",
        "parent_header": [
          "TIVAN-Indel",
          "Obtain precomputed tissue-specific functional scores for query small indels"
        ],
        "type": "Text_excerpt",
        "value": "- All noncoding small indels in 1000 Genomes (sindel.noncoding.1kg.rda) can be downloaded from [Here](https://drive.google.com/file/d/1u7PV9JqM1YmllutP56Gv0faP_Yhf1h4_/view?usp=share_link)\n\n- The precomputed scores for All noncoding small indels in 1000 Genomes across 44 tissues/cell types (e.g., Adipose_Subcutaneous.score.rda) in GTEX can be downloaded from [Here](https://drive.google.com/drive/folders/1fZ_V4_2sr-lPCa1HItXoUIvJ40qa_w_h?usp=share_link). The 44 tissues/cell types from GTEX are summarized in the following table.\n\n\n|Tissue                                |Tissue.class  |\n|:-------------------------------------|:-------------|\n|Adipose_Subcutaneous                  |Adipose       |\n|Adipose_Visceral_Omentum              |Adipose       |\n|Adrenal_Gland                         |Adrenal Gland |\n|Artery_Aorta                          |Artery        |\n|Artery_Coronary                       |Artery        |\n|Artery_Tibial                         |Artery        |\n|Brain_Anterior_cingulate_cortex_BA24  |Brain         |\n|Brain_Caudate_basal_ganglia           |Brain         |\n|Brain_Cerebellar_Hemisphere           |Brain         |\n|Brain_Cerebellum                      |Brain         |\n|Brain_Cortex                          |Brain         |\n|Brain_Frontal_Cortex_BA9              |Brain         |\n|Brain_Hippocampus                     |Brain         |\n|Brain_Hypothalamus                    |Brain         |\n|Brain_Nucleus_accumbens_basal_ganglia |Brain         |\n|Brain_Putamen_basal_ganglia           |Brain         |\n|Breast_Mammary_Tissue                 |Breast        |\n|Cells_EBV-transformed_lymphocytes     |Lymphocytes   |\n|Cells_Transformed_fibroblasts         |Fibroblasts   |\n|Colon_Sigmoid                         |Colon         |\n|Colon_Transverse                      |Colon         |\n|Esophagus_Gastroesophageal_Junction   |Esophagus     |\n|Esophagus_Mucosa                      |Esophagus     |\n|Esophagus_Muscularis                  |Esophagus     |\n|Heart_Atrial_Appendage                |Heart         |\n|Heart_Left_Ventricle                  |Heart         |\n|Liver                                 |Liver         |\n|Lung                                  |Lung          |\n|Muscle_Skeletal                       |Muscle        |\n|Nerve_Tibial                          |Nerve         |\n|Ovary                                 |Ovary         |\n|Pancreas                              |Pancreas      |\n|Pituitary                             |Pituitary     |\n|Prostate                              |Prostate      |\n|Skin_Not_Sun_Exposed_Suprapubic       |Skin          |\n|Skin_Sun_Exposed_Lower_leg            |Skin          |\n|Small_Intestine_Terminal_Ileum        |Intestine     |\n|Spleen                                |Spleen        |\n|Stomach                               |Stomach       |\n|Testis                                |Testis        |\n|Thyroid                               |Thyroid       |\n|Uterus                                |Uterus        |\n|Vagina                                |Vagina        |\n|Whole_Blood                           |Blood         |\n\n\n- TIVAN-indel.R: R software to retrieve the precomputed scores for query sindels and is available at [R/TIVAN-indel.R](R/TIVAN-indel.R)\n\n- region.txt: query regions in the following example ([example/region.txt](example/region.txt)) such as:\n\n<img width=\"881\" alt=\"Screen Shot 2022-12-31 at 4 05 17 PM\" src=\"https://user-images.githubusercontent.com/29525389/210155683-13f95a25-415d-47ae-bcc5-30d37b92f139.png\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen-lab/TIVAN-indel/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, Aman Agarwal\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TIVAN-indel"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lichen-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9157,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8083,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "TIVAN-Indel"
        ],
        "type": "Text_excerpt",
        "value": "TIVAN-Indel is implemented by both R and Python and the requirements are\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python and Python packages",
        "parent_header": [
          "TIVAN-Indel",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "```\npython==3.9.6\nxgboost==1.5.1\nh5py==3.1.0\nmatplotlib==3.4.3\nnumpy==1.19.3\nnumpy-utils==0.1.6\npandas==1.4.0\nscikit-learn==0.24.2\ntensorflow==2.6.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "R and R packages",
        "parent_header": [
          "TIVAN-Indel",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "```\nR==4.1.1\nBSgenome.Hsapiens.UCSC.hg19\ndata.table\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:13:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "TIVAN-Indel"
        ],
        "type": "Text_excerpt",
        "value": "Download TIVAN-Indel\n\n```bash\ngit clone https://github.com/amanbasu/TIVAN-indel.git\n```\n\nInstall requirements for Python\n\n```bash\npip install -r requirements.txt\n```\n\nInstall requirements for R\n\n```r\ninstall.packages('data.table')\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"BSgenome.Hsapiens.UCSC.hg19\")\n\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train TIVAN-indel model",
        "parent_header": [
          "TIVAN-Indel",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The model architecture is described in Figure 1 (Part C). It uses a compilation of both 45 CADD annotations and 919 multi-omics features as generated above. We call ``train.py\" to train the model\n\n```bash\npython train.py --path ../train --output ../res/model.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predict",
        "parent_header": [
          "TIVAN-Indel",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For given new indels (example: [test/snp.pos.txt](test/snp.pos.txt) and [test/snp.neg.txt](test/snp.neg.txt)), we use the aforementioned steps ``predict.R\" and ``predict.py\" to generate the input features, which will be stored in another folder ``test\".  Then, we call ``predict.py\" to predict the functional scores.\n\n```bash\npython predict.py --path ../test --model ../res/model.json --output ../res/output.txt\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "TIVAN-Indel",
          "Obtain precomputed tissue-specific functional scores for query small indels"
        ],
        "type": "Text_excerpt",
        "value": "\n- Example One: Interested in one tissue at a time\n```r \nR --slave --args --no-save region.txt sindel.noncoding.1kg.rda Adipose_Subcutaneous.score.rda output.txt  < TIVAN-indel.R\n```\n\n- Example Two: Interested in multiple tissues at the same time\n```r \nR --slave --args --no-save region.txt sindel.noncoding.1kg.rda Adipose_Subcutaneous.score.rda,Adipose_Visceral_Omentum.score.rda output.txt  < TIVAN-indel.R\n```\n\n\nThe expected otuput from Example Two is:\n\n<img width=\"881\" alt=\"Screen Shot 2022-12-31 at 4 05 17 PM\" src=\"https://user-images.githubusercontent.com/29525389/210155653-b3f622be-af92-4589-8fc1-dea9de285bda.png\">\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/TIVAN-indel/main/README.md",
      "technique": "header_analysis"
    }
  ]
}