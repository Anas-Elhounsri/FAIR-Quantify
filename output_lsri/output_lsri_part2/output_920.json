{
  "application_domain": [
    {
      "confidence": 17.65,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "If you find LTR_retriever useful, please cite:\n\n`Ou S. and Jiang N. (2018). LTR_retriever: A Highly Accurate and Sensitive Program for Identification of Long Terminal Repeat Retrotransposons. Plant Physiol. 176(2): 1410-1422.` [open access](http://www.plantphysiol.org/content/176/2/1410)\n\nIf you find LAI useful, please cite:\n\n`Ou S., Chen J. and Jiang N. (2018). Assessing genome assembly quality using the LTR Assembly Index (LAI). Nucleic Acids Res. gky730.` [open access](https://doi.org/10.1093/nar/gky730)\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oushujun/LTR_retriever"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-18T18:35:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T03:24:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LTR_retriever is a highly accurate and sensitive program for identification of LTR retrotransposons; The LTR Assembly Index (LAI) is also included in this package."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "LTR_retriever is a command line program (in Perl) for accurate identification of LTR retrotransposons (LTR-RTs) from outputs of LTRharvest, LTR_FINDER, MGEScan 3.0.0, LTR_STRUC, and LtrDetector, and generates non-redundant LTR-RT library for genome annotations.\n\nBy default, the program will generate whole-genome LTR-RT annotation and the LTR Assembly Index (LAI) for evaluations of the assembly continuity of the input genome. Users can also run LAI separately (see `Usage`).\n\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.921284301951857,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": "Two types of inputs are required for LTR_retriever\n1. Genomic sequence\n2. LTR-RT candidates \nLTR_retriever takes multiple LTR-RT candidate inputs including the screen output of LTRharvest and the screen output of LTR_FINDER. For outputs of other LTR identification programs, you may convert them to LTRharvest-like format and feed them to LTR_retriever (with `-inharvest`). Users need to obtain the input file(s) from the aforementioned programs before running LTR_retriever. Either a single input source or a combination of multiple inputs are acceptable. For more details and examples please see the manual. \nIt's sufficient and recommended to use LTRharvest and LTR_FINDER results for LTR_retriever. However, if you want to analyze results from LTR_STRUC, MGEScan 3.0.0, and LtrDetector, you can use the following scripts to convert their outputs to the LTRharvest format, then feed LTR_retriever with `-inharvest`. You may concatenate multiple LTRharvest format inputs into one file. For instructions, run: \n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8649466530886533,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "The output of LTR_retriever includes:\n1. Intact LTR-RTs with coordinate and structural information\n\t- Summary tables (.pass.list)\n\t- GFF3 format output (.pass.list.gff3)\n2. LTR-RT library\n\t- All non-redundant LTR-RTs (.LTRlib.fa)\n\t- All non-TGCA LTR-RTs (.nmtf.LTRlib.fa)\n\t- All LTR-RTs with redundancy (.LTRlib.redundant.fa)\n3. Whole-genome LTR-RT annotation by the non-redundant library\n\t- GFF format output (.out.gff)\n\t- LTR family summary (.out.fam.size.list)\n\t- LTR superfamily summary (.out.superfam.size.list)\n\t- LTR distribution on each chromosome (.out.LTR.distribution.txt)\n4. LTR Assembly Index (.out.LAI) \n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oushujun/LTR_retriever/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oushujun/LTR_retriever"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "LTR_retriever is installation-free but requires dependencies: TRF, BLAST+, BLAST or CD-HIT, HMMER, RepeatMasker, and TEsorter. You may specify the path to these programs in the command line (run `LTR_retriever -h` for details) or install them in the following ways:\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick installation using conda",
        "parent_header": [
          "Table of Contents",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Direct installation using the yml file:\n\n\tconda env create -f /your_path_to/LTR_retriever/LTR_retriever.yml\n\nAlternatively, you may use the conda recipe, but due to the large number of dependencies, conda solve may take hours... Unfortunately, the conda recipe currently could not be installed properly with `mamba`.\n\n\tconda install -c bioconda -c conda-forge ltr_retriever\n\n<details>\n<summary>Step by step installation using conda</summary>\nYou may use conda to quickly install all dependencies and LTR_retriever is then good to go:\n\n\tconda create -n LTR_retriever\n\tconda activate LTR_retriever\n\tconda install -y -c conda-forge perl perl-text-soundex libstdcxx-ng\n\tconda install -y -c bioconda cd-hit 'repeatmasker <4.1.5' rmblast tesorter\n\tgit clone https://github.com/oushujun/LTR_retriever.git\n\t./LTR_retriever/LTR_retriever -h\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Standard installation",
        "parent_header": [
          "Table of Contents",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can also provide the fixed paths to the following dependent programs.\n1. makeblastdb, blastn, and blastx in [the BLAST+ package](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/),\n2. cd-hit-est in [the CDHIT package](http://weizhongli-lab.org/cd-hit/) OR \n   blastclust in [the BLAST package](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.2.25/),\n3. hmmsearch in [the HMMER package](http://hmmer.org/) (v3.1b2 or higher),\n4. [RepeatMasker](http://www.repeatmasker.org/), and \n5. [TEsorter](https://github.com/zhangrengang/TEsorter).\n\nSimply modify the 'paths' file in the LTR_retriever directory\n\n\tvi /your_path_to/LTR_retriever/paths\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9832894336603166,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": "It's sufficient and recommended to use LTRharvest and LTR_FINDER results for LTR_retriever. However, if you want to analyze results from LTR_STRUC, MGEScan 3.0.0, and LtrDetector, you can use the following scripts to convert their outputs to the LTRharvest format, then feed LTR_retriever with `-inharvest`. You may concatenate multiple LTRharvest format inputs into one file. For instructions, run: \n\tperl /your_path_to/LTR_retriever/bin/convert_ltr_struc.pl\n\tperl /your_path_to/LTR_retriever/bin/convert_MGEScan3.0.pl\n\tperl /your_path_to/LTR_retriever/bin/convert_ltrdetector.pl \n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genome-annotation, genome-assembly, lai, ltr-retriever, ltr-retrotransposons"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LTR_retriever"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "oushujun"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 210263,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1194,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2024-08-16T20:32:02Z",
        "date_published": "2024-08-16T20:58:28Z",
        "description": "### New feature\r\nAdd the `-stop` parameter to stop the program after a user-specified step. For example, if you only want to obtain the `.defalse` and `.pass.list` files, you can stop the program after the Major filtering step (i.e., `-stop major`). By default, it will finish the full pipeline.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v3.0.1",
        "name": "v3.0.1 release",
        "release_id": 170666959,
        "tag": "v3.0.1",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/170666959",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/170666959",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2024-08-13T16:22:12Z",
        "date_published": "2024-08-13T16:27:19Z",
        "description": "### Bug fix\r\n1. Update get_range.pl: fix the sequnce ID recognition issue for LTRharvest inputs #177 \r\n2. Make sure candidates have sufficient flanking sequence to extend (50bp)\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v3.0.0",
        "name": "v3.0.0 update",
        "release_id": 170012352,
        "tag": "v3.0.0",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/170012352",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/170012352",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2024-01-07T06:03:19Z",
        "date_published": "2024-01-08T04:40:39Z",
        "description": "### New feature\r\n#### Enable strand-aware outputs\r\nFor LTR candidates found in the negative strand, the locus presentation is now 5' -> 3', similar to candidates found in the positive strand. For example, `Chr1:7890..3456` suggests the candidate is on the - strand. This information is shown in the first column of the `pass.list`, the last column of the `gff3` file, and the sequence names of the `intact.fa` file. If the element is on the - strand, its sequence in the `intact.fa` file will be shown as 5' -> 3' from the negative strand. For example, `Chr1:7890..3456`'s sequence will be a reverse complement to `Chr1:3456..7890`'s sequence. For candidates without strand information (i.e., lack of coding sequence), their strangeness will be assumed positive for convenience.\r\n\r\n### Bug fix\r\n1. Ensure candidates have sufficient flanking sequences to extend (default 50bp), which is necessary for LTR_retriever to determine whether the candidate is true or false. Candidates that can't satisfy this criterion will be skipped. Such a scenario is mostly likely found in fragmented genomes. Bug report: https://github.com/oushujun/EDTA/issues/263",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.9.9",
        "name": "v2.9.9 update",
        "release_id": 136127656,
        "tag": "v2.9.9",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.9.9",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/136127656",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/136127656",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.9.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2023-12-28T01:01:20Z",
        "date_published": "2023-12-28T03:06:58Z",
        "description": "### New features\r\n1. Use the same LTR name for parts of INT and LTR from the same element in preparation for solving @EDTA#251\r\n2. Add the yml file for conda installation\r\n\r\n### Bug fix\r\nUpdate get_range.pl\r\n  1. A bug introduced in Aug, 2023 (# a375c5e) that will output all candidates (both LTR retrotransposons and not LTR repeats) for generating the library file. You will see non-LTR sequences in the library due to this bug (eg., LTR/EnSpm-CACTA). Now it's fixed.\r\n  2. A bug introduced in May, 2023 (#https://github.com/oushujun/LTR_retriever/commit/058ce29b5dd88a38e556e586b0317dc43af6ba13) that fails to remove masked sequences in the final library. Now it's fixed.\r\n  3. Remove the RepeatMasker support to simplify the code since this functionality is never used in the official release.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.9.8",
        "name": "v2.9.8 update",
        "release_id": 135235210,
        "tag": "v2.9.8",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/135235210",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/135235210",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2023-07-11T05:25:20Z",
        "date_published": "2023-07-11T05:27:55Z",
        "description": "Fix bug #153 in v2.9.4 when introducing TEsorter to classify LTR candidates.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.9.5",
        "name": "Bug fix",
        "release_id": 111737905,
        "tag": "v2.9.5",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/111737905",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/111737905",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2023-05-08T19:23:53Z",
        "date_published": "2023-05-08T20:03:26Z",
        "description": "## Major Updates\r\n1. Add [TEsorter](https://github.com/zhangrengang/TEsorter) to help to identify not LTR sequences. Candidate LTRs will be determined as \"false\" if they contain not-LTR HMM profile matches even the candidate contains LTR/TSD and the TGCA motif. This purging will remove a small number of structurally intact LTR candidates (5/2304 in rice). This implementation offers slight improvements over older versions and should be more significant for larger genomes.\r\n\r\n      LTR_retriever-harvest_FINDER | sens | spec | accu | prec | FDR | F1\r\n      -- | -- | -- | -- | -- | -- | --\r\n      retriever_v2.5 | 0.967 | 0.920 | 0.931 | 0.789 | 0.211 | 0.869\r\n      retriever_v2.6 | 0.963 | 0.931 | 0.939 | 0.811 | 0.189 | 0.881\r\n      retriever_v2.9.2 | 0.966 | 0.926 | 0.935 | 0.802 | 0.198 | 0.876\r\n      retriever_v2.9.4 | 0.967 | 0.928 | 0.937 | 0.804 | 0.196 | 0.878\r\n\r\n3. Add more filtering parameters to identify solo LTRs, improve the solo-intact ratio calculation (#111, #110).\r\n4. Resolve RMblast errors when it attempts to overutilize CPUs #137\r\n\r\n## Other improvements\r\n1. Now require sequence IDs for 13 characters or less to accomodate for huge chromosomes up to 999Mb in length.\r\n2. Add missing TRF parameter (#133)\r\n3. Add check to ensure the input genome is writable (LTR_retriever won't overwrite your genome) (#125).\r\n5. Remove gap length for genome size calculation.\r\n\r\n## Acknowledgements\r\n[Andreas Wallberg](https://github.com/andreaswallberg), @shokusei, [Evan Ernst](https://github.com/eernst), @xie-wei-hh, @with9, and users like YOU!",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.9.4",
        "name": "It just gets better with community efforts!",
        "release_id": 102260369,
        "tag": "v2.9.4",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/102260369",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/102260369",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2020-07-28T18:07:32Z",
        "date_published": "2020-07-28T18:18:20Z",
        "description": "## Major updates\r\nThis version has many improvements in the downstream outputs including:\r\n1. standardized the GFF3 output following [these criteria](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md) and used the [updated TE-related sequence ontologies](https://github.com/The-Sequence-Ontology/SO-Ontologies/issues/488)\r\n2. combined structural and homological LTR annotations. Homology-based LTR fragments will be replaced by structural-based LTR annotations wherever applicable.\r\n\r\n## Other improvements\r\n1. allow users to provide paths to dependencies in the command-line.\r\n2. updated readme\r\n3. fixed a number of minor bugs.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.9.0",
        "name": "Version 2.9.0: Polishing outputs",
        "release_id": 29041682,
        "tag": "v2.9.0",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/29041682",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/29041682",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2020-05-20T22:05:40Z",
        "date_published": "2020-05-20T22:12:40Z",
        "description": "1. Reformat the GFF3 output of intact and whole-genome LTR sequences following the standard GFF3 [guideline](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md).\r\n\r\n2. Change to use the `env` default `Perl` and make shebang lines more consistent. #68\r\n\r\n3. Fix inconsistent total LTR summary. #66\r\n\r\n4. Remove precompiled `trf` in the package.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.8.7",
        "name": "Reformat GFF3 outputs",
        "release_id": 26737217,
        "tag": "v2.8.7",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.8.7",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/26737217",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/26737217",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.8.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2019-12-04T06:18:11Z",
        "date_published": "2019-12-04T17:44:46Z",
        "description": "### Major update\r\nI recently identified a bug for dropping intact LTR elements, which have an imbalance LTR length > 15bp due to InDels. After manual checks, I determined these are still high-quality intact elements and thus salvage them in the output. This will marginally improve the sensitivity especially for genomes with limited LTR sequences (e.g. Arabidopsis, ~7%) and the margin decreases for those with decent amounts of LTRs, such as rice (~25%) and maize (~75%), because the abundance of intact elements has been sufficient to construct a comprehensive library. However, the number of intact LTR elements could increase for 10-20% comparing to the last version (v2.7), which has some positive effects on the calculation of LAI. Some benchmarking results:\r\n\r\n\r\nArabidopsis   (TAIR10) | v1.x | v2.0 | v2.8\r\n-- | -- | -- | --\r\nSensitivity | 90.70% | 90.90% | 95.04%\r\nSpecificity | 99.00% | 99.00% | 98.88%\r\nAccuracy | 98.50% | 98.50% | 98.64%\r\nPrecision | 86.60% | 86.50% | 84.99%\r\n\r\n\r\nRice   (MSUv7) | v1.x | v2.0 | v2.5 | v2.8\r\n-- | -- | -- | -- | --\r\nSensitivity | 95.00% | 95.30% | 96.30% | 96.71%\r\nSpecificity | 95.00% | 94.60% | 94.00% | 93.87%\r\nAccuracy | 95.00% | 94.80% | 94.50% | 94.54%\r\nPrecision | 85.40% | 84.50% | 83.10% | 83.09%\r\n\r\n### Minor updates\r\n1. Allow for mirrored candidates produced by LTRharvest\r\n2. Improve the convert_ltrdetector.pl for the published version (v1.0) of LtrDetector (contributed by @baozg)\r\n3. Add a convertor convert_ltr_finder2.pl to convert LTR_FINDER -w 2 table format into LTRharvest screen output format\r\n4. For LAI, allow the -all file to contain other TEs (i.e., whole-genome TE annotation)\r\n\r\n\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.8",
        "name": "Recovering 10-20% more intact LTR elements",
        "release_id": 21971271,
        "tag": "v2.8",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/21971271",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/21971271",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2019-09-15T20:37:31Z",
        "date_published": "2019-09-15T21:48:43Z",
        "description": "### Major improvement\r\nI am excited to release this much faster version of LTR_retriever. Its multithreading module has been slowing down the program and I finally get the chance to improve it. This part of the update will not change the program outcome since this is just a more efficient implementation of parallel computation.\r\n\r\nWith the test on the **14.5 Gb bread wheat genome**, a total of 941,338 LTR raw candidates were processed and a non-redundant library was generated. This process only took **8 days 3 hours and 31 minutes** for the current version (v2.7) with 10 threads (`-threads 10`), which would have required 3 weeks for the last version (v2.6).\r\n\r\n### Minor changes\r\n\r\n1. Classification of *Copia* elements was improved to be more sensitive (#51)\r\n2. Print out the program version number on screen.\r\n3. Improved genome and sequence reading.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.7",
        "name": "Releasing a 100% faster version",
        "release_id": 20000973,
        "tag": "v2.7",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/20000973",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/20000973",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2019-05-09T17:13:37Z",
        "date_published": "2019-05-09T17:16:28Z",
        "description": "### **Support three more LTR programs!**\r\nThree more programs are supported by `LTR_retriever`:\r\n * [LTR_STRUC](http://www.mcdonaldlab.biology.gatech.edu/ltr_struc.htm)\r\n * [MGEScan 3.0.0 (Galaxy version)](https://github.com/MGEScan/mgescan)\r\n * [LtrDetector](https://github.com/TulsaBioinformaticsToolsmith/LtrDetector)\r\n\r\nUsers need to convert candidates identified by these programs into the `LTRharvest` format with scripts located in the `/bin` folder:\r\n * `convert_ltr_struc.pl`\r\n * `convert_MGEScan3.0.pl`\r\n * `convert_ltrdetector.pl`\r\n\r\nThen feed them to `LTR_retriever` with `-inharvest`. You may concatenate multiple `LTRharvest` format input files together. \r\n\r\n**Note**: You won't find a lot of intact LTR elements from `LTR_STRUC` and `LtrDetector` outputs due to the fuzzy sequence boundaries these programs provided. So please use these two as supplements to other inputs.\r\n\r\n### **Minor bug fix**\r\n1. Fix the bug that would count 1 extra bit for sequence names\r\n2. Maintain codes for solo LTR identification and solo-intact ratio calculations: `bin/solo_finder.pl` and `bin/intact_finder_coarse.pl` (#41) \r\n3. Format sequence names in the redundant library output\r\n4. Add detailed notes to fix the conda RepeatMasker issue. Notes can be found here: #43",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.6",
        "name": "Add support to LTR_STRUC, MGEScan 3.0.0, and LtrDetector!",
        "release_id": 17256347,
        "tag": "v2.6",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/17256347",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/17256347",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2019-03-27T04:08:09Z",
        "date_published": "2019-03-27T04:48:50Z",
        "description": "### **Checkpointing is implemented!**\r\nUsers can recover interrupted runs from a number of major checkpoints. This is particularly useful when running LTR_retriever on huge genomes (i.e., common wheat) and got interrupted (for example, the job is killed due to walltime limit). Use `LTR_retriever -h` for further information.\r\n\r\n### **Remove nesting of entire LTR elements in library** ###\r\nPrevious versions would remove nested insertion of solo LTRs. However, when a full element is nested in a library sequence, the internal region of the nesting element won't be removed, causing sequence mosaics and library redundancy. In this update, a new module is developed to clean up composite sequences caused by full-element nesting. This update was inspired by Mr. [Robert Hubley](https://github.com/rmhubley)'s report.\r\n\r\n**The current version has a slight decrease of accuracy with a marginal gain of sensitivity.** This is likely due to the removal of nesting sequences that may have slightly shifted the annotation dynamic of RepeatMasker. Nevertheless, there is no extra sequence added in this process, but removes up to 60% of library sequences (i.e., in common wheat) that are redundant due to nested full-element insertions.\r\n\r\n| Rice (MSUv7) | v1.x | v2.0 | v2.5 |\r\n| --- | --- | --- | --- |\r\n| Sensitivity | 95.0% | 95.3% | 96.3% |\r\n| Specificity | 95.0% | 94.6% | 94.0% |\r\n| Accuracy | 95.0% | 94.8% | 94.5% |\r\n| Precision | 85.4% | 84.5% | 83.1% |\r\n\r\n### **Other updates** ###\r\n1. Update README, no longer supports MGEScan_LTR due to the inability to run it on modern Linux platforms.\r\n2. Add an easy way (conda) to install dependencies.\r\n3. Fix a bug occurred when chromosome names are pure numbers.\r\n4. Improve the estimation of LTR age. Previous versions included InDels for divergence estimation, which would result in overestimation of LTR age. This version will only use SNPs, no indels, to compute LTR divergence and age.\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.5",
        "name": "Implement Checkpointing, improve nested insertion removal, and more!",
        "release_id": 16373143,
        "tag": "v2.5",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/16373143",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/16373143",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2018-12-09T00:52:41Z",
        "date_published": "2018-12-09T06:08:57Z",
        "description": "### **This version has fixed a couple minor bugs reported previously** (i.e., #6, #7, #26, #28, #29).\r\nIn particular,\r\n1. Fix the bug 'substr sequences out of range' when the candidate locates at the boundary of a contig.\r\n2. Fix the bug for sometimes producing slightly different results when using both LTRharvest and LTR_FINDER inputs.\r\n3. Fix the bug for bias to identify TGCA motifs over non-TGCA motifs and improved TSD identification.\r\n4. Improve detection/filtering sensitivity for LINE/DNA transposases and plant proteins.\r\n5. Remove short sequences (<100bp) in the final library.\r\n6. Update README and citations.\r\n\r\n### The v2.0 LTR_retriever has similar high performance comparing to v1.x versions.\r\n\r\n| Rice (MSUv7) | v1.x | v2.0 |\r\n| --- | --- | --- |\r\n| Sensitivity | 95.0% | 95.3% |\r\n| Specificity | 95.0% | 94.6% |\r\n| Accuracy | 95.0% | 94.8% |\r\n| Precision | 85.4% | 84.5% |\r\n\r\n| Arabidopsis (TAIR10) | v1.x | v2.0 |\r\n| --- | --- | --- |\r\n| Sensitivity | 90.7% | 90.9% |\r\n| Specificity | 99.0% | 99.0% |\r\n| Accuracy | 98.5% | 98.5% |\r\n| Precision | 86.6% | 86.5% |\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v2.0",
        "name": "Improved TSD-motif identification",
        "release_id": 14426913,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/14426913",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/14426913",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2018-06-19T15:48:45Z",
        "date_published": "2018-06-19T16:12:14Z",
        "description": "# LTR_retriever\r\n## New features\r\n1. Add LTR_digest support\r\n   * The *pass.list.gff3 becomes readable to LTR_digest.\r\n   * You can also use /LTR_retriever/database/TEfam.hmm to feed LTR_digest.\r\n2. Improved gff3 output for intact LTR-RTs\r\n   * Add strand info for each elements. \r\n   * The ones with '?' (unknown direction) in the *pass.list will remain '?'s in the *pass.list.gff3 file.\r\n3. Improve multi-threading efficiency\r\n   * Use the *Thread::Queue* module to replace the *Thread::Semaphore* module\r\n   * At least 100% more efficient\r\n4. Add Mac OsX support (High Sierra v10.13.3 tested)\r\n5. Add a script to summarize the genome % of each TE families using RepeatMasker .out files\r\n   * Usage: `perl ./LTR_retriever/bin/fam_coverage.pl TE_lib RM_output genome_size_bp > TE_fam.size.list`\r\n   * Not only works with LTRs but also other TEs in the RM.out file.\r\n6. Add a script to summarize the genome % of each TE superfamilies (**TE summary table for genome publications**)\r\n   * Usage: `perl ./LTR_retriever/bin/fam_summary.pl TE_fam.size.list genome_size_bp > TE_fam.sum.txt`\r\n   * Summary tables for LTR families and superfamilies are added to the output of LTR_retriever\r\n7. Add a script to calculate LTR distribution (Copia, Gyspy, and unknow) on chromosomes.\r\n   * Usage: `perl ./LTR_retriever/bin/LTR_sum.pl -genome genome.fa -all genome.fa.RM.out [options]`\r\n   * Options: \r\n\t*-window [int]  bp size of the sliding window, default 3,000,000\r\n\t-step [int]        bp size of the moving step, defalut 300,000\r\n\t-intact             indicate the -all file is an LTR_retriever .pass.list instead of a RepeatMasker .out file*\r\n   * The .out.LTR.distribution.txt file is generated by default.\r\n8. Add a script for whole-genome forward simulation (randomly add mutations on the genome)\r\n   * Usage: `perl ./LTR_retriever/bin/simulate_mutation.pl -g genome.fasta -u [0-1] > genome.mutated.fasta`\r\n   * *-u* specifis the mutation rate. i.e., *-u 0.01* will randomly mutate 1% of the entire genome.\r\n9. Replace annotate_gff.pl with make_gff3_with_RMout.pl for better whole-genome LTR-RT annotation\r\n   * Usage: `perl ./LTR_retriever/bin/make_gff3.pl genome.fa.RepeatMasker.out > genome.fa.RepeatMasker.gff`\r\n   * Applied basic hit filtering: SW_score>=300, alignment length >= 80 bp\r\n10. Add more usage information to *-h*\r\n11. Update README\r\n\r\n## Bug fixed\r\n1. Program halt when nothing is masked in truncated candidates.\r\n2. Program halt when multiple LTR_retriever tasks simutainously check RepeatMasker in the same directory\r\n3. *substr* sequences out of range when self-corrected reads are used as input\r\n\r\n\r\n# LAI Version b2\r\n1. Rewrite LTR_calc.pl with more accurate and efficient algorithms. \r\n   * Add the *-step* parameter for overlapping-sliding window scheme to estimate LAI\r\n   * Output the size of the genome for genome LAI\r\n   * Memory consumption of this scrip is approx. 2X the size of the input genome\r\n2. **To control the boom and bust dynamic of LTR-RTs, adjust the raw LAI based on LTR identity.**\r\n   * Estimate mean identity of LTR sequences in a genome using all-versus-all blastn search\r\n   * Add a quick estimation (*-q*) of genomic LTR identity based on a log-linear model with the slope estimated from three small subsets of LTRs\r\n   * To avoid abnormal adjustment, if estimated LTR identity <= 92% or >= 96%, then corrected it to 92% or 96%, respectively\r\n   * Use the *-unlock* parameter to release the restriction of LTR identity ([92, 96]) for good genomes with extreme LTR activities\r\n   * Set LAI_adj=0 if raw LAI==0\r\n   * The alignment identity cutoff (*-iden*) can excludes hits higher than this value for LTR identity calculation. Default: 100 (%)\r\n3. **Change the output naming of LAI to raw_LAI and LAI_adj to LAI for easier description.**\r\n4. **Add polyploid support.** \r\n   * If the input genome is a polypoid (diploidized ancient polypoid does not count), then only a set of chromosomes (1x, a monoploid) should be used to estimate LAI, otherwise the LTR identity will be erroneously estimated to a very high value and substantially decrease the LAI.\r\n   * Use the *-mono* parameter to provide a list of chromosome names of a monoploid, LAI will be calculated only on these sequences.\r\n   * Users can run LAI multiple times with different monoploids specified to obtain the whole genome LAI estimation.\r\n5. Set prerequisites of LAI estimation\r\n   * set intact LTR-RT limit >= 0.01%; \r\n   * set total LTR limit >= 5%\r\n6. Add the *-totLTR* parameter for customized total LTR content; \r\n7. Add the *-window* parameter to control window size\r\n8. Add the rush mode (*-qq*) to quickly estimate raw LAI for version comparison. Raw LAI should not be used to compare between different species because the LTR dynamic is not controlled.\r\n9. Add status output of the LAI program. **LAI is a default output of LTR_retriever.** You should rerun LAI with the *-mono* parameter if the target genome is a polyploid.\r\n10. Add Mac OsX support (High Sierra v10.13.3 tested).\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.9",
        "name": "Major updates for LTR_retriever and LAI",
        "release_id": 11551138,
        "tag": "v1.9",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/11551138",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/11551138",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2018-01-07T17:35:04Z",
        "date_published": "2018-01-07T18:19:36Z",
        "description": "**New features**\r\n1. Add the citation for LTR_retriever. Please cite our program: **S. Ou and N. Jiang (2017)** LTR_retriever: a highly accurate and sensitive program for identification of long terminal-repeat retrotransposons. **Plant Physiology**, pp.01310.2017; DOI: 10.1104/pp.17.01310 http://www.plantphysiol.org/content/early/2017/12/12/pp.17.01310\r\n2. Retain the unreduced library (*.LTRlib.redundant.fa). Please use the non-redundant library if you don't have a specific reason. Note that using unreduced library may not improve the annotation sensitivity, if any, it's marginal but will take significantly more time.\r\n3. Remove the entire candidate if plant protein sequence is found dominant (70%) in either the LTR region or the internal region. \r\n4. Add module # in the status output.\r\n\r\n**Bug fixed**\r\n1. Remove space(s) at the end of each seq ID to avoid error;\r\n2. Check if seq names are duplicated;\r\n3. Fix bugs in reading the window size parameter for LAI;\r\n4. Fix a bug in program halt when nothing is masked in truncated candidates.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.6",
        "name": "Paper published!",
        "release_id": 9137950,
        "tag": "v1.6",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/9137950",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/9137950",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2018-01-07T17:35:04Z",
        "date_published": "2018-01-07T18:03:00Z",
        "description": "**New feature:** The LTR-RT Assembly Index (LAI) for evaluation of genome assembly continuity\r\n**Description:** LTR retrotransposon is very difficult to assemble due to their repetitive nature (up to 75% of a genome, i.e., maize) and long length (up to 20 Kb long). A very simple idea that more intact LTR-RT could be found in the more continuous genome provides the theoretical support of LAI. This module is using the list of intact LTR-RT and the whole-genome annotation of LTR-RT produced by LTR_retriever (*.pass.list and *.out, respectively) for calculation of LAI. A window-based calculation is implemented for estimation of regional continuity. A manuscript describing this feature is in preparation.\r\n\r\n**Other feathers:**\r\n1. improved purging criteria. Introduce the identity cutoff for alignment hits (>=30%), change the alignment length criteria to the identity-length criteria: identity-length = alignment length - mismatch >=90 for a real hit.\r\n2. add scripts to identify solo LTR and complete LTR, and to estimate solo-complete ratio for each family, and count family size in the genome. These codes were initially developed for this study: https://www.nature.com/articles/s41467-017-02546-5\r\n3. Control the length of internal regions (>=100 bp) on LTR candidates.\r\n4. Updated the manual\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.5",
        "name": "Introduce LAI to LTR_retriever for measurement of genome assembly continuity",
        "release_id": 9137877,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/9137877",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/9137877",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2017-07-18T15:55:04Z",
        "date_published": "2017-07-18T16:17:02Z",
        "description": "# New features:\r\n1. Introduce fingerprints for databases to avoid accidentally deleting these files (especially when running multiple LTR_retrievers in the same folder. e.g., #2 ). In other words, **you can run multiple LTR_retriever in the same folder now**.\r\n2. Add warnings if specified file(s) not exist.\r\n3. Update license to GNU-GPL v3, aka., LTR_retriever is an open source software.\r\n\r\n# Bug fixed\r\nProvide a workaround for the blast bug (described in v1.3 and #4 #3 ) occurred under high CPU usage or resource over-allocation. Each blast attempt will be checked and will be redone for up to 100 times if encounter error status. This is not a total fix but at least there should be no more such errors.\r\n\r\n\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.4",
        "name": "Workaround the BLAST bug",
        "release_id": 7081518,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/7081518",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/7081518",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2017-06-08T21:04:32Z",
        "date_published": "2017-06-08T21:36:47Z",
        "description": "Several bugs have been reported since the last release. Most of them were fixed in this release.\r\n# **Fixed bugs**\r\n1. Sorting a list of sequence coordinate failed when special characters occurred.\r\n2. RepeatMasker ran incorrectly if it was installed using HMMER as the default search engine. Added a checking procedure to make sure the blast+ engine is available. Reinstall RepeatMasker is needed if user receives similar errors.\r\n3. Copy the database files to the working directory instead of working in the installed directory to avoid write error.\r\n4. Update the Manual. I didn't realize it was a commented version.\r\n5. Further steps were halted when there was no coding sequence contamination needed to be cleaned. \r\n6. Tested lowest dependency versions:\r\n* CDHIT/4.5.6 or up\r\n* BLAST+/2.2.25 or up\r\n* RepeatMasker/3.3.0 or up\r\n* HMMER/3.1b1 or up\r\n\r\n# **Unfixed bug**\r\n_BLAST engine error: Warning: Sequence contains no data_ \r\nor \r\n_Warning: [blastn] Subject_1 chr:from..to|chr:from..to: Subject sequence contians no data_\r\n\r\nSome candidate sequences were appeared to be empty when analyzing sequence structures. This could happen when more CPUs were allocated to the program than what the system could provide. Some users said it also occurred even plenty of CPUs were available. So far I could not reproduce the second situation, so I don't know how to fix it.\r\nGood news is that this kind of LTR candidates are usually problematic, which means that they are usually false LTRs and will be screened out anyways. So if you **only** have this kind of errors you should be fine. The results are still reliable.\r\n\r\n\r\n",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.3",
        "name": "Fix several bugs for library construction",
        "release_id": 6654911,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6654911",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6654911",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2017-06-06T22:37:37Z",
        "date_published": "2017-06-06T22:48:04Z",
        "description": "It's strongly suggested that users provide the genome file with short sequence names, i.e., <15 characters. One of the LTR_retriever dependencies, RepeatMasker, has a namespace limit for about 40 characters. As LTR_retriever utilizes the actual coordinate of LTR sequences with RepeatMasker format annotations as the library ID, e.g., Chr1:12345..13545_LTR#LTR/Gypsy, the naming space for chromosome names (i.e., \"Chr1\", not the full library sequence name) drop down to 15-20 characters. To avoid frustrating errors bring by long sequence names, this release added a module to attempt to convert long sequence names to shorter but still unique names automatically. The converted genome will be saved with the ending \".mod\" and the original genome is untouched. This is a workaround in case users forget to do their conversion or don't know how.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.2",
        "name": "Convert sequence names longer than 15 characters",
        "release_id": 6625301,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6625301",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6625301",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oushujun",
          "type": "User"
        },
        "date_created": "2017-05-31T00:15:41Z",
        "date_published": "2017-05-31T00:17:57Z",
        "description": "This version provides more detailed stdout with timestamps. The timestamps will help users to keep track of their progress, and the stdout will help to debug. If there is any error message printed to stdout, please copy the adjacent timestamps with the error msg embedded in the middle and paste to a new issue. This kind of information will help to quickly pinpoint the problem.",
        "html_url": "https://github.com/oushujun/LTR_retriever/releases/tag/v1.1",
        "name": "Provide user friendly stdout with timestamps",
        "release_id": 6551845,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/oushujun/LTR_retriever/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6551845",
        "value": "https://api.github.com/repos/oushujun/LTR_retriever/releases/6551845",
        "zipball_url": "https://api.github.com/repos/oushujun/LTR_retriever/zipball/v1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:31:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 187
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "Best practice: It's highly recommended to use short and simple sequence names. For example, use letters, numbers, and _ to generate unique names shorter than 15 bits. If there are long sequence names, LTR_retriever will try to convert it for you, but not always successful.\n\nTo obtain raw input files with LTRharvest and LTR_FINDER_parallel:\n\n\t/your_path_to/gt suffixerator -db genome.fa -indexname genome.fa -tis -suf -lcp -des -ssp -sds -dna\n\t/your_path_to/gt ltrharvest -index genome.fa -minlenltr 100 -maxlenltr 7000 -mintsd 4 -maxtsd 6 -motif TGCA -motifmis 1 -similar 85 -vic 10 -seed 20 -seqids yes > genome.fa.harvest.scn\n\t/your_path_to/LTR_FINDER_parallel -seq genome.fa -threads 10 -harvest_out -size 1000000 -time 300\n\tcat genome.fa.harvest.scn genome.fa.finder.combine.scn > genome.fa.rawLTR.scn\n\nTo run LTR_retriever:\n\n\t/your_path_to/LTR_retriever -genome genome.fa -inharvest genome.fa.rawLTR.scn -threads 10 [options]\n\nTo run LAI:\n\n\t/your_path_to/LAI -genome genome.fa -intact genome.fa.pass.list -all genome.fa.out [options]\n\nFor more details about the usage and parameter settings, please see the help pages by running:\n\n\t/your_path_to/LTR_retriever -h\n\n\t/your_path_to/LAI -h\n\t\nOr refer to the manual document.\n\n\nFor questions and Issues please see: https://github.com/oushujun/LTR_retriever/issues\n\n"
      },
      "source": "https://raw.githubusercontent.com/oushujun/LTR_retriever/master/README.md",
      "technique": "header_analysis"
    }
  ]
}