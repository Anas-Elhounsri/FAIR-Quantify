{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite:",
        "type": "Text_excerpt",
        "value": "Bo Wen, Eric J Jaehnig, Bing Zhang. [OmicsEV: a tool for comprehensive quality evaluation of omics data tables](https://doi.org/10.1093/bioinformatics/btac698). *Bioinformatics*, btac698, 2022.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bzhanglab/OmicsEV"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-02T17:55:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-10T22:16:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool for large scale omics datasets evaluation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8347913558935558,
      "result": {
        "original_header": "<a href=\"https://doi.org/10.1093/bioinformatics/btac698\">OmicsEV</a>",
        "type": "Text_excerpt",
        "value": "\nA tool for large scale omics data tables evaluation \n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/bzhanglab/OmicsEV/wiki"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bzhanglab/OmicsEV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bzhanglab/OmicsEV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bzhanglab/OmicsEV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Install OmicsEV using Docker:\n```sh\ndocker pull proteomics/omicsev\n```\n\nIf [Docker Engine](https://docs.docker.com/engine/) is not installed, please first install Docker Engine following the instruction at https://docs.docker.com/engine/install/. If [Docker Engine](https://docs.docker.com/engine/) is already installed, the OmicsEV docker can be installed using the above command line.\n\nUse OmicsEV in docker:\n```sh\n# change the path your_data_path to a real path\ndocker run -it -v /your_data_path/:/opt/ -u $(id -u):$(id -g) proteomics/omicsev\n# then lauch R \nR\n```\n\nPlease put all the input data files for OmicsEV under a folder (for example: /your_data_path/, this can be any folder with write permission) and use parameter -v to map this folder to the Docker container directory \"/opt/\" (-v /your_data_path/:/opt/, don't change /opt/ part) so that all the input data files can be accessed inside OmicsEV docker. After lauching R in OmicsEV docker using above code, users can then use the OmicsEV functions to perform analysis. A few examples can be found below.\n\nIt requires a basic understanding of docker to use OmicsEV inside docker: https://www.docker.com/get-started/.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bzhanglab/OmicsEV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/gh-pages/data/OmicsEV_overview.jpeg"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OmicsEV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bzhanglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 109916,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 312,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:16:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Please follow the instruction in website *[https://bzhanglab.github.io/OmicsEV/](https://bzhanglab.github.io/OmicsEV/)*\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1: evaluate RNA-Seq data tables generated using different normalization methods",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The RNA-Seq data is from TCGA-BRCA project. A total of six different data tables were generated using different normalization methods. A proteomics data table is available and it was generated from the same samples. Below is the R code to run the evaluation using OmicsEV. \n\n```r\nlibrary(OmicsEV)\nrun_omics_evaluation(data_dir = \"datasets/\",\n                     sample_list = \"sample_list.tsv\",\n                     x2 = \"protein.tsv\",\n                     x2_label = \"Protein\",\n                     cpu=0,\n                     use_existing_data=TRUE,\n                     data_type=\"gene\",\n                     class_for_ml=\"sample_ml.tsv\")\n```\nPlease download the input files for above code at [RNA_seq_6_datasets.tar.gz](https://github.com/bzhanglab/OmicsEV/raw/gh-pages/data/RNA_seq_6_datasets.tar.gz). It contains the following files:\n\n```shell\n\u251c\u2500\u2500 datasets\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 d1.tsv\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 d2.tsv\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 d3.tsv\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 d4.tsv\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 d5.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 d6.tsv\n\u251c\u2500\u2500 protein.tsv\n\u251c\u2500\u2500 run_OmicsEV.R\n\u251c\u2500\u2500 sample_list.tsv\n\u2514\u2500\u2500 sample_ml.tsv\n```\n\nThe HTML report generated using above code is available at [OmicsEV report](https://bzhanglab.github.io/OmicsEV/data/rna-seq-example_report.html).\n\nThis example takes about 2 hours and 40 minutes on a Linux system with 64 CPUs and 256G memory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2: evaluate proteomics data tables generated using different pipelines",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The proteomics data is from CPTAC Breast project. A total of three different data tables were generated using different pipelines. An RNA-Seq data table is available and it was generated from the same samples. Below is the R code to run the evaluation using OmicsEV. \n\n```r\nlibrary(OmicsEV)\nrun_omics_evaluation(data_dir = \"datasets_75/\",\n                     sample_list = \"sample_list_v2.tsv\",\n                     x2 = \"rna.tsv\",\n                     cpu=0,\n                     use_existing_data=TRUE,\n                     data_type=\"gene\",\n                     class_for_ml=\"sample_ml.tsv\")\n```\nPlease download the input files for above code at [proteomics_3_datasets.tar.gz](https://github.com/bzhanglab/OmicsEV/raw/gh-pages/data/proteomics_3_datasets.tar.gz). It contains the following files:\n\n```\n\u251c\u2500\u2500 datasets_75\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CDAP.tsv\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 MQ_ratio.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 paper.tsv\n\u251c\u2500\u2500 rna.tsv\n\u251c\u2500\u2500 run_OmicsEV.R\n\u251c\u2500\u2500 sample_list_v2.tsv\n\u2514\u2500\u2500 sample_ml.tsv\n```\n\nThe HTML report generated using above code is available at [OmicsEV report](https://bzhanglab.github.io/OmicsEV/data/proteomics-example_report.html).\n\nThis example takes about one hour on a Linux system with 64 CPUs and 256G memory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 3: evaluate the data quality of single data table",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The proteomics data is from CPTAC Breast project. A single data table was generated using one pipeline. An RNA-Seq data table is available and it was generated from the same samples. Below is the R code to run the evaluation using OmicsEV. \n\n```r\nlibrary(OmicsEV)\nrun_omics_evaluation(data_dir = \"datasets_75/\",\n                     sample_list = \"sample_list_v2.tsv\",\n                     x2 = \"rna.tsv\",\n                     cpu=0,\n                     use_existing_data=TRUE,\n                     data_type=\"gene\",\n                     class_for_ml=c(\"LumA\",\"LumB\"))\n```\nPlease download the input files for above code at [proteomics_1_dataset.tar.gz](https://github.com/bzhanglab/OmicsEV/raw/gh-pages/data/proteomics_1_dataset.tar.gz). It contains the following files:\n```\n\u251c\u2500\u2500 datasets_75\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 paper.tsv\n\u251c\u2500\u2500 rna.tsv\n\u251c\u2500\u2500 run_OmicsEV.R\n\u251c\u2500\u2500 sample_list_v2.tsv\n\u2514\u2500\u2500 sample_ml.tsv\n```\n\nThe HTML report generated using above code is available at [OmicsEV report](https://bzhanglab.github.io/OmicsEV/data/proteomics-one_dataset-example_report.html).\n\nThis example takes about one hour on a Linux system with 64 CPUs and 256G memory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bzhanglab/OmicsEV/master/README.md",
      "technique": "header_analysis"
    }
  ]
}