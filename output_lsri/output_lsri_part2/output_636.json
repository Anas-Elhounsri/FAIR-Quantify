{
  "application_domain": [
    {
      "confidence": 29.35,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool"
        ],
        "type": "Text_excerpt",
        "value": "If you use MZA please cite: Bilbao et al. \"MZA: a data conversion tool to facilitate software development and artificial intelligence research in multidimensional mass spectrometry\". Journal of Proteome Research 2023 https://doi.org/10.1021/acs.jproteome.2c00313.\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PNNL-m-q/mza"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool"
        ],
        "type": "Text_excerpt",
        "value": "aivett.bilbao@pnnl.gov\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-24T14:12:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T21:45:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Software to convert multidimensional MS data from files in proprietary vendor formats to HDF5 format in the simple MZA data structure."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.992886121707071,
      "result": {
        "original_header": "MZA: mass-to-charge (m/z) generic data storage and access tool",
        "type": "Text_excerpt",
        "value": "Untargeted mass spectrometry (MS)-based workflows incorporating orthogonal separations, such as liquid chromatography (LC) and ion mobility spectrometry (IM), and collecting extensive fragmentation data with data-independent acquisition (DIA) methods or alternative activation techniques, are providing heterogeneous and multidimensional information which allows deeper understanding in omics studies. However, the large volume of these rich multidimensional spectra challenges current MS-data storage and access technologies. The cross-platform and cross-programming language tool, MZA (pronounced m-za), was created to facilitate software development and artificial intelligence research in these kind of multidimensional MS data. \nMZA is a stand-alone and self-contained command-line executable which converts multidimensional MS data from files in proprietary vendor formats to the MZA simple data structure based on the HDF5 format.\nOnce converted, MZA files can be easily accessed from any programming language and operating system using generic HDF5 libraries available (e.g., h5py and rhdf5).\n \n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8772150527306098,
      "result": {
        "original_header": "Input formats supported:",
        "type": "Text_excerpt",
        "value": "* Agilent '.d' (with or without ion mobility)\n* Bruker ion mobility 'd' (improvements in progress, very slow currently)\n* Thermo '.raw'\n* mzML\n \n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Tested on Windows 10. The MZA executable has no requirements, it can be run directly on Windows. Examples:\n\nConvert a single '.d' file:<br />\n```bash\nmza -file test_data\\LowHigh_PC_160_180_frames1-10.d -intensityThreshold 20\n```\n\nConvert all '.d' files in a directory:<br />\n```bash\nmza -file test_data -extension .d -intensityThreshold 20\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix-like operating systems - Using Docker container",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Build the container:\n```bash\ndocker build -t mzacontainer:latest -f docker/Dockerfile .\n```\n\nRun the container:\n```bash\ndocker run -it --rm -e WINEDEBUG=-all -v test_data:/data mzacontainer wine mza.exe -file /data/LCMSMS_Lipids_POS.raw\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix-like operating systems - Using Wine",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Tested on Ubuntu version 22.04.1. For Unix-like operating systems, the MZA executable requires pre-installation of the Wine compatibility layer (www.winehq.org).\n\n1. Install Wine (tested version 6.0.3):\n```bash\nsudo apt-get install wine\n```\n\n2. Download and install wine-mono.msi from the official WineHQ site: https://dl.winehq.org/wine/wine-mono/ (tested version 7.3.0):\n```bash\nwine64 uninstaller\n```\n\n3. Press install from the uninstaller GUI and select the downloaded .msi package. Click ok.\n\nExamples:\n\nConvert a single '.d' file:<br />\n```bash\nwine mza -file test_data\\LowHigh_PC_160_180_frames1-10.d -intensityThreshold 20\n```\n\nConvert all '.d' files in a directory:<br />\n```bash\nwine mza -file test_data -extension .d -intensityThreshold 20\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PNNL-m-q/mza/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PNNL-m-q/mza/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PNNL-m-q/mza"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MZA: mass-to-charge (m/z) generic data storage and access tool"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9779867988421712,
      "result": {
        "original_header": "Optional:",
        "type": "Text_excerpt",
        "value": "* -extension arg: Input file extension. To convert multiple files in a path provide the extension: .mzML, .raw or .d.\n* -intensityThreshold arg: The minimum intensity that must be exceeded for signals to be included in the output mza file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8596521368053208,
      "result": {
        "original_header": "Required",
        "type": "Text_excerpt",
        "value": "* -file arg: The raw MS file to be converted.\n \n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PNNL-m-q/mza/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-conversion, ion-mobility-spectrometry, mass-spectrometry"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright 2022 Battelle Memorial Institute\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License addendum",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool"
        ],
        "type": "Text_excerpt",
        "value": "This software binary and example scripts are freely provided under the BSD License here included. \nHowever, the binary software depends on other software libraries which place further restrictions on its use and redistribution. \nBy using MZA, you agree to comply with the restrictions imposed on you by the license agreements of the software libraries on which it depends:\n* Agilent Technologies Mass Hunter Data Access Component Library (www.agilent.com)\n* Thermo Fisher Scientific MSFileReader Library (www.thermofisher.com)\n* Bruker TDF-SDK data access library (www.bruker.com)\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mza"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PNNL-m-q"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7466,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 621,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 112,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "aivett",
          "type": "User"
        },
        "date_created": "2024-07-15T19:10:39Z",
        "date_published": "2024-07-15T19:20:45Z",
        "description": "* Agilent .d QTOF (i.e. non-ion mobility data) format supported.\r\n* CCS calibration coefficients included as HDF5 dataset if detected in Agilent '.d': CCScalDT = [Tfix, Beta] for DT, and CCScalSLIM = [C0, C1, C2, C3] for SLIM.\r\n* Collision energy added.\r\n* Fixed bug in intensity threshold for mzML and Thermo .raw.\r\n* Bruker .d ion mobility timsTOF supported (improvements in progress, very slow currently).",
        "html_url": "https://github.com/PNNL-m-q/mza/releases/tag/v1",
        "name": "MZA v1 improved ",
        "release_id": 165516881,
        "tag": "v1",
        "tarball_url": "https://api.github.com/repos/PNNL-m-q/mza/tarball/v1",
        "type": "Release",
        "url": "https://api.github.com/repos/PNNL-m-q/mza/releases/165516881",
        "value": "https://api.github.com/repos/PNNL-m-q/mza/releases/165516881",
        "zipball_url": "https://api.github.com/repos/PNNL-m-q/mza/zipball/v1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:26:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Tested on Windows 10. The MZA executable has no requirements, it can be run directly on Windows. Examples:\n\nConvert a single '.d' file:<br />\n```bash\nmza -file test_data\\LowHigh_PC_160_180_frames1-10.d -intensityThreshold 20\n```\n\nConvert all '.d' files in a directory:<br />\n```bash\nmza -file test_data -extension .d -intensityThreshold 20\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix-like operating systems - Using Docker container",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Build the container:\n```bash\ndocker build -t mzacontainer:latest -f docker/Dockerfile .\n```\n\nRun the container:\n```bash\ndocker run -it --rm -e WINEDEBUG=-all -v test_data:/data mzacontainer wine mza.exe -file /data/LCMSMS_Lipids_POS.raw\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix-like operating systems - Using Wine",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool",
          "USAGE: data conversion. Download the latest version (Releases section, right panel) and decompress it."
        ],
        "type": "Text_excerpt",
        "value": "Tested on Ubuntu version 22.04.1. For Unix-like operating systems, the MZA executable requires pre-installation of the Wine compatibility layer (www.winehq.org).\n\n1. Install Wine (tested version 6.0.3):\n```bash\nsudo apt-get install wine\n```\n\n2. Download and install wine-mono.msi from the official WineHQ site: https://dl.winehq.org/wine/wine-mono/ (tested version 7.3.0):\n```bash\nwine64 uninstaller\n```\n\n3. Press install from the uninstaller GUI and select the downloaded .msi package. Click ok.\n\nExamples:\n\nConvert a single '.d' file:<br />\n```bash\nwine mza -file test_data\\LowHigh_PC_160_180_frames1-10.d -intensityThreshold 20\n```\n\nConvert all '.d' files in a directory:<br />\n```bash\nwine mza -file test_data -extension .d -intensityThreshold 20\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "USAGE: data access in .mza files",
        "parent_header": [
          "MZA: mass-to-charge (m/z) generic data storage and access tool"
        ],
        "type": "Text_excerpt",
        "value": "The MZA file structure is simple: a metadata table and two groups with 1D arrays stored individually as HDF5 datasets per spectrum.\n* Metadata (HDF5 dataset): each row in the metadata table (see csv files in test_data) represents a spectrum and the columns represent the properties of the spectrum such as scan number (unique to each spectrum), MS level, activation (i.e., ion fragmentation type), retention time, ion mobility arrival time, etc. \n\nSpectra are stored omitting zero-intensity values and as two jagged arrays, one in each corresponding group and named as the \"Scan\" value in the metadata table:\n* Arrays_intensity (HDF5 group): contains 1D arrays with intensity values.\n* Arrays_mz (HDF5 group): contains 1D arrays with mass-to-charge (m/z) values.\n>Example for spectrum with Scan value 630: Arrays_intensity/630, Arrays_mz/630.\n\nFor IM spectra the m/z dimension is stored as indexes (mzbins):\n* Arrays_mzbin (HDF5 group): contains 1D arrays with indexes to Full_mz_array.\n* Full_mz_array (HDF5 dataset): 1D array of full m/z values common for all spectra in the file.\nNote: IonMobilityBin = 0, represents the total frame spectrum or summed spectra in the frame (i.e., ignores IM dimension).\n>Example for spectrum with Scan value 630: Arrays_intensity/630, Arrays_mzbin/630.\n\nFor IM Agilent '.d', CCS calibration coefficients included as HDF5 dataset if detected:\n* CCScalDT = [Tfix, Beta] for DT\n* CCScalSLIM = [C0, C1, C2, C3] for SLIM\n\nExample scripts are provided in the respective folders. R requires the rhdf5 package and Python requires the h5py, hdf5plugin, numpy and matplotlib packages (see requirements.txt).\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-m-q/mza/main/README.md",
      "technique": "header_analysis"
    }
  ]
}