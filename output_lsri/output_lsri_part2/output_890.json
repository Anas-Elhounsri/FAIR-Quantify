{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OSU-BMBL/scGNN2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-12T23:31:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-09T20:55:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9743383165530766,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "This repository contains the source code for scGNN2.0\n \n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9910522732699634,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "We provide the visualization code in `Viz/plot_test.pynb`, including heat map, Graph, Cell-Cell Graph and Sankey Diagram.\n \n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9248144532576817,
      "result": {
        "original_header": "Visualization with seurat",
        "type": "Text_excerpt",
        "value": "You can also load the cell embeddings generated by scGNN2.0 and visualize it in Seurat:\n```R\nembeddings=read.csv(file =your_embedding_path ,header=TRUE,row.names = 1)\npbmc[[\"pca\"]] <- CreateDimReducObject(embeddings = as.matrix(embeddings), key = \"embedding_\", assay = DefaultAssay(pbmc))\npbmc <- RunUMAP(pbmc, dims = 1:128)\nDimPlot(pbmc, reduction = \"umap\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OSU-BMBL/scGNN2.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/Viz/plot_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/Viz/plot_test.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OSU-BMBL/scGNN2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scGNN2.0"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "scGNN2.0"
        ],
        "type": "Text_excerpt",
        "value": "Installation Tested on Ubuntu 16.04, CentOS 7, MacOS catalina with Python 3.8 on one NVIDIA RTX 2080Ti GPU.\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From Source",
        "parent_header": [
          "scGNN2.0",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Start by grabbing this source codes:\n```bash\ngit clone https://github.com/OSU-BMBL/scGNN2.0.git\ncd scGNN2.0\n```\nUse python virutal environment with conda\uff08https://anaconda.org/\uff09\n```bash\nconda create -n scgnnEnv python=3.8 pip\nconda activate scgnnEnv\npip install -r requirements.txt\n```\nIf want to use LTMG (Recommended but Optional, will takes extra time in data preprocessing):\n```bash\nconda install r-devtools\nconda install -c cyz931123 r-scgnnltmg\n```"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8119691389044735,
      "result": {
        "original_header": "Visualization with seurat",
        "type": "Text_excerpt",
        "value": "You can also load the cell embeddings generated by scGNN2.0 and visualize it in Seurat:\n```R\nembeddings=read.csv(file =your_embedding_path ,header=TRUE,row.names = 1)\npbmc[[\"pca\"]] <- CreateDimReducObject(embeddings = as.matrix(embeddings), key = \"embedding_\", assay = DefaultAssay(pbmc))\npbmc <- RunUMAP(pbmc, dims = 1:128)\nDimPlot(pbmc, reduction = \"umap\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 OSU-BMBL\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scGNN2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "OSU-BMBL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6032395,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 147954,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1067,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-04-23T20:14:34Z",
        "date_published": "2022-04-23T20:19:31Z",
        "description": "Official version that is used for ARI, L1, and efficiency benchmarking;\r\nCurrent best performing hyper-parameters can be found in run.sh;\r\nAdditional capabilities in development.",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "release_id": 65153083,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/65153083",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/65153083",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-04-06T18:05:28Z",
        "date_published": "2022-04-06T18:14:48Z",
        "description": "## Release Note:\r\nAdded options for tuning, default to the best set of hyper-parameters\r\nAdded edge list output for cell cell graph construction\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.f.2.2...v1.2.f.2.5",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.f.2.5",
        "name": "v1.2.f.2.5",
        "release_id": 63781906,
        "tag": "v1.2.f.2.5",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.f.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/63781906",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/63781906",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.f.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-03-19T17:23:44Z",
        "date_published": "2022-03-19T17:26:51Z",
        "description": "## Release Note\r\n1. GAT implemented and tested\r\n2. Improved graph construction\r\n3. More credible k prediction from Louvain\r\n\r\n## What's Changed\r\n* Added gat_dropout argument; Added new edgelist method (v1) by @edisonghc in https://github.com/OSU-BMBL/scGNN2.0/pull/7\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.f.2.0...v1.2.f.2.2",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.f.2.2",
        "name": "v1.2.f.2.2",
        "release_id": 62252340,
        "tag": "v1.2.f.2.2",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.f.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/62252340",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/62252340",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.f.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-03-11T02:53:17Z",
        "date_published": "2022-03-11T02:57:40Z",
        "description": "## Release Note:\r\n1) Added options to concat embeddings, normalize embeddings before concatenating\r\n2) Added options to output intermediate cluster prediction, embeddings, etc\r\n3) Added options to output additional metrics to evaluate clustering, embedding quality\r\n\r\n* Working on GAT fine tunning\r\n* Working on better mechanism to constrain cluster numbers\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.f...v1.2.f.2.0",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.f.2.0",
        "name": "v1.2.f.2.0",
        "release_id": 61561862,
        "tag": "v1.2.f.2.0",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.f.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/61561862",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/61561862",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.f.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-02-26T23:28:29Z",
        "date_published": "2022-02-27T02:12:09Z",
        "description": "## Release Note:\r\n\r\nDebugged option to use GAT for GAE layers - performance is bad in general, further debugging and fine-tuning is needed\r\nNo other major changes\r\n\r\n## What's Changed\r\n* Debugged GAT by @edisonghc in https://github.com/OSU-BMBL/scGNN2.0/pull/5\r\n\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.e.6...v1.2.f",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.f",
        "name": "v1.2.f",
        "release_id": 60549510,
        "tag": "v1.2.f",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.f",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/60549510",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/60549510",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.f"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-02-07T16:48:09Z",
        "date_published": "2022-02-07T20:15:53Z",
        "description": "## Release Note:\r\n1. Feature AE now uses [LTMG, noregu] for regularization and run for [500, 600] epochs\r\n2. Impute AE remains [None, Celltype] for regularization\r\n\r\n* v1.2.e.5 release is not tagged, can be easily reversed from v1.2.e.6 (see Changelog below)\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.e.4...v1.2.e.6",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.e.6",
        "name": "Fine-tune Feature AE",
        "release_id": 58935150,
        "tag": "v1.2.e.6",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.e.6",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58935150",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58935150",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.e.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-02-04T02:47:37Z",
        "date_published": "2022-02-04T17:49:23Z",
        "description": "## Release Note\r\n1. Modified loss function for Feature & Imputation AE:\r\n    - Now: celltype_loss = 0.3 * `BCE` + `nonzero_entries_diff` + 0.3 * `graph_regu` + 0.1 * `Celltype_regu`\r\n    - Before: &celltype_loss = 0.3 * `graph_regu` + 0.1 * `Celltype_regu`\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.e.3...v1.2.e.4",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.e.4",
        "name": "Improved loss function for Imputation & Feature AE",
        "release_id": 58709163,
        "tag": "v1.2.e.4",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.e.4",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58709163",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58709163",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.e.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-02-03T01:36:49Z",
        "date_published": "2022-02-03T01:41:48Z",
        "description": "## Release Note\r\n1. Input Imputation AE with Feature AE output (the reconstructed expression matrix)\r\n2. Default to no graph / cell type regu on either Feature AE or Imputation AE\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/compare/v1.2.e.2...v1.2.e.3",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.e.3",
        "name": "Input Imputation AE with Feature AE output (the reconstructed expression matrix)",
        "release_id": 58562755,
        "tag": "v1.2.e.3",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.e.3",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58562755",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58562755",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.e.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edisonghc",
          "type": "User"
        },
        "date_created": "2022-02-01T20:23:14Z",
        "date_published": "2022-02-01T20:44:42Z",
        "description": "## Release Note\r\n1. L1 output at Feature AE (in addition to at Cluster AE), output graph similarity\r\n2. Capable of including `graph_regu` and `celltype_regu` to Feature AE and Imputation AE (aka Clustering AE) in each epoch or just the last epoch\r\n3. Defaul to no graph/celltype regu\r\n\r\n## What's Changed\r\n* debug and addition features to py-scGNN by @edisonghc in https://github.com/OSU-BMBL/scGNN2.0/pull/2\r\n\r\n\r\n**Full Changelog**: https://github.com/OSU-BMBL/scGNN2.0/commits/v1.2.e.2",
        "html_url": "https://github.com/OSU-BMBL/scGNN2.0/releases/tag/v1.2.e.2",
        "name": "Baseline for future tuning",
        "release_id": 58465187,
        "tag": "v1.2.e.2",
        "tarball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/tarball/v1.2.e.2",
        "type": "Release",
        "url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58465187",
        "value": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/releases/58465187",
        "zipball_url": "https://api.github.com/repos/OSU-BMBL/scGNN2.0/zipball/v1.2.e.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:24:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "scGNN2.0"
        ],
        "type": "Text_excerpt",
        "value": "The scGNN2.0 not only accepts normal scRNA-seq data format: CSV and 10X, but also provide an interface for R and Seurat users. The scGNN2.0 also accepts `SeuratObject` and `Rdata` as input.\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CSV format",
        "parent_header": [
          "scGNN2.0",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "We provide a dataset `Goolam` in folder `sampleData`. To run scGNN2.0 with `Goolam` as input (The docs of the arguments can be found in the `scGNN_v2.py`):\n```bash\nmkdir outputs\npython -W ignore scGNN_v2.py \\\n    --given_cell_type_labels \\\n    --load_use_benchmark \\\n    --load_dataset_dir ./sampleData \\\n    --load_dataset_name Goolam\\\n    --output_dir ./outputs\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "10X format",
        "parent_header": [
          "scGNN2.0",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Take an example of liver cellular landscape study from human cell atlas(https://data.humancellatlas.org/). Click the download link of 'homo_sapiens.mtx.zip' in the page, and get 4d6f6c96-2a83-43d8-8fe1-0f53bffd4674.homo_sapiens.mtx.zip. (It looks like they does not provide direct download link anymore)\n```bash\nmkdir liver\ncd liver\nmv ~/Download/4d6f6c96-2a83-43d8-8fe1-0f53bffd4674.homo_sapiens.mtx.zip .\nunzip 4d6f6c96-2a83-43d8-8fe1-0f53bffd4674.homo_sapiens.mtx.zip\ncd ..\n```\nTo run scGNN2.0 with 10X data:\n```\npython scGNN_v2.py --load_from_10X 4d6f6c96-2a83-43d8-8fe1-0f53bffd4674.homo_sapiens.mtx \\\n    --output_dir ./outputs \\\n    --total_epoch 31 --feature_AE_epoch 500 300 \\\n    --output_intermediate \n```\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SeuratObject",
        "parent_header": [
          "scGNN2.0",
          "Quick Start",
          "10X format"
        ],
        "type": "Text_excerpt",
        "value": "[Seurat](https://satijalab.org/seurat) is an famous R toolkit for single cell genomics. Our program provides an interface for Seurat users. \n\nIf now you have a `SeuratObject`, then you can export raw counts into `.csv` file from SeuratObject:\n```R\nwrite.table(as.matrix(GetAssayData(object = yourSeuratObject, slot = \"counts\")), \n        '~/counts.csv', \n        sep = ',', row.names = T, col.names = T, quote = F)\n```\nPlease note the default input matirx of scGNN2.0 is a cell (rows) by gene (columns) matrix. In Seurat, `GetAssayData` returns a matrix where rows are features (genes) and columns are cells. If you want to transpose this matrix to get a cell-by-gene matrix, you can use the `t()` function in R, which transposes matrices. Here's how you can modify your command:\n```R\nwrite.table(t(as.matrix(GetAssayData(object = yourSeuratObject, slot = \"counts\"))),\n            '~/counts.csv',\n            sep = ',', row.names = TRUE, col.names = TRUE, quote = FALSE)\n```\n So before run scGNN2.0, please make sure your input matrix is a cell by gene matrix.\n\nThen run scGNN2.0 project from this csv file:\n```bash\npython scGNN_v2.py --load_seurat_object ~/counts.csv \\\n    --output_dir your_output_dir \\\n    --total_epoch 31 --feature_AE_epoch 500 300 \\\n    --output_intermediate \n```\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Rdata format",
        "parent_header": [
          "scGNN2.0",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "To run scGNN2.0 project from a `Rdata` file:\n```bash\npython scGNN_v2.py --load_rdata ~/data.Rdata \\\n    --output_dir your_output_dir \\\n    --total_epoch 31 --feature_AE_epoch 500 300 \\\n    --output_intermediate \n```\n\nTo generate results in `Rdata` format, you need to specify `output_rdata`:\n```bash\npython scGNN_v2.py --load_rdata ~/counts.Rdata \\\n    --output_dir your_output_dir --output_rdata\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OSU-BMBL/scGNN2.0/main/README.md",
      "technique": "header_analysis"
    }
  ]
}