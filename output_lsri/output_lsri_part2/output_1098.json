{
  "application_domain": [
    {
      "confidence": 27.21,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite our paper.\"\nauthors:\n- family-names: \"Herrmann\"\n  given-names: \"Markus D.\"\n- family-names: \"Bridge\"\n  given-names: \"Christopher P.\"\n- family-names: \"Fedorov\"\n  given-names: \"Andriy Y.\"\n- family-names: \"Pieper\"\n  given-names: \"Steven\"\n- family-names: \"Doyle\"\n  given-names: \"Sean W.\"\n- family-names: \"Gorman\"\n  given-names: \"Chris\"\npreferred-citation:\n  type: article\n  authors:\n    - family-names: \"Bridge\"\n      given-names: \"Christopher P.\"\n      orcid: \"https://orcid.org/0000-0002-2242-351X\"\n    - family-names: \"Gorman\"\n      given-names: \"Chris\"\n    - family-names: \"Pieper\"\n      given-names: \"Steven\"\n    - family-names: \"Doyle\"\n      given-names: \"Sean W.\"\n    - family-names: \"Lennerz\"\n      given-names: \"Jochen K.\"\n    - family-names: \"Kalpathy-Cramer\"\n      given-names: \"Jayashree \"\n    - family-names: \"Clunie\"\n      given-names: \"David A.\"\n    - family-names: \"Fedorov\"\n      given-names: \"Andriy Y.\"\n    - family-names: \"Herrmann\"\n      given-names: \"Markus D.\"\n      orcid: \"https://orcid.org/0000-0002-7257-9205\"\n  title: \"Highdicom: a Python Library for Standardized Encoding of Image Annotations and Machine Learning Model Outputs in Pathology and Radiology\"\n  journal: \"J Digit Imaging\"\n  year: 2022\n  doi: 10.1007/s10278-022-00683-y\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "High DICOM"
        ],
        "type": "Text_excerpt",
        "value": "For more information about the motivation of the library and the design of highdicom's API, please see the following article:\n\n> [Highdicom: A Python library for standardized encoding of image annotations and machine learning model outputs in pathology and radiology](https://arxiv.org/abs/2106.07806)\n> C.P. Bridge, C. Gorman, S. Pieper, S.W. Doyle, J.K. Lennerz, J. Kalpathy-Cramer, D.A. Clunie, A.Y. Fedorov, and M.D. Herrmann\n\nIf you use highdicom in your research, please cite the above article.\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[chris@chrisbridge.science](mailto:chris@chrisbridge.science).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/code_of_conduct.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ImagingDataCommons/highdicom"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-01T18:50:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T14:02:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "High-level DICOM abstractions for the Python programming language "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9927491531306732,
      "result": {
        "original_header": "High DICOM",
        "type": "Text_excerpt",
        "value": "A library that provides high-level DICOM abstractions for the Python programming language to facilitate the creation and handling of DICOM objects for image-derived information, including image annotations, and image analysis results.\nIt currently provides tools for creating and decoding the following DICOM information object definitions (IODs):\n* Annotations\n* Parametric Map images\n* Segmentation images\n* Structured Report documents\n* Secondary Capture images\n* Key Object Selection documents\n* Legacy Converted Enhanced CT/PET/MR images (e.g., for single frame to multi-frame conversion)\n* Softcopy Presentation State instances (including Grayscale, Color, and Pseudo-Color)\n \n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "High DICOM"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to the online documentation at [highdicom.readthedocs.io](https://highdicom.readthedocs.io), which includes installation instructions, a user guide with examples, a developer guide, and complete documentation of the application programming interface of the `highdicom` package.\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://highdicom.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/herrmannlab/highdicom/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/examples/notebooks/segmentation_slide_microscopy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/examples/notebooks/segmentation_slide_microscopy.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 36
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ImagingDataCommons/highdicom"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "High DICOM"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/examples/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/examples/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dicom, numpy, pydicom, python3, typehints"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2020 MGH Computational Pathology\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "highdicom"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ImagingDataCommons"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 23073677,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2106.07806"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CPBridge",
          "type": "User"
        },
        "date_created": "2024-09-24T23:18:30Z",
        "date_published": "2024-09-24T23:22:39Z",
        "description": "# Dependencies\r\n\r\n- Highdicom now depends upon pydicom > 3.0.1. #301 \r\n- Highdicom now requires python > 3.10. This was necessitated by a similar move from pydicom. #301 \r\n- Remove references to `numpy.float_` to allow working with numpy>2\r\n\r\n# Tooling/Repo\r\n\r\n- We have adopted the contributor covenant. #271 \r\n- Various style improvements #286 #287 #289 #290 #291 #292\r\n- We have moved to `pyproject.toml` metadata. #293\r\n- Improve automated checks to enforce repo review rules #296\r\n\r\n# Features\r\n\r\n- Further checks on graphic data for SRs #276\r\n- Additional checks for microscopy bulk annotation coordinate types #281\r\n- Further improvements in segmentation creation efficiency #285\r\n- Allow creation of pyramid segmentations with floating point arrays, or with multiple segments #297\r\n- Add options allowing to infer the subject context from an image #298\r\n- Use pydicom 3 features to enable additional transfer syntaxes in compression.\r\n- Add methods to get a list of images used as evidence within an SR #303\r\n- Add a `further_source_images` option to the segmentation constructor #304\r\n\r\n# Fixes\r\n\r\n- Minor fixes for microscopy bulk annotation graphic data #278 \r\n- Remove the JP2 wrapper from JPEG 2000 encoding\r\n\r\n# Docs\r\n\r\n- Added a gitflow section to the developer guide. #272\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.23.0",
        "name": "v0.23.0",
        "release_id": 176738736,
        "tag": "v0.23.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.23.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/176738736",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/176738736",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.23.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CPBridge",
          "type": "User"
        },
        "date_created": "2023-11-09T16:37:32Z",
        "date_published": "2023-11-09T16:49:18Z",
        "description": "Probably left this one far too long...\r\n\r\n# New Features\r\n- New features for parsing existing Microscopy Bulk Annotations: `annread` function and `annotation_coordinate_type` property (#230)\r\n- Multiprocessing for frame encoding in segmentation construction (#245)\r\n- A major set of improvements for working with tiled segmentations including ability to pass in total pixel matrices to the segmentation constructor, the ability to create and read TILED_FULL segmentations, and the ability to construct segmentation total pixel matrices from tiled images (#248) \r\n- New function to create multiresolution segmentation pyramids (#253)\r\n\r\n# Bug fixes\r\n- Allow duplicate entries in the ReferencedSeriesSequence of a segmentation image (#229)\r\n- Remove plane orientation from the shared functional groups in the case of segs using the slide coordinate system (#236), a DICOM compliance issue\r\n- Exclude incompatible pydicom 2.4.0 in `setup.py` (#238)\r\n- Fixes to various value representations (#239)\r\n- Fix return type of `highdicom.seg.DimensionIndexSequence.get_plane_positions_of_image` (#240)\r\n- Correctly account for chrominance subsampling of natively encoded `YBR_FULL_422` images in the `ImageFileReader` (#242)\r\n- Work around pillow 10.0.0 breaking changes (#244)\r\n- Specimen description and preparation fixes within microscopy related content items (#246)\r\n-  A number of style improvements (#257 #258 #259 #261 #262 #263 #264 #265 #268)\r\n\r\n# Performance improvements\r\n- Significant improvements to segmentation creation efficiency (#227)\r\n\r\n# Documentation and tests\r\n- Add `codespell` tool to check for spelling errors in the docs (#237)\r\n- Fix documentation links (#250)\r\n- Fix the readthedoc config (#256)\r\n- Fix to an incorrectly written frame encoding test (#270)\r\n- Use latest version of github actions (#266)\r\n\r\n# New contributors\r\n\r\nThanks to @yarikoptic @thomas-albrecht @elitalien and @DimitriPapadopoulos for their first contributions to highdicom!\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.22.0",
        "name": "v0.22.0",
        "release_id": 128759478,
        "tag": "v0.22.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.22.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/128759478",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/128759478",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.22.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CPBridge",
          "type": "User"
        },
        "date_created": "2023-04-29T16:37:58Z",
        "date_published": "2023-04-29T16:39:22Z",
        "description": "### Bug fixes\r\n\r\n* Correctly deal with `LongCodeValue` and `URNCodeValue` in `CodedConcept.from_dataset()` (#226)\r\n* Remove an unnecessary table join when fetching segmentation pixel (#224)\r\n* Fix `ImageFileReader`'s handling of `DicomFileLike` objects, meaning that you can now read frames from a open file handle or a `pydicom.filebase.DicomBytesIO` object (an in-memory buffer) (#223).\r\n\r\n### New contributors\r\n\r\n* Thanks to @RobinFrcd  for his first contribution to the library (#223)!",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.21.1",
        "name": "v0.21.1",
        "release_id": 101379558,
        "tag": "v0.21.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.21.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/101379558",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/101379558",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.21.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CPBridge",
          "type": "User"
        },
        "date_created": "2023-04-02T17:43:26Z",
        "date_published": "2023-04-02T17:44:39Z",
        "description": "### New features\r\n\r\n- The implementation of methods for constructing segmentation pixels arrays from a `highdicom.seg.Segmentation` object (`highdicom.seg.Segmentation.get_pixels_by_source_instance()`,  `highdicom.seg.Segmentation.get_pixels_by_source_frame()`, and `highdicom.seg.Segmentation.get_pixels_by_dimension_index_values()`) have been considerably refactored with a general focus on improving the usability for large segmentation objects (https://github.com/ImagingDataCommons/highdicom/pull/208). These changes are compatible with existing code except that in some cases the methods may return numpy arrays with a smaller unsigned integer data type than they previously did. User code should see significant speed-ups without any changes. The new versions have several improvements:\r\n  - Improvements in computational efficiency due to a redesign of the way the frame look-up table is stored under the hood. Now an in-memory sqlite database  is used through the Python standard library `sqlite3` module. This allows for considerably faster and more flexible querying.\r\n  - Significant improvements in memory efficiency for the case where `combine_segments=True`. Previously the memory usage scaled as O(n) in the number of segments, now it is constant (O(1)).\r\n  - When combining segments, the methods now automatically determine and return an appropriate unsigned integer datatype to return the smallest array that can represent all segments. This has been observed to reduce both the memory usage and improve speed (largely due to the reducing the need to allocate memory for unnecessarily large numpy arrays)\r\n  - There is a new parameter, `dtype`, that allows the user to choose the data type of the output array (overriding the automatically determined default).\r\n  - There is a further new boolean parameter `skip_overlap_checks`, which allows the user to specify that the check for overlapping segments in the case where `combine_segments=True` is skipped. This makes a significant difference to runtime. If this is done and two segments do overlap, the segment with the highest output segmentation number will be placed into the output array preferentially. The default behaviour matches the previous behaviour in that checks for overlapping segments are performed, and an error is raised if any two segments overlaps. \r\n  - The user guide is updated to the preferred way of accessing pixel data using the above methods.\r\n- There is now an optional parameter in `from_dataset()` methods called `copy`. By default, this parameter is True, meaning that a full deepcopy of the original dataset is made before conversion to the highdicom class, which matches the previous behaviour. This is the \"safest\" option that prevents potentially unwanted behaviour downstream if the user tries to re-use the original dataset. However if the user chooses to set this parameter to `False`, then the deepcopy is skipped and the original dataset is updated in place. This can give a very significant speed-up when the segmentation object are large. Additionally this is used in the `segread` and `srread` functions to give a significant speed up as it is never necessary to deepcopy the temporary object read from file (https://github.com/ImagingDataCommons/highdicom/pull/207). \r\n- Added a new function `highdicom.sr.srread()`, similar to the existing `highdicom.seg.segread()`, to read a dataset representing a supported Structured Report SOP Class from a file and convert it to the appropriate highdicom class automatically (https://github.com/ImagingDataCommons/highdicom/pull/215).\r\n- Users may now pass a single-element Sequence to the `content` parameter of the `__init__` methods of Structured Report SOP classes, as alternative to passing a `pydicom.Dataset`. This is more intuitive for users that have constructed a `highdicom.sr.MeasuremenrtReport` class and wish to use it as the content of a new Structured Report (https://github.com/ImagingDataCommons/highdicom/pull/216).\r\n\r\n### Enhancements\r\n\r\n- The library's repository was moved to the [ImagingDataCommons](https://github.com/ImagingDataCommons) organization on GitHub, and all URLs were updated (https://github.com/ImagingDataCommons/highdicom/pull/212).\r\n- The library's Github Actions now run the tests using Python 3.11 in addition to older versions (https://github.com/ImagingDataCommons/highdicom/pull/217) to ensure that highdicom supports the latest Python version.\r\n\r\n### Bug fixes\r\n\r\n- A minor tweak to the routine for segmentation construction that avoids creating a copy of large portions of the input array just to find the unique values (https://github.com/ImagingDataCommons/highdicom/pull/221).\r\n- A bug, resulting in the `ReferencedImageSequence` of a `highdicom.ann.MicroscopyBulkSimpleAnnotations` always being empty, was resolved (https://github.com/ImagingDataCommons/highdicom/pull/220).\r\n- A mistake in the docstrings of the `PixelToReferenceTransformer`, `ReferenceToPixelTransformer`, and `ImageToReferenceTransformer` classes was fixed (https://github.com/ImagingDataCommons/highdicom/pull/209).\r\n- A bug that resulted in GSPS creation failing when the referenced images have multiple values for WindowWidth, WindowCenter and/or WindowCenterWidthExplanation was fixed (https://github.com/ImagingDataCommons/highdicom/pull/211).\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.21.0",
        "name": "v0.21.0",
        "release_id": 97768850,
        "tag": "v0.21.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.21.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/97768850",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/97768850",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.21.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CPBridge",
          "type": "User"
        },
        "date_created": "2022-11-09T18:42:14Z",
        "date_published": "2022-11-09T18:43:46Z",
        "description": "# v0.20.0\r\n\r\n### New features\r\n\r\n- Move `pylibjpeg` and related dependencies (`pylibjpeg-libjpeg` and `pylibjpeg-openjpeg`) from requirements to optional requirements. This means that the default installation is compatible with highdicom's MIT license. There are now some transfer syntaxes that are not supported with the default installation. Users can install highdicom with the optional dependencies by specifying `highdicom[libjpeg]` as their installation target. Update github test runners to support both the cases where the optional requirements are installed and are not installed (https://github.com/herrmannlab/highdicom/pull/201).\r\n\r\n### Enhancements\r\n\r\n- Add citation file to allow citing the package (https://github.com/herrmannlab/highdicom/pull/204).\r\n\r\n### Bug fixes\r\n\r\n- Use a deepcopy for `CodedConcept.from_dataset()` to avoid issues with optional attributes of the sequence getting lost (https://github.com/herrmannlab/highdicom/pull/205).\r\n- When the omit_empty_frames option is used for a Segmentation and an empty segmentation mask is passed (i.e. a mask with all zeros), the constructor will issue a UserWarning and ignore the omit_empty_frames option (https://github.com/herrmannlab/highdicom/pull/181).",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.20.0",
        "name": "v0.20.0",
        "release_id": 82584586,
        "tag": "v0.20.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.20.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/82584586",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/82584586",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.20.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-08-19T22:06:20Z",
        "date_published": "2022-08-19T22:10:30Z",
        "description": "### New features\r\n\r\n- Implementation of TID 1601 Image Library Entry (#83)\r\n\r\n### Enhancements\r\n\r\n- Allow annotations to reference multiple multi-frame images (#193)\r\n- Remove module level imports of module data to improve test coverage reporting (#196)\r\n\r\n### Bug fixes\r\n\r\n- Fix namespace of segmentation usage example (#195)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.19.0",
        "name": "0.19.0",
        "release_id": 74882775,
        "tag": "v0.19.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.19.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/74882775",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/74882775",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.19.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-07-23T13:47:47Z",
        "date_published": "2022-07-23T13:51:37Z",
        "description": "### Enhancements\r\n\r\n-  Improve efficiency of plane position computation (#191)\r\n\r\n### Bug fixes\r\n\r\n-  Fix decoding of graphic data in annotations group (#192)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.18.4",
        "name": "0.18.4",
        "release_id": 72673863,
        "tag": "v0.18.4",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.18.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/72673863",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/72673863",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.18.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-07-20T15:51:19Z",
        "date_published": "2022-07-20T15:56:34Z",
        "description": "### Bug fixes\r\n\r\n- Do exact comparison when checking coordinates of graphics data in constructor of `ann.AnnotationGroup` (#169)\r\n- Fix example for use of `io.ImageFileReader` (#185)\r\n\r\n### Enhancement\r\n\r\n- Don't fail upon construction of `io.ImageFileReader` if color image lacks ICC Profile (#189) ",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.18.3",
        "name": "0.18.3",
        "release_id": 72445831,
        "tag": "v0.18.3",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.18.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/72445831",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/72445831",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.18.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-07-12T11:50:48Z",
        "date_published": "2022-07-12T11:53:33Z",
        "description": "### Enhancements\r\n\r\n- Allow segmentation of images without a frame of reference UID (#183)\r\n- Allow passing of additional attributes of equipment module (#182)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.18.2",
        "name": "0.18.2",
        "release_id": 71793939,
        "tag": "v0.18.2",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.18.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/71793939",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/71793939",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.18.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-06-08T15:48:25Z",
        "date_published": "2022-06-08T15:49:58Z",
        "description": "### Bug fixes\r\n\r\n- Fix references of source images and inclusion of palette color lut attributes in Advanced Blending Presentation State (#179)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.18.1",
        "name": "0.18.1",
        "release_id": 68969882,
        "tag": "v0.18.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.18.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/68969882",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/68969882",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.18.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-05-16T21:07:43Z",
        "date_published": "2022-05-16T21:20:16Z",
        "description": "### New features\r\n\r\n- Implement Softcopy Presentation State IODs (#139)\r\n- Add method to construct UID from an existing UUID (#176)\r\n\r\n### Bug fixes\r\n\r\n- Ensure values of data elements with binary VRs are encoded/decoded correctly (#173)\r\n\r\n### Breaking changes\r\n\r\n- Deprecation of big endian transfer syntaxes (#173 [see section in release notes](https://highdicom.readthedocs.io/en/latest/release_notes.html#deprecation-of-big-endian-transfer-syntaxes))",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.18.0",
        "name": "0.18.0",
        "release_id": 67014518,
        "tag": "v0.18.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.18.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/67014518",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/67014518",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.18.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-05-06T13:27:17Z",
        "date_published": "2022-05-06T13:30:18Z",
        "description": "### Enhancements\r\n\r\n- Support referencing of source images in SR template TID 1501 (#169)\r\n\r\n### Bug fixes\r\n\r\n- Fix typo in error message (#175)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.17.0",
        "name": "0.17.0",
        "release_id": 66228282,
        "tag": "v0.17.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.17.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/66228282",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/66228282",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.17.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-04-22T04:09:01Z",
        "date_published": "2022-04-22T19:09:05Z",
        "description": "### New features\r\n\r\n- Implement decoding API for `SpecimenDescription` and related classes such as `SpecimenPreparationStep` and friends (#161)\r\n\r\n### Enhancements\r\n\r\n- Run tests on examples included in docstrings (#165)\r\n\r\n### Bug fixes\r\n\r\n- Fix computation of tile positions for TILED_FULL images that contain multiple optical paths (#161)\r\n\r\n### Breaking changes\r\n\r\n- Derive `SpecimenPreparationStep` from `pydicom.Dataset` instead of `pydicom.Sequence` (#161, see [section in release notes](https://highdicom.readthedocs.io/en/latest/release_notes.html#refactoring-of-specimenpreparationstep-class) for further details).",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.16.0",
        "name": "0.16.0",
        "release_id": 65109208,
        "tag": "v0.16.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.16.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/65109208",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/65109208",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.16.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-04-01T17:16:14Z",
        "date_published": "2022-04-01T18:15:43Z",
        "description": "### Enhancements\r\n\r\n* Support pydicom version 2.3.0 (#163)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.15.3",
        "name": "0.15.3",
        "release_id": 63407958,
        "tag": "v0.15.3",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.15.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/63407958",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/63407958",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.15.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-03-21T13:53:16Z",
        "date_published": "2022-03-22T18:02:30Z",
        "description": "### Bug fixes\r\n\r\n- Fix computation of plane positions for images with Dimension Organization TILED_FULL and more than one optical path (#158)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.15.2",
        "name": "0.15.2",
        "release_id": 62480383,
        "tag": "v0.15.2",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.15.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/62480383",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/62480383",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.15.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-03-01T04:04:13Z",
        "date_published": "2022-03-01T04:05:44Z",
        "description": "### Bug fixes\r\n\r\n* Use correct color space for encoding of frames with JPEG baseline 8-bit transfer syntax (#157)\r\n* Remove superfluous file meta information attributes (#156)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.15.1",
        "name": "0.15.1",
        "release_id": 60672679,
        "tag": "v0.15.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.15.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/60672679",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/60672679",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.15.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-02-25T03:37:30Z",
        "date_published": "2022-02-25T03:43:04Z",
        "description": "### Enhancements\r\n\r\n- Warn in case of a malformed person name instead of raising an errors (#154)\r\n-  Simplify description of specimen preparation steps (#153)\r\n\r\n### Bug fixes\r\n\r\n* Convert color space upon decoding of JPEG compressed color image frames (#152)\r\n\r\n### Breaking changes\r\n\r\n* Deprecate `processing_type` parameter of constructor of `highdicom.SpecimenPreparationStep` (see [section in release notes](https://highdicom.readthedocs.io/en/latest/release_notes.html#deprecation-of-processing-type-parameter) for further details)\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.15.0",
        "name": "0.15.0",
        "release_id": 60447403,
        "tag": "v0.15.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.15.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/60447403",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/60447403",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.15.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-02-14T23:55:28Z",
        "date_published": "2022-02-14T23:56:32Z",
        "description": "### Bug fixes\r\n\r\n- Fix name of utility function parameter (#149)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.14.2",
        "name": "0.14.2",
        "release_id": 59561070,
        "tag": "v0.14.2",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.14.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/59561070",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/59561070",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.14.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-02-09T16:23:01Z",
        "date_published": "2022-02-09T16:24:26Z",
        "description": "### Bug fixes\r\n\r\n- Account for non-tiled images with slide-based coordinate system (#146)\r\n- Fix mapping of image and reference coordinates (#146)\r\n\r\n### New features\r\n\r\n- Add method to get all graphic data of an annotation group (#147)\r\n\r\n### Breaking changes\r\n\r\n- Parameters  of`highdicom.spatial.map_pixel_into_coordinate_system` changed from `coordinate: Sequence[float]` to `index: Sequence[int]`\r\n- Return value of `highdicom.spatial.map_coordinate_into_pixel_matrix` changed from `Tuple[float, float, float]` to `Tuple[int, int, int]`\r\n\r\nFor further information on these changes, please refer to the corresponding [section in the release notes ](https://highdicom.readthedocs.io/en/latest/release_notes.html#correct-coordinate-mapping).\r\n\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.14.1",
        "name": "0.14.1",
        "release_id": 59143505,
        "tag": "v0.14.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.14.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/59143505",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/59143505",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.14.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2022-01-03T18:46:29Z",
        "date_published": "2022-01-03T18:47:48Z",
        "description": "### New features\r\n\r\n* Add support for JPEG-LS encoding/decoding (#142)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.14.0",
        "name": "0.14.0",
        "release_id": 56328938,
        "tag": "v0.14.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.14.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/56328938",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/56328938",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.14.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-12-01T14:47:41Z",
        "date_published": "2021-12-01T14:50:45Z",
        "description": "### Bug fixes\r\n\r\n* Fix alternative construction of `KeyObjectSelectionDocument` instances (#134)\r\n* Fix compliance issues of `ParametricMap` (#140) ",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.13.1",
        "name": "0.13.1",
        "release_id": 54416469,
        "tag": "v0.13.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.13.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/54416469",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/54416469",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.13.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-11-19T22:07:33Z",
        "date_published": "2021-11-19T22:08:00Z",
        "description": "### Enhancements\r\n\r\n*  Add support for Finding Category in TID 1501, 1410, and 1411 according to CP 2176 (#138) \r\n\r\n### Bug fixes\r\n\r\n* Ensure segment pixel data are properly scaled to [0, 255] range when Segmentation Type is FRACTIONAL (#137)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.13.0",
        "name": "0.13.0",
        "release_id": 53753769,
        "tag": "v0.13.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.13.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/53753769",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/53753769",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.13.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-11-08T19:04:47Z",
        "date_published": "2021-11-08T19:05:20Z",
        "description": "### Bug fixes\r\n\r\n- Fix standard compliance issues of KOS instances (#133)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.12.1",
        "name": "0.12.1",
        "release_id": 52947157,
        "tag": "v0.12.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.12.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/52947157",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/52947157",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.12.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-11-05T18:02:09Z",
        "date_published": "2021-11-05T18:02:33Z",
        "description": "### New features\r\n\r\n- Implementation of Key Object Selection Document Storage SOP Class (#132)\r\n- Allow users to specify Content Label (#130)\r\n\r\n### Enhancements\r\n\r\n- Add Total Pixel Matrix Rows/Columns attributes to Segmentation and Parametric Map objects (#131)\r\n- Add anatomy attributes to annotations groups\r\n- Add example for creation of Secondary Capture images\r\n- Enforce Series Number and Instance Number to be positive integers (#127)\r\n\r\n### Bug fixes\r\n\r\n- Fix JPEG2000 encoding of frames (#119)\r\n- Add missing import statements for Structured Report examples and fix typos in documentation (#125)\r\n- Fix Pixel Spacing in Secondary Capture image (#128)\r\n- Include API documentation for new packages\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.12.0",
        "name": "0.12.0",
        "release_id": 52805615,
        "tag": "v0.12.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/52805615",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/52805615",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-10-14T15:33:38Z",
        "date_published": "2021-10-14T15:38:01Z",
        "description": "### New features\r\n\r\n* Implement Microscopy Bulk Simple Annotations (#114)\r\n\r\n### Enhancements\r\n\r\n* Use Explicit VR Little Endian transfer syntax by default for all SOP classes (#114)\r\n\r\n### Bug fixes\r\n\r\n* Use correct attribute in dimension index of segmentation (#116)\r\n* Allow reference of more than one frame for segmentation source images of planar regions (#118)\r\n* Prevent inclusion of empty content sequence into SR content items (#121)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.11.0",
        "name": "0.11.0",
        "release_id": 51372871,
        "tag": "v0.11.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/51372871",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/51372871",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-10-05T12:54:15Z",
        "date_published": "2021-10-05T13:05:30Z",
        "description": "### New features\r\n\r\n- Add methods and properties for parsing referenced segments in SR document content (#104)\r\n\r\n### Improvements\r\n\r\n- Include Image Orientation (Slide) and Total Pixel Matrix Origin Sequence attributes in Segmentation (#102)\r\n\r\n### Bug fixes\r\n\r\n- Add missing import statement in example code snippet of documentation (#113)\r\n- Correct value types of Volume Surface content item(s) in SR document content (#112)\r\n- Fix indentation issue in legacy package (#111)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.10.0",
        "name": "0.10.0",
        "release_id": 50814267,
        "tag": "v0.10.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/50814267",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/50814267",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-09-21T05:51:41Z",
        "date_published": "2021-09-21T05:54:44Z",
        "description": "### Bug fixes\r\n\r\n* Correct code name of Specimen Preparation Step (#108)\r\n* Correct attribute name of legacy converted images (#105)\r\n\r\n### Documentation\r\n\r\n* Add example on how to create secondary capture image (#109)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.9.2",
        "name": "0.9.2",
        "release_id": 49957429,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/49957429",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/49957429",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-09-14T21:19:16Z",
        "date_published": "2021-09-14T21:19:55Z",
        "description": "### Bug fixes\r\n\r\n* Allow inclusion of content items without Relationship Type into content sequences defined by Acquisition and Protocol templates (#107)",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.9.1",
        "name": "0.9.1",
        "release_id": 49559792,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/49559792",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/49559792",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-08-31T21:51:00Z",
        "date_published": "2021-08-31T22:19:31Z",
        "description": "### New features\r\n\r\n* Implement Parametric Map IOD (#89)\r\n* Enable construction of *highdicom* objects from existing *pydicom* objects (#93)\r\n  ```python\r\n  dataset = pydicom.filereader.dcmread(...)\r\n  segmentation = hd.seg.Segmentation.from_dataset(dataset)\r\n  ```\r\n* Add properties and methods to classes derived from `highdicom.sr.ContentItem` and `highdicom.sr.Template` to facilitate data access\r\n  ```python\r\n  document = hd.sr.ComprehensiveSR(...)\r\n  measurement_groups = document.content.get_planar_roi_measurements()\r\n  ```\r\n\r\n### Improvements\r\n\r\n* Add unit tests\r\n* Improve description of parameters in docstrings\r\n* Add docstrings to enums\r\n* Add image library entries for SR documents based on TID 1500 (#77)\r\n\r\n### Bug fixes\r\n\r\n* Fix many mypy errors\r\n* Record `evidence` correctly (Current Requested Procedure Evidence Sequence versus Pertinent Other Evidence Sequence)\r\n* Fix `highdicom.sr.RelationshipType`\r\n* Fix default value for Pixel Origin Interpretation\r\n* Allow Concept Name Code Sequence to be absent\r\n* Write error traceback to stderr instead of stdout\r\n\r\n### Major changes\r\n\r\n* Change implementation of `highdicom.sr.QualitativeEvaluation` (is now derived from `highdicom.sr.Template` rather than `highdicom.sr.ContentItem` for consistency with `highdicom.sr.Measurement`)\r\n* Make `value` and `unit` parameters of `highdicom.sr.NumContentItem` required (the corresponding attributes are required by the standard)\r\n* Change fields of `highdicom.PatientSexValues` to single letters (for consistency with other enums)\r\n* Add references to Current Requested Procedure Evidence Sequence rather than Pertinent Other Evidence Sequence if instances are referenced in the SR document content tree\r\n",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.9.0",
        "name": "0.9.0",
        "release_id": 48778077,
        "tag": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/48778077",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/48778077",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hackermd",
          "type": "User"
        },
        "date_created": "2021-07-30T22:03:41Z",
        "date_published": "2021-07-30T22:08:58Z",
        "description": "### Bug fixes\r\n\r\n* Fix Dimension Organization of Segmentation instances (#92).\r\n\r\n### Major changes\r\n\r\n* Deprecate `Segmentation.add_segments()` method (#92). All segments now need to be passed to the constructor method. See more detailed release notes about this issue [here](https://highdicom.readthedocs.io/en/latest/release_notes.html#deprecation-of-add-segments-method).",
        "html_url": "https://github.com/ImagingDataCommons/highdicom/releases/tag/v0.8.0",
        "name": "0.8.0",
        "release_id": 47075785,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/47075785",
        "value": "https://api.github.com/repos/ImagingDataCommons/highdicom/releases/47075785",
        "zipball_url": "https://api.github.com/repos/ImagingDataCommons/highdicom/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:10:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 171
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "High DICOM"
        ],
        "type": "Text_excerpt",
        "value": "The developers gratefully acknowledge their support:\n* The [Alliance for Digital Pathology](https://digitalpathologyalliance.org/)\n* The [MGH & BWH Center for Clinical Data Science](https://www.ccds.io/)\n* [Quantitative Image Informatics for Cancer Research (QIICR)](https://qiicr.org/)\n* [Radiomics](https://www.radiomics.io/)\n* The [NCI Imaging Data Commons](https://imaging.datacommons.cancer.gov/)\n"
      },
      "source": "https://raw.githubusercontent.com/herrmannlab/highdicom/master/README.md",
      "technique": "header_analysis"
    }
  ]
}