{
  "application_domain": [
    {
      "confidence": 24.32,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Cite",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "CATE has been successfully published in the journal Methods in Ecology and Evolution (MEE). If you find this framework or the software solution useful in your analyses, please CITE the published article available in [MEE, CATE: A fast and scalable CUDA implementation to conduct highly parallelized evolutionary tests on large scale genomic data](https://doi.org/10.1111/2041-210X.14168).\n\nTo cite CATE's code please use the Zenodo release:\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7987769.svg)](https://doi.org/10.5281/zenodo.7987769)\n\nThe details of the citation are listed below:\n\nPerera, D., Reisenhofer, E., Hussein, S., Higgins, E., Huber, C. D., & Long, Q. (2023). \nCATE: A fast and scalable CUDA implementation to conduct highly parallelized evolutionary tests on large scale genomic data. \nMethods in Ecology and Evolution, 00, 1\u201315. \n[https://doi.org/10.1111/2041-210X.14168](https://doi.org/10.1111/2041-210X.14168).\n\n[![Static Badge](https://img.shields.io/badge/DOI-Methods%20in%20Ecology%20and%20Evolution-%23db0f14)](https://doi.org/10.1111/2041-210X.14168)\n\n---"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/theLongLab/CATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "1. For **CATE** please address your correspondence to:\n\n**Deshan** Perera (duwagedahampriyabala@ucalgary.ca)\n\nDr. **Quan** Long (quan.long@ucalgary.ca)\n\nDr. **Christian** D. Huber (cdh5313@psu.edu)\n\n2. For **Apollo** please address your correspondence to:\n\n**Deshan** Perera (duwagedahampriyabala@ucalgary.ca)\n\nDr. **Quan** Long (quan.long@ucalgary.ca)\n\nDr. **Alexander** Platt (alexander.platt@pennmedicine.upenn.edu)\n\n---"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-29T21:42:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T01:03:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A fast and scalable CUDA implementation to conduct highly parallelized evolutionary tests on large scale genomic data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "The CATE software is a CUDA based solution to enable rapid processing of large-scale VCF files to conduct a series of six different tests on evolution.\n\n\ud83d\udd35 **Here we have provided only a brief overview of CATE's useability.**   \n\ud83d\udfe2 **Please refer to [CATE's wiki](https://github.com/theLongLab/CATE/wiki) to obtain a more detailed understanding of its functionality and usability.**\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9376694946123473,
      "result": {
        "original_header": "CATE (CUDA Accelerated Testing of Evolution)",
        "type": "Text_excerpt",
        "value": "A fast and scalable CUDA implementation to conduct highly parallelized evolutionary tests on large-scale genomic data. \n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9593451496291986,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "Apollo is our high-performance viral epidemic simulation platform powered by CATE's architecture. \nApollo is already available in CATE for use. Use the **--simulator** or **-sim** command. \nDocumentation on Apollo is available in our [wiki](https://github.com/theLongLab/CATE/wiki/Apollo), and a [user manual](https://github.com/theLongLab/CATE/tree/main/Apollo_User_Manual) has also been provided to get you up and running on our all-new tool. \nPreprint is currently being finalised and ready for upload followed by publication. \n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/theLongLab/CATE/wiki"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/theLongLab/CATE/wiki/Apollo"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/theLongLab/CATE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/theLongLab/CATE/main/Colab_CATE/CATE_on_Colab.ipynb"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/Colab_CATE/CATE_on_Colab.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/drive/1p8I2umE1U2gEB95eKwg0-fdtOLbgR13-?usp=sharing"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/theLongLab/CATE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "theLongLab/CATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CATE (CUDA Accelerated Testing of Evolution)"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/theLongLab/CATE/main/Example_data/Script%20files/neutrality_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/theLongLab/CATE/main/Example_data/Script%20files/split_script.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7987769"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to INSTALL",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "![C/C++ CUDA CI](https://github.com/theLongLab/CATE/actions/workflows/c-cpp.yml/badge.svg?event=push)\n\nCATE can be used **on-device** via **Ananconda** or by downloading and building the **GitHub** repo. It can also be used **online** via **Google Colab**.\n\nFor the **Google Colab** notebook please follow the link to [CATE on Colab](https://colab.research.google.com/drive/1p8I2umE1U2gEB95eKwg0-fdtOLbgR13-?usp=sharing).\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/theLongLab/CATE/blob/main/Colab_CATE/CATE_on_Colab.ipynb)\n\nTo install CATE via [**Anaconda**](https://anaconda.org/deshan_CATE/cate):\n\n[![Anaconda-Server Badge](https://anaconda.org/deshan_cate/cate/badges/version.svg)](https://anaconda.org/deshan_cate/cate)\n[![Anaconda-Server Badge](https://anaconda.org/deshan_cate/cate/badges/latest_release_date.svg)](https://anaconda.org/deshan_cate/cate)\n[![Anaconda-Server Badge](https://anaconda.org/deshan_cate/cate/badges/platforms.svg)](https://anaconda.org/deshan_cate/cate)\n\n````\nconda install deshan_cate::cate\n````\nTo ensure successful installation run the following:\n````\nCATE -h\n````\nElse, if you want to install CATE **on-device** using the GitHub repo you might have to compile the code using an nvcc compiler. If so execute the following on the terminal:\n\nDownload the repository:\n````\ngit clone \"https://github.com/theLongLab/CATE/\"\n````\n````\ncd CATE/\n````\n*cuda 11.3.0 or higher*\n````\nmodule load cuda/11.3.0\n````\n\nFinally, compile the project:\n````\nnvcc -std=c++17 *.cu *.cpp -o \"CATE\"\n````\nTo ensure successful installation try running the following:\n````\nCATE -h\n````\n---\n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9168501863685958,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "Apollo is already available in CATE for use. Use the **--simulator** or **-sim** command. \nDocumentation on Apollo is available in our [wiki](https://github.com/theLongLab/CATE/wiki/Apollo), and a [user manual](https://github.com/theLongLab/CATE/tree/main/Apollo_User_Manual) has also been provided to get you up and running on our all-new tool. \n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/theLongLab/CATE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1000genomes, anaconda, conda, cuda, cuda-programming, cuda-toolkit, ehh, evolutionary-biology, extended-haplotype-homozygosity, genetics, genome, mk-test, neutrality, neutrality-test, tajima, vcf, vcf-data, vcf-files"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 The Long Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Software License",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "MIT License\n\nCopyright (c) 2022 The Long Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/55466094/205796867-c55de996-aa97-415b-963c-9bcdb68a8e20.png"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "theLongLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 1745039,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "F*",
        "size": 244299,
        "type": "Programming_language",
        "value": "F*"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 138140,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 25353,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6183,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1976,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DeshanPerera",
          "type": "User"
        },
        "date_created": "2023-05-04T04:34:35Z",
        "date_published": "2023-05-30T19:18:08Z",
        "description": "This is the first official release after approval of the publication of CATE's complete suite of tools and functions. They have been tested for speed and accuracy.\r\nThe pre-built version present in the release should work on most operating systems (Linux/ Unix based) and systems equipped with an Nvidia CUDA-enabled GPU.\r\n\r\nTry execution by:\r\n\r\n./CATE\r\n\r\nYou can always perform a build of the project yourself using the following command below on the source code:\r\n\r\nnvcc -std=c++17 *.cu *.cpp -o \"CATE\"",
        "html_url": "https://github.com/theLongLab/CATE/releases/tag/1.0.0.01",
        "name": "Published RELEASE",
        "release_id": 105422342,
        "tag": "1.0.0.01",
        "tarball_url": "https://api.github.com/repos/theLongLab/CATE/tarball/1.0.0.01",
        "type": "Release",
        "url": "https://api.github.com/repos/theLongLab/CATE/releases/105422342",
        "value": "https://api.github.com/repos/theLongLab/CATE/releases/105422342",
        "zipball_url": "https://api.github.com/repos/theLongLab/CATE/zipball/1.0.0.01"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DeshanPerera",
          "type": "User"
        },
        "date_created": "2023-02-06T13:30:31Z",
        "date_published": "2023-02-06T13:42:35Z",
        "description": "**RELEASE ONE**\r\n\r\nThis is the first official release of CATE's complete suite of tools and functions. They have been tested for speed and accuracy. \r\nThe pre-built version present in the release should work on most operating systems (Linux/ Unix based) and systems equipped with an Nvidia CUDA-enabled GPU.\r\n\r\nTry execution by:\r\n\r\n`./CATE` \r\n\r\nYou can always perform a build of the project yourself using the following command below on the source code:\r\n\r\n`nvcc -std=c++17 *.cu *.cpp -o \"CATE\"`",
        "html_url": "https://github.com/theLongLab/CATE/releases/tag/1.0.0.00",
        "name": "1.0.0.00",
        "release_id": 91464757,
        "tag": "1.0.0.00",
        "tarball_url": "https://api.github.com/repos/theLongLab/CATE/tarball/1.0.0.00",
        "type": "Release",
        "url": "https://api.github.com/repos/theLongLab/CATE/releases/91464757",
        "value": "https://api.github.com/repos/theLongLab/CATE/releases/91464757",
        "zipball_url": "https://api.github.com/repos/theLongLab/CATE/zipball/1.0.0.00"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DeshanPerera",
          "type": "User"
        },
        "date_created": "2022-05-24T23:53:21Z",
        "date_published": "2022-05-25T02:55:57Z",
        "description": "Pre-release BETA.\r\nAll functions are present.\r\nAll three neutrality tests at once function has been added.\r\n\r\nTajima's D, Fu and Li, and Fay and Wu tests are fully tested.\r\n\r\nThe accuracy of other functions in varying queries is yet to be determined.",
        "html_url": "https://github.com/theLongLab/CATE/releases/tag/v0.0.0.03",
        "name": "0.0.0.03",
        "release_id": 67755714,
        "tag": "v0.0.0.03",
        "tarball_url": "https://api.github.com/repos/theLongLab/CATE/tarball/v0.0.0.03",
        "type": "Release",
        "url": "https://api.github.com/repos/theLongLab/CATE/releases/67755714",
        "value": "https://api.github.com/repos/theLongLab/CATE/releases/67755714",
        "zipball_url": "https://api.github.com/repos/theLongLab/CATE/zipball/v0.0.0.03"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DeshanPerera",
          "type": "User"
        },
        "date_created": "2022-05-19T16:43:35Z",
        "date_published": "2022-05-19T16:49:12Z",
        "description": "An error in the Mc Donald Kreitman Neutrality Index (NI) test was rectified.\r\n\r\nPre-release BETA.\r\nAll functions are present.\r\nTajima's D is fully tested.\r\n\r\nThe accuracy of other functions in varying queries is yet to be determined.",
        "html_url": "https://github.com/theLongLab/CATE/releases/tag/v0.0.0.02",
        "name": "0.0.0.02",
        "release_id": 67301035,
        "tag": "v0.0.0.02",
        "tarball_url": "https://api.github.com/repos/theLongLab/CATE/tarball/v0.0.0.02",
        "type": "Release",
        "url": "https://api.github.com/repos/theLongLab/CATE/releases/67301035",
        "value": "https://api.github.com/repos/theLongLab/CATE/releases/67301035",
        "zipball_url": "https://api.github.com/repos/theLongLab/CATE/zipball/v0.0.0.02"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DeshanPerera",
          "type": "User"
        },
        "date_created": "2022-04-29T23:28:36Z",
        "date_published": "2022-04-29T23:34:25Z",
        "description": "Pre-release ALPHA.\r\nAll functions are present.\r\nTajima's D is fully tested.\r\n\r\nThe accuracy of other functions in varying queries is yet to be determined. \r\n",
        "html_url": "https://github.com/theLongLab/CATE/releases/tag/v0.0.0.01",
        "name": "0.0.0.01",
        "release_id": 65720865,
        "tag": "v0.0.0.01",
        "tarball_url": "https://api.github.com/repos/theLongLab/CATE/tarball/v0.0.0.01",
        "type": "Release",
        "url": "https://api.github.com/repos/theLongLab/CATE/releases/65720865",
        "value": "https://api.github.com/repos/theLongLab/CATE/releases/65720865",
        "zipball_url": "https://api.github.com/repos/theLongLab/CATE/zipball/v0.0.0.01"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "1. CUDA capable hardware\n2. LINUX or UNIX based kernel\n3. NVIDIA's CUDA toolkit (nvcc compiler)\n4. C++ compiler (gcc compiler)\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to RUN",
        "parent_header": [
          "CATE (CUDA Accelerated Testing of Evolution)"
        ],
        "type": "Text_excerpt",
        "value": "CATE is a command-line-based software. Its available functions include six different tests on evolution and a series of tools for editing and processing FASTA and VCF files.\n\nThe six tests on evolution are:\n1. Tajima\u2019s D\n2. Fu and Li's D, D*, F, and F \\*\n3. Fay and Wu\u2019s H and E\n4. McDonald\u2013Kreitman test\n5. Fixation Index\n6. Extended Haplotype Homozygosity\n\nCATE comes equipped with Apollo, our viral simulator that spans from network level to individual virion resolution complete with within-host dynamics. Apollo comes with its main simulation function and five additional utility tools.\n\n1. _Apollo simulator_\n2. Haplotype retriever\n3. Pedigree retriever\n4. Segregating sites matcher\n5. Base substitution model to JSON\n6. Recombination hotspots to JSON\n\n---\n\nCurrently, the program's executable is called:  \n>Test_Main\n\nTo run the software you need a JSON-style parameters file. An example is provided above:\n\n> *parameters.json*.\n\n*The parameters file is used to specify all input and output locations as well as the gene list file locations. Each function's execution can be customized individually using the parameters file.*\n\nThe typical syntax for program __execution__ is as follows (example below shows running the Tajima's function):\n> program_executable --function parameter_file\n\n> program_executable -f parameter_file\n\n__Example:__\n\n>./Test_Main -t parameters.json\n\nThe __HELP__ menu will list all available functions and how each function can be executed. It can be accessed by simply typing -h as the function as shown below:\n\n> ./Test_Main -h\n\n---"
      },
      "source": "https://raw.githubusercontent.com/theLongLab/CATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:45:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}