{
  "application_domain": [
    {
      "confidence": 10.92,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to download necessary reference files",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "The module of whole"
        ],
        "type": "Text_excerpt",
        "value": "You need to download the necessary reference files before running Seq2Neo:\n\n- Download three BQSR known sites files used to recalibrate base quality score, those files should be put in a directory like **bqsr_resource**, and index files are needed to accelerate the speed of Seq2Neo.  The commands are following:\n\n  ```\n  mkdir bqsr_resource && cd bqsr_resource\n  prefix=ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/\n  wget ${prefix}dbsnp_146.hg38.vcf.gz\n  wget ${prefix}dbsnp_146.hg38.vcf.gz.tbi\n  wget ${prefix}1000G_phase1.snps.high_confidence.hg38.vcf.gz\n  wget ${prefix}1000G_phase1.snps.high_confidence.hg38.vcf.gz.tbi\n  wget ${prefix}Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\n  wget ${prefix}Mills_and_1000G_gold_standard.indels.hg38.vcf.gz.tbi\n  ```\n\n- Download hg38 datasets of annovar via the following commands:\n\n  ```\n  cd /path/to/annovar\n  perl annotate_variation.pl --downdb --webfrom annovar --buildver hg38 refGene humandb/\n  ```\n\n- Download the necessary reference files used to call Mutect2, those files should be put in a directory like **mutect2_resource**, and index files are needed to accelerate the speed of Seq2Neo.  The commands are following:\n\n  ```\n  mkdir mutect2_resource && cd mutect2_resource\n  prefix=ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/Mutect2/\n  wget ${prefix}af-only-gnomad.hg38.vcf.gz\n  wget ${prefix}af-only-gnomad.hg38.vcf.gz.tbi\n  wget ${prefix}GetPileupSummaries/small_exac_common_3.hg38.vcf.gz\n  wget ${prefix}GetPileupSummaries/small_exac_common_3.hg38.vcf.gz.tbi\n  \n  prefix=https://storage.googleapis.com/gatk-best-practices/somatic-hg38/\n  wget ${prefix}1000g_pon.hg38.vcf.gz\n  wget ${prefix}1000g_pon.hg38.vcf.gz.tbi\n  ```\n\n- Download the AGFusion database and pyensembl reference genome, we select the max release of 95 to download:\n\n  ```\n  pyensembl install --species homo_sapiens --release 95\n  agfusion download -g hg38 --release 95 \n  ```\n\n- Download the genome library of STAR-Fusion (1.10.1) to call gene fusions via the following commands:\n\n  ```\n  ref=GRCh38_gencode_v37_CTAT_lib_Mar012021.plug-n-play.tar.gz\n  wget https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/__genome_libs_StarFv1.10/${ref}\n  tar -zxvf ${ref}\n  ```\n\n  The size of the compressed genome library is about 31 G, Chinese researchers can download it at a higher speed by using some useful tools like Thunder [Official Website](https://www.xunlei.com/).\n\n- Download the human reference genome and build indexes via the following commands:\n\n  ```\n  mkdir ref_genome && cd ref_genome\n  seq2neo download --build hg38 --dir .\n  ```\n  \n  ----\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XSLiuLab/Seq2Neo"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-27T08:28:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-22T12:20:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.998761386896629,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Neoantigens derived from somatic DNA alterations are ideal cancer-specific targets. However, not all somatic DNA mutations can result in immunogenicity in cancer cells, and efficient tools for predicting the immunogenicity of neoepitope are still urgently needed. Here we present the Seq2Neo pipeline, which provides a one-stop solution for neoepitope features prediction from raw sequencing data, and neoantigens derived from different types of genome DNA alterations, including point mutations, insertion deletions, and gene fusions are supported. Importantly a convolutional neural networks (CNN) based model has been trained to predict the immunogenicity of neoepitope. And this model shows improved performance compared with currently available tools in immunogenicity prediction in independent datasets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9271721389242412,
      "result": {
        "original_header": "The module of immuno",
        "type": "Text_excerpt",
        "value": "The module allows users to predict the immunogenicity scores of provided peptides and HLAs. \nFor example, if you want to query a single peptide SVQIISCQY along with HLA-A30:02. You need to type:\n```\nseq2neo immuno --mode single --epitope SVQIISCQY --hla HLA-A30:02\n```\nIf you want to query multiple epitopes, you just need to prepare a csv format file like this:\n```\nPep,HLA\nADTSEARPFW,HLA-B44:02\nADVLSPVLVK,HLA-A03:01\nAELEEVSSY,HLA-B44:02\nAELLAKQLY,HLA-B44:02\nAEQQGACPGL,HLA-B44:02\nAEVSVLYTV,HLA-B44:02\nAEYQDMHSY,HLA-B44:02\nAINRPTVLK,HLA-A03:01\n```\nThen you can run:\n```\nseq2neo immuno --mode multiple --inputfile data/test_input.csv --outdir data/\n```\n \nYou will get two files, **immuno_input_file.csv** and **cnn_results.csv**. The former includes the predictions of TAP and IC50 performed by netCTLpan and netMHCpan4.1b, respectively, and the latter is the final results including immunogenicity scores.\n \n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to download necessary reference files",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "The module of whole"
        ],
        "type": "Text_excerpt",
        "value": "You need to download the necessary reference files before running Seq2Neo:\n\n- Download three BQSR known sites files used to recalibrate base quality score, those files should be put in a directory like **bqsr_resource**, and index files are needed to accelerate the speed of Seq2Neo.  The commands are following:\n\n  ```\n  mkdir bqsr_resource && cd bqsr_resource\n  prefix=ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/\n  wget ${prefix}dbsnp_146.hg38.vcf.gz\n  wget ${prefix}dbsnp_146.hg38.vcf.gz.tbi\n  wget ${prefix}1000G_phase1.snps.high_confidence.hg38.vcf.gz\n  wget ${prefix}1000G_phase1.snps.high_confidence.hg38.vcf.gz.tbi\n  wget ${prefix}Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\n  wget ${prefix}Mills_and_1000G_gold_standard.indels.hg38.vcf.gz.tbi\n  ```\n\n- Download hg38 datasets of annovar via the following commands:\n\n  ```\n  cd /path/to/annovar\n  perl annotate_variation.pl --downdb --webfrom annovar --buildver hg38 refGene humandb/\n  ```\n\n- Download the necessary reference files used to call Mutect2, those files should be put in a directory like **mutect2_resource**, and index files are needed to accelerate the speed of Seq2Neo.  The commands are following:\n\n  ```\n  mkdir mutect2_resource && cd mutect2_resource\n  prefix=ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/Mutect2/\n  wget ${prefix}af-only-gnomad.hg38.vcf.gz\n  wget ${prefix}af-only-gnomad.hg38.vcf.gz.tbi\n  wget ${prefix}GetPileupSummaries/small_exac_common_3.hg38.vcf.gz\n  wget ${prefix}GetPileupSummaries/small_exac_common_3.hg38.vcf.gz.tbi\n  \n  prefix=https://storage.googleapis.com/gatk-best-practices/somatic-hg38/\n  wget ${prefix}1000g_pon.hg38.vcf.gz\n  wget ${prefix}1000g_pon.hg38.vcf.gz.tbi\n  ```\n\n- Download the AGFusion database and pyensembl reference genome, we select the max release of 95 to download:\n\n  ```\n  pyensembl install --species homo_sapiens --release 95\n  agfusion download -g hg38 --release 95 \n  ```\n\n- Download the genome library of STAR-Fusion (1.10.1) to call gene fusions via the following commands:\n\n  ```\n  ref=GRCh38_gencode_v37_CTAT_lib_Mar012021.plug-n-play.tar.gz\n  wget https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/__genome_libs_StarFv1.10/${ref}\n  tar -zxvf ${ref}\n  ```\n\n  The size of the compressed genome library is about 31 G, Chinese researchers can download it at a higher speed by using some useful tools like Thunder [Official Website](https://www.xunlei.com/).\n\n- Download the human reference genome and build indexes via the following commands:\n\n  ```\n  mkdir ref_genome && cd ref_genome\n  seq2neo download --build hg38 --dir .\n  ```\n  \n  ----\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The module of download",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction"
        ],
        "type": "Text_excerpt",
        "value": "``` plain\nusage: seq2neo download [-h] [--build {hg19,hg38}] [--dir [DIR]]\n\nRun download module\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --build {hg19,hg38}  which build to download, hg38 / hg19 (default: hg38)\n  --dir [DIR]          where to store (default: .)\n```\n\nThis module will help users download and index human reference genome from GATK. The usage of the module is:\n\n```\nseq2neo download --build hg38 --dir .\n```\n\n-------------\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XSLiuLab/Seq2Neo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XSLiuLab/Seq2Neo/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XSLiuLab/Seq2Neo"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction"
        ],
        "type": "Text_excerpt",
        "value": "Seq2Neo runs on a Linux operation system like the CentOS system (recommended), and it is open-source software under an academic free license (AFL) v3.0.\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We strongly recommend using the conda command line for installation as this will solve dependencies automatically. The web of the package is https://anaconda.org/liuxslab/seq2neo. \n\n1. Firstly, you need to install the [Anaconda](https://www.anaconda.com/) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html#) (recommended), and set channels in the `~/.condarc` file like this:\n\n   ```\n   channels:\n     - conda-forge\n     - bioconda\n     - menpo\n     - main\n     - r\n     - msys2\n     - pytorch\n     - pytorch-lts\n     - simpleitk\n   show_channel_urls: true\n   ```\n   \n   You can replace those with Tsinghua mirrors or others.\n   \n2. Secondly, you should execute the following commands to create a new environment named Seq2Neo or other you like on your Linux system, and then activate it:\n\n   ``` shell\n   conda create -n Seq2Neo\n   conda activate Seq2Neo\n   ```\n\n3. Thirdly, you can install the package through the following conda command:\n\n   ```shell\n   conda install -c liuxslab seq2neo\n   ```\n\n4. Finally, please installation of following packages manually due to the reasons of permission or others:\n\n   - Annovar == latest  [ANNOVAR website (openbioinformatics.org)](https://www.openbioinformatics.org/annovar/annovar_download_form.php)\n   - HLAHD == 1.4.0  [HLA-HD (kyoto-u.ac.jp)](https://www.genome.med.kyoto-u.ac.jp/HLA-HD/)\n   - netCTLpan == 1.1.b [NetCTLpan - 1.1 - Services - DTU Health Tech](https://services.healthtech.dtu.dk/service.php?NetCTLpan-1.1)\n   - netMHCpan == 4.1.b  [NetMHCpan - 4.1 - Services - DTU Health Tech](https://services.healthtech.dtu.dk/service.php?NetMHCpan-4.1)\n   - STAR-Fusion == 1.10.1 [STAR-Fusion/STAR-Fusion: STAR-Fusion codebase (github.com)](https://github.com/STAR-Fusion/STAR-Fusion)\n\n   Following corresponding official instructions to install those packages on your system. \n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We also provide a docker image ([liuxslab/seq2neo - Docker Image | Docker Hub](https://hub.docker.com/r/liuxslab/seq2neo)) that contains all package dependencies.  You need to install docker in advance on your system. Then the command `docker pull liuxslab/seq2neo:latest` will pull the latest seq2neo image into your local machine. You can put resource files required by BWA, Mutect2, and others in one folder **resource_files**, which has several classified folders like **bqsr_resource**, **mutect2_resource**, **starfusion_resource**, **ref_genome** ( reference to the section of \"The module of whole\"), then execute the following commands to start a docker container and activate Seq2Neo conda environment including seq2neo and its dependencies:\n\n```\ndocker run -it -v /path/to/resource_files:/home/resource_files liuxslab/seq2neo:latest /bin/bash\ncd /home/  # enter home directory so you can find the binding resource files\nconda activate Seq2Neo\n```\n\n In the Seq2Neo environment, you can run seq2neo commands, please refer to the following section of \"The module of whole\".\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip (not recommend)",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can install the stable release of **Seq2Neo** with:\n\n> pip install Seq2Neo\n\nHowever, you should install all of the dependencies manually. It includes the following softwares and packages that should be installed in advance:\n\n```\n- bamtools=2.5.1\n- bwa=0.7.17\n- fastp=0.23.2\n- perl=5.26.2=h470a237_0\n- samtools=1.15.1\n- star=2.7.8a\n- tpmcalculator=0.0.4\n- vcftools=0.1.16\n- bowtie2 == 2.3.5\n- gatk == 4.2.5\n```\n\nThen, you should also install the packages mentioned in the Conda section.\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9898704997284109,
      "result": {
        "original_header": "The module of immuno",
        "type": "Text_excerpt",
        "value": "For example, if you want to query a single peptide SVQIISCQY along with HLA-A30:02. You need to type:\n```\nseq2neo immuno --mode single --epitope SVQIISCQY --hla HLA-A30:02\n```\nIf you want to query multiple epitopes, you just need to prepare a csv format file like this:\n```\nPep,HLA\nADTSEARPFW,HLA-B44:02\nADVLSPVLVK,HLA-A03:01\nAELEEVSSY,HLA-B44:02\nAELLAKQLY,HLA-B44:02\nAEQQGACPGL,HLA-B44:02\nAEVSVLYTV,HLA-B44:02\nAEYQDMHSY,HLA-B44:02\nAINRPTVLK,HLA-A03:01\n```\nThen you can run:\n```\nseq2neo immuno --mode multiple --inputfile data/test_input.csv --outdir data/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8081453041584737,
      "result": {
        "original_header": "The module of immuno",
        "type": "Text_excerpt",
        "value": "For example, if you want to query a single peptide SVQIISCQY along with HLA-A30:02. You need to type:\n```\nseq2neo immuno --mode single --epitope SVQIISCQY --hla HLA-A30:02\n```\nIf you want to query multiple epitopes, you just need to prepare a csv format file like this:\n```\nPep,HLA\nADTSEARPFW,HLA-B44:02\nADVLSPVLVK,HLA-A03:01\nAELEEVSSY,HLA-B44:02\nAELLAKQLY,HLA-B44:02\nAEQQGACPGL,HLA-B44:02\nAEVSVLYTV,HLA-B44:02\nAEYQDMHSY,HLA-B44:02\nAINRPTVLK,HLA-A03:01\n```\nThen you can run:\n```\nseq2neo immuno --mode multiple --inputfile data/test_input.csv --outdir data/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XSLiuLab/Seq2Neo/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Academic Free License v3.0",
        "spdx_id": "AFL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/afl-3.0",
        "value": "https://api.github.com/licenses/afl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Academic Free License (\"AFL\") v. 3.0\n\nThis Academic Free License (the \"License\") applies to any original work of\nauthorship (the \"Original Work\") whose owner (the \"Licensor\") has placed the\nfollowing licensing notice adjacent to the copyright notice for the Original\nWork:\n\n  Licensed under the Academic Free License version 3.0\n\n1) Grant of Copyright License. Licensor grants You a worldwide, royalty-free,\nnon-exclusive, sublicensable license, for the duration of the copyright, to do\nthe following:\n\n  a) to reproduce the Original Work in copies, either alone or as part of a\n  collective work;\n\n  b) to translate, adapt, alter, transform, modify, or arrange the Original\n  Work, thereby creating derivative works (\"Derivative Works\") based upon the\n  Original Work;\n\n  c) to distribute or communicate copies of the Original Work and Derivative\n  Works to the public, under any license of your choice that does not\n  contradict the terms and conditions, including Licensor's reserved rights\n  and remedies, in this Academic Free License;\n\n  d) to perform the Original Work publicly; and\n\n  e) to display the Original Work publicly.\n\n2) Grant of Patent License. Licensor grants You a worldwide, royalty-free,\nnon-exclusive, sublicensable license, under patent claims owned or controlled\nby the Licensor that are embodied in the Original Work as furnished by the\nLicensor, for the duration of the patents, to make, use, sell, offer for sale,\nhave made, and import the Original Work and Derivative Works.\n\n3) Grant of Source Code License. The term \"Source Code\" means the preferred\nform of the Original Work for making modifications to it and all available\ndocumentation describing how to modify the Original Work. Licensor agrees to\nprovide a machine-readable copy of the Source Code of the Original Work along\nwith each copy of the Original Work that Licensor distributes. Licensor\nreserves the right to satisfy this obligation by placing a machine-readable\ncopy of the Source Code in an information repository reasonably calculated to\npermit inexpensive and convenient access by You for as long as Licensor\ncontinues to distribute the Original Work.\n\n4) Exclusions From License Grant. Neither the names of Licensor, nor the names\nof any contributors to the Original Work, nor any of their trademarks or\nservice marks, may be used to endorse or promote products derived from this\nOriginal Work without express prior permission of the Licensor. Except as\nexpressly stated herein, nothing in this License grants any license to\nLicensor's trademarks, copyrights, patents, trade secrets or any other\nintellectual property. No patent license is granted to make, use, sell, offer\nfor sale, have made, or import embodiments of any patent claims other than the\nlicensed claims defined in Section 2. No license is granted to the trademarks\nof Licensor even if such marks are included in the Original Work. Nothing in\nthis License shall be interpreted to prohibit Licensor from licensing under\nterms different from this License any Original Work that Licensor otherwise\nwould have a right to license.\n\n5) External Deployment. The term \"External Deployment\" means the use,\ndistribution, or communication of the Original Work or Derivative Works in any\nway such that the Original Work or Derivative Works may be used by anyone\nother than You, whether those works are distributed or communicated to those\npersons or made available as an application intended for use over a network.\nAs an express condition for the grants of license hereunder, You must treat\nany External Deployment by You of the Original Work or a Derivative Work as a\ndistribution under section 1(c).\n\n6) Attribution Rights. You must retain, in the Source Code of any Derivative\nWorks that You create, all copyright, patent, or trademark notices from the\nSource Code of the Original Work, as well as any notices of licensing and any\ndescriptive text identified therein as an \"Attribution Notice.\" You must cause\nthe Source Code for any Derivative Works that You create to carry a prominent\nAttribution Notice reasonably calculated to inform recipients that You have\nmodified the Original Work.\n\n7) Warranty of Provenance and Disclaimer of Warranty. Licensor warrants that\nthe copyright in and to the Original Work and the patent rights granted herein\nby Licensor are owned by the Licensor or are sublicensed to You under the\nterms of this License with the permission of the contributor(s) of those\ncopyrights and patent rights. Except as expressly stated in the immediately\npreceding sentence, the Original Work is provided under this License on an \"AS\nIS\" BASIS and WITHOUT WARRANTY, either express or implied, including, without\nlimitation, the warranties of non-infringement, merchantability or fitness for\na particular purpose. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK\nIS WITH YOU. This DISCLAIMER OF WARRANTY constitutes an essential part of this\nLicense. No license to the Original Work is granted by this License except\nunder this disclaimer.\n\n8) Limitation of Liability. Under no circumstances and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise, shall the\nLicensor be liable to anyone for any indirect, special, incidental, or\nconsequential damages of any character arising as a result of this License or\nthe use of the Original Work including, without limitation, damages for loss\nof goodwill, work stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses. This limitation of liability shall not\napply to the extent applicable law prohibits such limitation.\n\n9) Acceptance and Termination. If, at any time, You expressly assented to this\nLicense, that assent indicates your clear and irrevocable acceptance of this\nLicense and all of its terms and conditions. If You distribute or communicate\ncopies of the Original Work or a Derivative Work, You must make a reasonable\neffort under the circumstances to obtain the express assent of recipients to\nthe terms of this License. This License conditions your rights to undertake\nthe activities listed in Section 1, including your right to create Derivative\nWorks based upon the Original Work, and doing so without honoring these terms\nand conditions is prohibited by copyright law and international treaty.\nNothing in this License is intended to affect copyright exceptions and\nlimitations (including \"fair use\" or \"fair dealing\"). This License shall\nterminate immediately and You may no longer exercise any of the rights granted\nto You by this License upon your failure to honor the conditions in Section\n1(c).\n\n10) Termination for Patent Action. This License shall terminate automatically\nand You may no longer exercise any of the rights granted to You by this\nLicense as of the date You commence an action, including a cross-claim or\ncounterclaim, against Licensor or any licensee alleging that the Original Work\ninfringes a patent. This termination provision shall not apply for an action\nalleging patent infringement by combinations of the Original Work with other\nsoftware or hardware.\n\n11) Jurisdiction, Venue and Governing Law. Any action or suit relating to this\nLicense may be brought only in the courts of a jurisdiction wherein the\nLicensor resides or in which Licensor conducts its primary business, and under\nthe laws of that jurisdiction excluding its conflict-of-law provisions. The\napplication of the United Nations Convention on Contracts for the\nInternational Sale of Goods is expressly excluded. Any use of the Original\nWork outside the scope of this License or after its termination shall be\nsubject to the requirements and penalties of copyright or patent law in the\nappropriate jurisdiction. This section shall survive the termination of this\nLicense.\n\n12) Attorneys' Fees. In any action to enforce the terms of this License or\nseeking damages relating thereto, the prevailing party shall be entitled to\nrecover its costs and expenses, including, without limitation, reasonable\nattorneys' fees and costs incurred in connection with such action, including\nany appeal of such action. This section shall survive the termination of this\nLicense.\n\n13) Miscellaneous. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent necessary\nto make it enforceable.\n\n14) Definition of \"You\" in This License. \"You\" throughout this License,\nwhether in upper or lower case, means an individual or a legal entity\nexercising rights under, and complying with all of the terms of, this License.\nFor legal entities, \"You\" includes any entity that controls, is controlled by,\nor is under common control with you. For purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the direction or\nmanagement of such entity, whether by contract or otherwise, or (ii) ownership\nof fifty percent (50%) or more of the outstanding shares, or (iii) beneficial\nownership of such entity.\n\n15) Right to Use. You may use the Original Work in all ways not otherwise\nrestricted or conditioned by this License or by law, and Licensor promises not\nto interfere with or be responsible for such uses by You.\n\n16) Modification of This License. This License is Copyright \u00a9 2005 Lawrence\nRosen. Permission is granted to copy, distribute, or communicate this License\nwithout modification. Nothing in this License permits You to modify this\nLicense as applied to the Original Work or to Derivative Works. However, You\nmay modify the text of this License and copy, distribute or communicate your\nmodified version (the \"Modified License\") and apply it to other original works\nof authorship subject to the following conditions: (i) You may not indicate in\nany way that your Modified License is the \"Academic Free License\" or \"AFL\" and\nyou may not use those names in the name of your Modified License; (ii) You\nmust replace the notice specified in the first paragraph above with the notice\n\"Licensed under <insert your license name here>\" or with a notice of your own\nthat is not confusingly similar to the notice in this License; and (iii) You\nmay not claim that your original works are open source software unless your\nModified License has been approved by Open Source Initiative (OSI) and You\ncomply with its license review and certification process."
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Seq2Neo"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "XSLiuLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 139112,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 947,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "diaokx",
          "type": "User"
        },
        "date_created": "2023-02-17T07:27:51Z",
        "date_published": "2023-02-17T08:12:44Z",
        "description": "Seq2Neo can run with only tumor DNA-seq data. However, tumor RNA-seq data and normal DNA-seq data can be added to Seq2Neo, and the pipeline will intergate those data.",
        "html_url": "https://github.com/XSLiuLab/Seq2Neo/releases/tag/v2.1",
        "name": "Seq2Neo v2.1",
        "release_id": 92806417,
        "tag": "v2.1",
        "tarball_url": "https://api.github.com/repos/XSLiuLab/Seq2Neo/tarball/v2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/XSLiuLab/Seq2Neo/releases/92806417",
        "value": "https://api.github.com/repos/XSLiuLab/Seq2Neo/releases/92806417",
        "zipball_url": "https://api.github.com/repos/XSLiuLab/Seq2Neo/zipball/v2.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction",
          "The module of whole"
        ],
        "type": "Text_excerpt",
        "value": "Suppose you have the following files, they are tumor RNA-seq and WES data, normal WES data, VCF and corresponding sam and sort_bam files. Then you can run Seq2Neo to obtain potential neoantigens in different situations. The following is some examples:\n\n- Have **tumor dna, tumor rna** and **normal dna** fastq files\n\n  ```bash\n  seq2neo whole --data-type fastq --ref Homo_sapiens_assembly38.fasta --normal-dna normal_dna_1.fastq normal_dna_2.fastq --tumor-dna tumor_dna_1.fastq tumor_dna_2.fastq --tumor-rna tumor_rna_1.fastq tumor_rna_2.fastq --normal-name normal_name --tumor-name tumor_name --annovar-db-dir annovar/humandb/ --known-site-dir bqsr_resource/ --mutect2-dataset-dir mutect2_resource/ --genome-lib-dir GRCh38_gencode_v37_CTAT_lib_Mar012021.plug-n-play/ctat_genome_lib_build_dir/ --agfusion-db agfusion.homo_sapiens.95.db --pon 1000g_pon.hg38.vcf.gz --len 8 9 10 11 --threadN 15 --java-options '\"-Xmx50G\"' --hlahd-dir hlahd.1.4.0/ --out out/\n  ```\n\n- Have **tumor dna** and **tumor rna** fastq files\n\n  ```bash\n  seq2neo whole --data-type without-normal-dna --ref Homo_sapiens_assembly38.fasta --tumor-dna tumor_dna_1.fastq tumor_dna_2.fastq --tumor-rna tumor_rna_1.fastq tumor_rna_2.fastq --tumor-name tumor_name --annovar-db-dir annovar/humandb/ --known-site-dir bqsr_resource/ --mutect2-dataset-dir mutect2_resource/ --genome-lib-dir GRCh38_gencode_v37_CTAT_lib_Mar012021.plug-n-play/ctat_genome_lib_build_dir/ --agfusion-db agfusion.homo_sapiens.95.db --pon 1000g_pon.hg38.vcf.gz --len 8 9 --threadN 15 --java-options '\"-Xmx50G\"' --hlahd-dir hlahd.1.4.0/ --out out/\n  ```\n\n- Have **tumor dna** and **normal dna** fastq files\n\n  ```bash\n  seq2neo whole --data-type without-tumor-rna --ref Homo_sapiens_assembly38.fasta --normal-dna normal_dna_1.fastq normal_dna_2.fastq --tumor-dna tumor_dna_1.fastq tumor_dna_2.fastq --normal-name normal_name --tumor-name tumor_name --annovar-db-dir annovar/humandb/ --known-site-dir bqsr_resource/ --mutect2-dataset-dir mutect2_resource/ --pon 1000g_pon.hg38.vcf.gz --len 8 9 --threadN 15 --java-options '\"-Xmx50G\"' --hlahd-dir hlahd.1.4.0/ --out out/\n  ```\n\n- Only have **tumor dna** fastq files\n\n  ```bash\n  seq2neo whole --data-type only-tumor-dna --ref Homo_sapiens_assembly38.fasta --tumor-dna tumor_dna_1.fastq tumor_dna_2.fastq --tumor-name tumor_name --annovar-db-dir annovar/humandb/ --known-site-dir bqsr_resource/ --mutect2-dataset-dir mutect2_resource/ --pon 1000g_pon.hg38.vcf.gz --len 9 11 --threadN 15 --java-options '\"-Xmx50G\"' --hlahd-dir hlahd.1.4.0/ --out out/\n  ```\n\n- Only have a **vcf** file\n\n  ```bash\n  seq2neo whole --data-type vcf --ref Homo_sapiens_assembly38.fasta --tumor-name tumor_name --annovar-db-dir annovar/humandb/ --threadN 10 --hlas HLA-A01:01 HLA-B44:02 --len 8 9 --out out/ --vcf xxx.vcf\n  ```\n\nThe final result of the module whole is in the folder of **final_result**, including **final_results_neo.txt** and **filtered_neo.txt**. The final_results_neo.txt includes all peptides from the detected mutation sites. After applying the criteria of TAP>0, TPM>0 (if available), immunogenicity>0.5 and IC50<=500, filtered_neo.txt is acquired (ranking by IC50).\n\nNotice: if you don not want to use the predicted HLAs, you can specify manually through **--hlas** argument.\n\n-----------------------\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:19:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Seq2Neo: a comprehensive pipeline for cancer neoantigen immunogenicity prediction"
        ],
        "type": "Text_excerpt",
        "value": "Seq2Neo consists of 3 modules, which are whole, download, and immuno. The module of **whole** is responsible for running the entire process, and contains several subprocesses. The **download** module can download a specified version of human reference genome (hg19 / hg38) from the GATK and index it. The last module of **immuno** supports the prediction of immunogenicity score of specified peptides and MHCs:\n\n``` plain\nusage: seq2neo [-h] {whole,immuno,download} ...\n\nA pipeline from sequence to neoantigen prediction\n\npositional arguments:\n  {whole,immuno,download}\n    whole               Run whole pipeline(Seq2Neo) with fastq/bam/sam/vcf file\n    immuno              Run immunogenicity prediction with specified peptides and MHCs\n    download            downloading human reference genome from GATK and building indexes\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nThanks for using Seq2Neo\n```\n"
      },
      "source": "https://raw.githubusercontent.com/XSLiuLab/Seq2Neo/main/README.md",
      "technique": "header_analysis"
    }
  ]
}