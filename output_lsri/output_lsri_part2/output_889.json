{
  "application_domain": [
    {
      "confidence": 33.75,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "scATACpipe was originally designed and written by Kai Hu, Haibo Liu, and Lihua Julie Zhu.\n\nWe thank the following people for their extensive assistance in the development\nof this pipeline: Nathan Lawson.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "Please cite scATACpipe [to be added] if you use it for your research.\n\nA ***Template of Method*** can be found [here](https://github.com/hukai916/scATACpipe/blob/main/docs/template_of_method.docx).\n\nA complete list of references for the tools used by scATACpipe can be found [here](https://github.com/hukai916/scATACpipe/blob/main/docs/scATACpipe_module_references.xlsx).\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Code of Conduct at nf-core (v1.0)\n\n## Our Pledge\n\nIn the interest of fostering an open, collaborative, and welcoming environment, we as contributors and maintainers of nf-core, pledge to making participation in our projects and community a harassment-free experience for everyone, regardless of:\n\n- Age\n- Body size\n- Familial status\n- Gender identity and expression\n- Geographical location\n- Level of experience\n- Nationality and national origins\n- Native language\n- Physical and neurological ability\n- Race or ethnicity\n- Religion\n- Sexual identity and orientation\n- Socioeconomic status\n\nPlease note that the list above is alphabetised and is therefore not ranked in any order of preference or importance.\n\n## Preamble\n\n> Note: This Code of Conduct (CoC) has been drafted by the nf-core Safety Officer and been edited after input from members of the nf-core team and others. \"We\", in this document, refers to the Safety Officer and members of the nf-core core team, both of whom are deemed to be members of the nf-core community and are therefore required to abide by this Code of Conduct. This document will amended periodically to keep it up-to-date, and in case of any dispute, the most current version will apply.\n\nAn up-to-date list of members of the nf-core core team can be found [here](https://nf-co.re/about). Our current safety officer is Renuka Kudva.\n\nnf-core is a young and growing community that welcomes contributions from anyone with a shared vision for [Open Science Policies](https://www.fosteropenscience.eu/taxonomy/term/8). Open science policies encompass inclusive behaviours and we strive to build and maintain a safe and inclusive environment for all individuals.\n\nWe have therefore adopted this code of conduct (CoC), which we require all members of our community and attendees in nf-core events to adhere to in all our workspaces at all times. Workspaces include but are not limited to Slack, meetings on Zoom, Jitsi, YouTube live etc.\n\nOur CoC will be strictly enforced and the nf-core team reserve the right to exclude participants who do not comply with our guidelines from our workspaces and future nf-core activities.\n\nWe ask all members of our community to help maintain a supportive and productive workspace and to avoid behaviours that can make individuals feel unsafe or unwelcome. Please help us maintain and uphold this CoC.\n\nQuestions, concerns or ideas on what we can include? Contact safety [at] nf-co [dot] re\n\n## Our Responsibilities\n\nThe safety officer is responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behaviour.\n\nThe safety officer in consultation with the nf-core core team have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nMembers of the core team or the safety officer who violate the CoC will be required to recuse themselves pending investigation. They will not have access to any reports of the violations and be subject to the same actions as others in violation of the CoC.\n\n## When are where does this Code of Conduct apply?\n\nParticipation in the nf-core community is contingent on following these guidelines in all our workspaces and events. This includes but is not limited to the following listed alphabetically and therefore in no order of preference:\n\n- Communicating with an official project email address.\n- Communicating with community members within the nf-core Slack channel.\n- Participating in hackathons organised by nf-core (both online and in-person events).\n- Participating in collaborative work on GitHub, Google Suite, community calls, mentorship meetings, email correspondence.\n- Participating in workshops, training, and seminar series organised by nf-core (both online and in-person events). This applies to events hosted on web-based platforms such as Zoom, Jitsi, YouTube live etc.\n- Representing nf-core on social media. This includes both official and personal accounts.\n\n## nf-core cares \ud83d\ude0a\n\nnf-core's CoC and expectations of respectful behaviours for all participants (including organisers and the nf-core team) include but are not limited to the following (listed in alphabetical order):\n\n- Ask for consent before sharing another community member\u2019s personal information (including photographs) on social media.\n- Be respectful of differing viewpoints and experiences. We are all here to learn from one another and a difference in opinion can present a good learning opportunity.\n- Celebrate your accomplishments at events! (Get creative with your use of emojis \ud83c\udf89 \ud83e\udd73 \ud83d\udcaf \ud83d\ude4c !)\n- Demonstrate empathy towards other community members. (We don\u2019t all have the same amount of time to dedicate to nf-core. If tasks are pending, don\u2019t hesitate to gently remind members of your team. If you are leading a task, ask for help if you feel overwhelmed.)\n- Engage with and enquire after others. (This is especially important given the geographically remote nature of the nf-core community, so let\u2019s do this the best we can)\n- Focus on what is best for the team and the community. (When in doubt, ask)\n- Graciously accept constructive criticism, yet be unafraid to question, deliberate, and learn.\n- Introduce yourself to members of the community. (We\u2019ve all been outsiders and we know that talking to strangers can be hard for some, but remember we\u2019re interested in getting to know you and your visions for open science!)\n- Show appreciation and **provide clear feedback**. (This is especially important because we don\u2019t see each other in person and it can be harder to interpret subtleties. Also remember that not everyone understands a certain language to the same extent as you do, so **be clear in your communications to be kind.**)\n- Take breaks when you feel like you need them.\n- Using welcoming and inclusive language. (Participants are encouraged to display their chosen pronouns on Zoom or in communication on Slack.)\n\n## nf-core frowns on \ud83d\ude15\n\nThe following behaviours from any participants within the nf-core community (including the organisers) will be considered unacceptable under this code of conduct. Engaging or advocating for any of the following could result in expulsion from nf-core workspaces.\n\n- Deliberate intimidation, stalking or following and sustained disruption of communication among participants of the community. This includes hijacking shared screens through actions such as using the annotate tool in conferencing software such as Zoom.\n- \u201cDoxing\u201d i.e. posting (or threatening to post) another person\u2019s personal identifying information online.\n- Spamming or trolling of individuals on social media.\n- Use of sexual or discriminatory imagery, comments, or jokes and unwelcome sexual attention.\n- Verbal and text comments that reinforce social structures of domination related to gender, gender identity and expression, sexual orientation, ability, physical appearance, body size, race, age, religion or work experience.\n\n### Online Trolling\n\nThe majority of nf-core interactions and events are held online. Unfortunately, holding events online comes with the added issue of online trolling. This is unacceptable, reports of such behaviour will be taken very seriously, and perpetrators will be excluded from activities immediately.\n\nAll community members are required to ask members of the group they are working within for explicit consent prior to taking screenshots of individuals during video calls.\n\n## Procedures for Reporting CoC violations\n\nIf someone makes you feel uncomfortable through their behaviours or actions, report it as soon as possible.\n\nYou can reach out to members of the [nf-core core team](https://nf-co.re/about) and they will forward your concerns to the safety officer(s).\n\nIssues directly concerning members of the core team will be dealt with by other members of the core team and the safety manager, and possible conflicts of interest will be taken into account. nf-core is also in discussions about having an ombudsperson, and details will be shared in due course.\n\nAll reports will be handled with utmost discretion and confidentially.\n\n## Attribution and Acknowledgements\n\n- The [Contributor Covenant, version 1.4](http://contributor-covenant.org/version/1/4)\n- The [OpenCon 2017 Code of Conduct](http://www.opencon2017.org/code_of_conduct) (CC BY 4.0 OpenCon organisers, SPARC and Right to Research Coalition)\n- The [eLife innovation sprint 2020 Code of Conduct](https://sprint.elifesciences.org/code-of-conduct/)\n- The [Mozilla Community Participation Guidelines v3.1](https://www.mozilla.org/en-US/about/governance/policies/participation/) (version 3.1, CC BY-SA 3.0 Mozilla)\n\n## Changelog\n\n### v1.0 - March 12th, 2021\n\n- Complete rewrite from original [Contributor Covenant](http://contributor-covenant.org/) CoC.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hukai916/scATACpipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-06T21:03:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T01:44:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "**scATACpipe** is a bioinformatic pipeline for single-cell ATAC-seq (scATAC-seq) data analysis.\n\nThe pipeline is built using [Nextflow](https://www.nextflow.io), a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker / Singularity containers making installation trivial and results highly reproducible.\n\nThe development of the pipeline is guided by  [nf-core TEMPLATE](https://github.com/nf-core/tools/tree/master/nf_core/pipeline-template).\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pipeline Summary",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline consists of 2 relevant parts: preprocessing (from fastq to fragment file) and downstream analysis. If fragment files are directly available, you can choose to skip preprocessing and run downstream analysis only.\n\nFor preprocessing, 3 alternative strategies are available that are implemented in 3 sub-workflows respectively, namely, **PREPROCESS_DEFAULT**, **PREPROCESS_10XGENOMICS**, and **PREPROCESS_CHROMAP**. Each of them supports various input types that are demonstrated in further detail below (also see [usage](https://github.com/hukai916/scATACpipe/blob/main/docs/usage.md)).\n\nFor downstream analysis, we implemented **DOWNSTREAM_ARCHR** sub-workflow that integrates ArchR and other tools (e.g. AMULET for doublet detection).\n\nBelow is a simplified diagram to illustrate the design logic and functionalities of scATACpipe.\n<p align=\"center\">\n  <img src=\"docs/images/scATACpipe_workflow.svg\" width=\"500\" style=\"display: block; margin: 20px auto\">\n</p>\n\nThe main functionalities of each sub-workflow are summarized below. You can also refer to the [output - Result folders](https://github.com/hukai916/scATACpipe/blob/main/docs/output.md#result-folders) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PREPROCESS_DEFAULT:",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "Pipeline Summary"
        ],
        "type": "Text_excerpt",
        "value": "1. Add barcodes to reads\n2. Correct barcodes (optional)\n    * if `false`: skip barcode correction\n    * if `pheniqs` or `naive`: also filter out non-cells using \"inflection point\" method\n3. Trim off adapters\n4. Mapping\n    * download genome/annotation or use custom genome\n    * build genome index if not supplied\n5. Filter BAM\n6. Remove PCR duplicates\n7. Quality control\n8. Generate fragment file, *etc.*\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PREPROCESS_10XGENOMICS:",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "Pipeline Summary"
        ],
        "type": "Text_excerpt",
        "value": "1. Build 10XGENOMICS index if not supplied\n    * download genome/annotation or use custom genome\n2. Execute `cellranger_atac count` command\n3. Extract fragments from valid cells according to `filtered_peak_bc_matrix/barcodes.tsv`\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PREPROCESS_CHROMAP:",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "Pipeline Summary"
        ],
        "type": "Text_excerpt",
        "value": "1. Build Chromap index if not supplied\n    * download genome/annotation or use custom genome\n2. Execute `chromap --preset atac` command\n3. Filter out non-cells\n\nNote that no BAM file will be generated for PREPROCESS_CHROMAP option.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DOWNSTREAM_ARCHR:",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "Pipeline Summary"
        ],
        "type": "Text_excerpt",
        "value": "1. Build ArchR-compatible genome/annotation files if not natively supported (ArchR supports hg19, hg38, mm9, and mm10 as of 02/2022)\n    * download genome/annotation if not supplied\n    * build ArchR genome/gene annotation files if needed\n2. Perform downstream analysis with ArchR and generate various analytical plots\n    * filter doublets (with ArchR built-in method or AMULET)\n    * dimension reduction\n    * batch effect correction\n    * clustering\n    * embedding\n    * pseudo-bulk clustering\n    * scRNAseq integration if supplied\n    * marker gene detection\n    * call peaks\n    * marker peak detection\n    * pairwise testing\n    * motif enrichment\n    * footprinting\n    * coaccessibility, *etc.*\n\nThe pipeline also splits BED and/or BAM files according to ArchR clusterings and summarizes all results into a single MultiQC report for easy view.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8731881090259519,
      "result": {
        "original_header": "Bug report/Support",
        "type": "Text_excerpt",
        "value": "For help, bug report, or feature requests, the developers would prefer and appreciate that you create a GitHub issue by clicking [here](https://github.com/hukai916/scATACpipe/issues/new/choose).\nIf you would like to extend scATACpipe for your own good, feel free to fork the repo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hukai916/scATACpipe/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "The scATACpipe workflow comes with documentation about the pipeline: [usage](https://github.com/hukai916/scATACpipe/blob/main/docs/usage.md) and [output](https://github.com/hukai916/scATACpipe/blob/main/docs/output.md).\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hukai916/scATACpipe/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hukai916/scATACpipe/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hukai916/scATACpipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/scATACpipe_workflow.svg"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/demo/test_chromap_initial/Clusters_heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/demo/test_chromap_initial/GeneScores-Marker-Heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/demo/test_chromap_final/Clusters_heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/demo/test_chromap_final/GeneScores-Marker-Heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.999849658056512,
      "result": {
        "original_header": "Bug report/Support",
        "type": "Text_excerpt",
        "value": "For help, bug report, or feature requests, the developers would prefer and appreciate that you create a GitHub issue by clicking [here](https://github.com/hukai916/scATACpipe/issues/new/choose).\nIf you would like to extend scATACpipe for your own good, feel free to fork the repo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8597682589644272,
      "result": {
        "original_header": "Release notes",
        "type": "Text_excerpt",
        "value": "<details markdown=\"1\">\n<summary>v0.1.0</summary>    \n  * initial release\n</details> \n<details markdown=\"1\">\n<summary>v0.1.1</summary> \n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hukai916/scATACpipe/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) Kai Hu, Haibo Liu, Julie Lihua Zhu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/docs/images/scATACpipe.png"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scATACpipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hukai916"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1139415,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 448610,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 166863,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 55764,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 36904,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 20170,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 16651,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hukai916",
          "type": "User"
        },
        "date_created": "2022-08-01T04:16:04Z",
        "date_published": "2022-08-01T04:18:31Z",
        "description": "1. add web_gui for easy generation of config file\r\n2. add one more example for Arabidopsis Thaliana\r\n3. minor improvements",
        "html_url": "https://github.com/hukai916/scATACpipe/releases/tag/0.1.1",
        "name": "v0.1.1",
        "release_id": 73304081,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/hukai916/scATACpipe/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hukai916/scATACpipe/releases/73304081",
        "value": "https://api.github.com/repos/hukai916/scATACpipe/releases/73304081",
        "zipball_url": "https://api.github.com/repos/hukai916/scATACpipe/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hukai916",
          "type": "User"
        },
        "date_created": "2022-06-25T02:21:41Z",
        "date_published": "2022-06-25T02:27:23Z",
        "description": "Initial release",
        "html_url": "https://github.com/hukai916/scATACpipe/releases/tag/0.1.0",
        "name": "0.1.0",
        "release_id": 70544141,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/hukai916/scATACpipe/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hukai916/scATACpipe/releases/70544141",
        "value": "https://api.github.com/repos/hukai916/scATACpipe/releases/70544141",
        "zipball_url": "https://api.github.com/repos/hukai916/scATACpipe/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:24:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "1. Install [`nextflow`](https://nf-co.re/usage/installation)(>=21.10.0).\n\n2. For full reproducibility, install either [`Docker`](https://docs.docker.com/engine/installation/) or [`Singularity (Apptainer)`](https://www.sylabs.io/guides/3.0/user-guide/) and specify `-profile singularity` or `-profile docker` accordingly when running the pipeline so that all dependencies are satisfied. Otherwise, all of the dependencies must be available locally on your PATH, **which is likely not true!**\n\n3. Download the pipeline:\n```bash\ngit clone https://github.com/hukai916/scATACpipe.git\n```\n\n4. Download a minimal test dataset:\n    * The **test_data1** is prepared by downsampling (5% and 10%) a dataset named \"*500 Peripheral blood mononuclear cells (PBMCs) from a healthy donor (Next GEM v1.1)*\" provided by [10xgenomics](https://www.10xgenomics.com/resources/datasets?query=&page=1&configure%5Bfacets%5D%5B0%5D=chemistryVersionAndThroughput&configure%5Bfacets%5D%5B1%5D=pipeline.version&configure%5BhitsPerPage%5D=500&menu%5Bproducts.name%5D=Single%20Cell%20ATAC). Note that, in test_data1, I1 refers to index1, which is for sample demultiplexing and not relevant in our case; R1 refers to Read1; **R2 refers to index2**, which represents the cell barcode fastq; R3 refers to Read2.\n\n  ```bash\n  cd scATACpipe\n  wget https://www.dropbox.com/s/uyiq18zk7dts9fx/test_data1.zip\n  unzip test_data1.zip\n  ```\n\n\n5. Edit the `replace_with_full_path` in the assets/sample_sheet_test_data1.csv to use the actual **full path**.\n\n6. Test the pipeline with this minimal test_data1:\n    * At least 8GB memory is recommended for test_data1.\n    * By default, the local executor will be used (`-profile local`) meaning that all jobs will be executed on your local computer.  Nextflow supports many other [executors](https://www.nextflow.io/docs/latest/executor.html) including SLURM, LSF, *etc.*. You can create a [profile](https://www.nextflow.io/docs/latest/config.html?highlight=profile#config-profiles) file to config which executor to use. Multiple profiles can be supplied with comma, e.g. `-profile docker,lsf`.\n    * Please check [nf-core/configs](https://github.com/nf-core/configs#documentation) to see what other custom config files can be supplied.\n\n  * **Example run with Docker using local executor:**\n  ```bash\n  nextflow run main.nf -profile docker --preprocess default --outdir res_test_data1 --input_fastq assets/sample_sheet_test_data1.csv --ref_fasta_ensembl homo_sapiens --species_latin_name 'homo sapiens'\n  ```\n    By executing the above command:\n      - The `local executor` will be used.\n      - `PREPROCESS_DEFAULT` will be used.\n      - Output will be saved into `res_test_data1`.\n      - Ensembl genome `homo_sapiens` will be downloaded and used as reference.\n\n * **Example run with Singularity using LSF executor:**\n  ```bash\n  nextflow run main.nf -profile singularity,lsf --preprocess default --outdir res_test_data1 --input_fastq assets/sample_sheet_test_data1.csv --ref_fasta_ensembl homo_sapiens --species_latin_name 'homo sapiens'\n  ```\n      - By specifying `-profile lsf`, the `lsf` executor will be used for job submission.\n      - By specifying `-profile singularity`, Singularity images will be downloaded and saved to `work/singularity` directory. It is recommended to config the [`NXF_SINGULARITY_CACHEDIR` or `singularity.cacheDir`](https://www.nextflow.io/docs/latest/singularity.html?#singularity-docker-hub) settings to store the images in a central location.\n\n7. Run your own analysis:\n  * A typical command:\n```bash\nnextflow run main.nf -profile <singularity/docker/lsf> --preprocess <default/10xgenomics/chromap> --outdir <path_to_result_dir> --input_fastq <path_to_samplesheet> --ref_fasta_ensembl <ENSEMBL_genome_name> --species_latin_name <e.g. 'homo sapiens'>\n```\n  * For help:\n```bash\nnextflow run main.nf --help\n```\n\nSee documentation [usage](https://github.com/hukai916/scATACpipe/blob/main/docs/usage.md) for all of the available options.\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Web GUI",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "For easy generation of configuration file, we have implemented an interactive [config generator](https://mccb.umassmed.edu/scATACpipe/ConfigGenerator).\n\nIt was implemented with pure HTML/JavaScript/CSS codes so that it can be used locally. To use it locally, simply click [here](https://downgit.github.io/#/home?url=https://github.com/hukai916/scATACpipe/tree/0.1.1/web_gui) to download the web_gui.\n\nThen, then open it with your web browser by double clicking `web_gui/index.html` file or execute the following command in your terminal:\n```\nopen web_gui/index.html\n\n```"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Commands and config",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "An example using human genome with matched scRNA-seq data"
        ],
        "type": "Text_excerpt",
        "value": "This section describes how the plots in the manuscript (to be added) were generated using scATACpipe. For comparison, the manuscript conducted 3 separate analyses, each using a different preprocessing strategy (`default`, `10xgenomics`, `chromap`). Since the commands and preprocessed results are quite similar across the three methods, only the `chromap` option will be demonstrated here.\n\n1.  The initial execution:\n```\nnextflow run main.nf -profile singularity,lsf --preprocess chromap --outdir ./results_chromap_initial --input_fastq ./assets/10X_human_scatac_fastq.csv --ref_fasta_ensembl homo_sapiens --species_latin_name 'homo sapiens' --archr_scrnaseq '/path/scRNA-Hematopoiesis-Granja-2019.rds' --archr_blacklist /home/hl84w/lucio_castilla/scATAC-seq/docs/hg38-blacklist.v2.bed.gz\n```\n\nBreak down:\n\n  * `-profile singularity,lsf`:\n\n  This option instructs scATACpipe to use Singularity containers and LSF as the executor. Multiple parameters are separated by commas. Since `profile` is pipeline-level flag, it is prefixed with a single dash (`-`). Module-level flags are prefixed with double dash (`--`).\n\n  * `--preprocess chromap`:\n\n  This instructs scATACpipe to use Chromap preprocessing strategy.\n\n  * `--outdir ./results_chromap_initial`:\n\n  Output will be saved into `./results_chromap_initial` folder.\n\n  * `--input_fastq ./assets/10X_human_scatac_fastq.csv`:\n\n  Please replace the `/path/` in the `10X_human_scatac_fastq.csv` with absolute paths. Details regarding the 6 samples can be found in the supplementary section of the paper. If you detect any outlier samples, you can remove them from the downstream analyses using the `--filter_sample = 'PBMC_10K_C, PBMC_10K_X'` flag.\n\n  * `--ref_fasta_ensembl homo_sapiens`:\n\n  This specifies that the genome _Homo Sapiens_ from ENSEMBLE will be used as reference. To view all supported genomes, check out `nextflow run main.nf --support_genome`.\n\n  * `--species_latin_name 'homo sapiens'`:\n\n  Simply the Latin name of the reference genome.\n\n  * `--archr_scrnaseq '/path/scRNA-Hematopoiesis-Granja-2019.rds'`\n\n  Matching scRNA-seq data. Can ignore if not available. The example file can be downloaded [here](https://jeffgranja.s3.amazonaws.com/ArchR/TestData/scRNA-Hematopoiesis-Granja-2019.rds).\n\n  * `--archr_blacklist ./assets/hg38-blacklist.v2.bed.gz`:\n\n  Blacklist to exclude for downstream analysis. Click [here](https://github.com/Boyle-Lab/Blacklist/tree/master/lists) for other species.\n\nInstead of passing each flag option via the command line, you can include them all in a configuration file and supply it with the `-c` option. Below is equivalent to above:\n```\nnextflow run main.nf -profile singularity,lsf -c ./conf/test_chromap_initial.config\n```\n\nWhat are inside **test_chromap_initial.config**:\nhttps://github.com/hukai916/scATACpipe/blob/216f1460577926a04a2d2918f36588afb6217f8a/conf/test_chromap_initial.config#L1-L10\n\nAgain, you have to replace `/path/` with full absolute paths.\n\n2.  The final execution:\n\nAfter examining the results from the initial execution, we decided to remove the\noutlier clusters (C1, C6) from downstream analyses. These two clusters are considered problematic according to the following two plots:\n  * The clustering heatmap plot from **./results_chromap_initial/archr_clustering/** folder: the cell proportions from `PBMC_5K_N` and `PBMC_5K_V` samples are unbalanced for C1, C6.\n<p align=\"center\">\n  <img src=\"docs/images/demo/test_chromap_initial/Clusters_heatmap.png\" width=\"500\" style=\"display: block; margin: auto\">\n</p>\n\n  * The marker gene heatmap plot from **./results_chromap_initial/archr_marker_gene_clusters/** folder: no distinct marker gene pattern detected in cluster C1, C6.\n<p align=\"center\">\n  <img src=\"docs/images/demo/test_chromap_initial/GeneScores-Marker-Heatmap.png\" width=\"500\" style=\"display: block; margin: auto\">\n</p>\n\nWe used the following line to remove C1 and C6:\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L18\n\nAlso, we would like to perform constrained integration of scRNA-seq data in addition to the unconstrained integration. The following line was used to supply the grouping information:\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L12\n\nTo specify marker genes to plot, edit the following lines:\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L30\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L43\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L53\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L56\n\nTo specify a set of motifs for downstream analyses, edit the following lines:\nhttps://github.com/hukai916/scATACpipe/blob/b0bed3f63c7044fd6ab98c39c9d81166fe476edc/conf/modules.config#L289\nhttps://github.com/hukai916/scATACpipe/blob/b0bed3f63c7044fd6ab98c39c9d81166fe476edc/conf/modules.config#L298\n\nTo specify a set of motifs for footprinting analyses, edit the following lines:\nhttps://github.com/hukai916/scATACpipe/blob/b0bed3f63c7044fd6ab98c39c9d81166fe476edc/conf/modules.config#L305\nhttps://github.com/hukai916/scATACpipe/blob/b0bed3f63c7044fd6ab98c39c9d81166fe476edc/conf/modules.config#L314\n\nWe ended up with a final **test_chromap_final.config**:\nhttps://github.com/hukai916/scATACpipe/blob/20e0c820dd685833438a5d24e3eeb0fc5c174a87/conf/test_chromap_final.config#L1-L66\n\nThe final execution command looks like below:\n```\nnextflow run main.nf -profile singularity,lsf -c ./conf/test_chromap_final.config -resume session_id\n```\nIn order to skip already-performed analyses, you must provide the `-resume session_id` option. The corresponding session ID can be found using the `nextflow log` command. Please note that the `--outdir` directory is set to `results_chromap_final`.\n\nWhen the final execution is complete, we can look at clustering heatmaps and marker gene heatmaps, and they both look good now:\n  * The marker gene heatmap plot from **./results_chromap_final/archr_marker_gene_clusters/** folder:\n  <p align=\"center\">\n  <img src=\"docs/images/demo/test_chromap_final/Clusters_heatmap.png\" width=\"500\" style=\"display: block; margin: auto\">\n  </p>\n\n  * The marker gene heatmap plot from **./results_chromap_final/archr_marker_gene_clusters/** folder:\n  <p align=\"center\">\n  <img src=\"docs/images/demo/test_chromap_final/GeneScores-Marker-Heatmap.png\" width=\"500\" style=\"display: block; margin: auto\">\n  </p>\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pipeline info",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />",
          "An example using human genome with matched scRNA-seq data"
        ],
        "type": "Text_excerpt",
        "value": "Upon pipeline execution completion, Nextflow will produce time and resource usage reports that are stored under `pipeline_info`:\n- Using `chromap` option: [results_chromap_final/pipeline_info](https://github.com/hukai916/scATACpipe_example/tree/main/results_chromap_final/pipeline_info)\n- Using `default` option: [results_default_final/pipeline_info](https://github.com/hukai916/scATACpipe_example/tree/main/results_default_final/pipeline_info)\n- Using `10xgenomics` option: [results_10xgenomics_final/pipeline_info](https://github.com/hukai916/scATACpipe_example/tree/main/results_10xgenomics_final/pipeline_info)\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "An example using plant genome without matched scRNA-seq data",
        "parent_header": [
          "<img alt=\"scATACpipe\" src=\"docs/images/scATACpipe.png\" />"
        ],
        "type": "Text_excerpt",
        "value": "For this example (GSE155304), integrated analysis cannot be performed due to the lack of matched scRNA-seq data. Also note, for `motifSet`, when set to 'cisbp', only human and mouse are currently supported by ArchR. Therefore, for this dataset, we need to replace all occurrences of `motifSet = \"cisbp\"` to `motifSet = \"encode\"` in the `./conf/motif.config` file.\n\n1. Command line used for `default` option:\n```\nnextflow run main.nf -c conf/test_default_plant.config -profile singularity,lsf\n```\nResults are stored [here](https://github.com/hukai916/scATACpipe_example/tree/main/test_plant_default).\n\n2.  Command used for `chromap` option:\n```\nnextflow run main.nf -c conf/test_chromap_plant.config -profile singularity,lsf\n```\nResults are stored [here](https://github.com/hukai916/scATACpipe_example/tree/main/test_plant_chromap).\n\n3. Command used for `10xgenomics` option:\n```\nnextflow run main.nf -c conf/test_10xgenomics_plant.config -profile singularity,lsf\n```\nResults are stored [here](https://github.com/hukai916/scATACpipe_example/tree/main/test_plant_10xgenomics).\n"
      },
      "source": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/workflows/preprocess_chromap.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/workflows/downstream_archr.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/workflows/preprocess_10xgenomics.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/workflows/preprocess_default.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/modules/nf-core/modules/multiqc/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/modules/local/get_software_versions.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/subworkflows/local/input_check_fastq.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hukai916/scATACpipe/main/subworkflows/local/input_check_fragment.nf"
      },
      "technique": "file_exploration"
    }
  ]
}