{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "CH-Bin"
        ],
        "type": "Text_excerpt",
        "value": "CH-Bin has been accepted at the 20th Asia Pacific Bioinformatics Conference ([APBC 2020](http://www.masbic.org/apbc-programme/)) and is published in Elsevier Computational Biology and Chemistry; DOI: [10.1016/j.compbiolchem.2022.107734](https://doi.org/10.1016/j.compbiolchem.2022.107734). If you use CH-Bin in your work, please cite CH-Bin as follows.\n\n```bibtex\n@article{CHANDRASIRI2022107734,\ntitle = {CH-Bin: A Convex Hull Based Approach for Binning Metagenomic Contigs},\njournal = {Computational Biology and Chemistry},\npages = {107734},\nyear = {2022},\nissn = {1476-9271},\ndoi = {https://doi.org/10.1016/j.compbiolchem.2022.107734},\nurl = {https://www.sciencedirect.com/science/article/pii/S1476927122001141},\nauthor = {Sunera Chandrasiri and Thumula Perera and Anjala Dilhara and Indika Perera and Vijini Mallawaarachchi},\nkeywords = {Convex hull, Convex hull distance, Metagenomic binning, Multiple k values, High dimensional data clustering, Clustering algorithm},\nabstract = {Metagenomics has enabled culture-independent analysis of micro-organisms present in environmental samples. Metagenomics binning, which involves the grouping of contigs into bins that represent different taxonomic groups, is an important step of a typical metagenomic workflow followed after assembly. The majority of the metagenomic binning tools represent the composition and coverage information of contigs as feature vectors consisting of a large number of dimensions. However, these tools use traditional Euclidean distance or Manhattan distance metrics which become unreliable in the high-dimensional space. We propose CH-Bin, a binning approach that leverages the benefits of using convex hull distance for binning contigs represented by high dimensional feature vectors. We demonstrate using experimental evidence on simulated and real datasets that the use of high dimensional feature vectors to represent contigs can preserve additional information, and result in improved binning results. We further demonstrate that the convex hull distance based binning approach can be effectively utilized in binning such high-dimensional data. To the best of our knowledge, this is the first time that composition information from oligonucleotides of multiple sizes has been used in representing the composition information of contigs and a convex-hull distance based binning algorithm has been used to bin metagenomic contigs. The source code of CH-Bin is available at https://github.com/kdsuneraavinash/CH-Bin.}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Sunera Chandrasiri and Thumula Perera and Anjala Dilhara and Indika Perera and Vijini Mallawaarachchi",
        "doi": "https://doi.org/10.1016/j.compbiolchem.2022.107734",
        "format": "bibtex",
        "title": "CH-Bin: A Convex Hull Based Approach for Binning Metagenomic Contigs",
        "type": "Text_excerpt",
        "url": "https://www.sciencedirect.com/science/article/pii/S1476927122001141",
        "value": "@article{CHANDRASIRI2022107734,\n    abstract = {Metagenomics has enabled culture-independent analysis of micro-organisms present in environmental samples. Metagenomics binning, which involves the grouping of contigs into bins that represent different taxonomic groups, is an important step of a typical metagenomic workflow followed after assembly. The majority of the metagenomic binning tools represent the composition and coverage information of contigs as feature vectors consisting of a large number of dimensions. However, these tools use traditional Euclidean distance or Manhattan distance metrics which become unreliable in the high-dimensional space. We propose CH-Bin, a binning approach that leverages the benefits of using convex hull distance for binning contigs represented by high dimensional feature vectors. We demonstrate using experimental evidence on simulated and real datasets that the use of high dimensional feature vectors to represent contigs can preserve additional information, and result in improved binning results. We further demonstrate that the convex hull distance based binning approach can be effectively utilized in binning such high-dimensional data. To the best of our knowledge, this is the first time that composition information from oligonucleotides of multiple sizes has been used in representing the composition information of contigs and a convex-hull distance based binning algorithm has been used to bin metagenomic contigs. The source code of CH-Bin is available at https://github.com/kdsuneraavinash/CH-Bin.},\n    keywords = {Convex hull, Convex hull distance, Metagenomic binning, Multiple k values, High dimensional data clustering, Clustering algorithm},\n    author = {Sunera Chandrasiri and Thumula Perera and Anjala Dilhara and Indika Perera and Vijini Mallawaarachchi},\n    url = {https://www.sciencedirect.com/science/article/pii/S1476927122001141},\n    doi = {https://doi.org/10.1016/j.compbiolchem.2022.107734},\n    issn = {1476-9271},\n    year = {2022},\n    pages = {107734},\n    journal = {Computational Biology and Chemistry},\n    title = {CH-Bin: A Convex Hull Based Approach for Binning Metagenomic Contigs},\n}"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kdsuneraavinash/CH-Bin"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-11T18:00:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-26T03:22:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CH-Bin - metagenomic binning using convex-hull distance metric"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9339841487888361,
      "result": {
        "original_header": "Configuration file format",
        "type": "Text_excerpt",
        "value": "CH-Bin uses a customizable `ini` file format to store the configuration. The default configuration can be found\nin `config/default.ini`.\n```ini\n[COMMANDS]\nFragGeneScan = DIR OF run_FragGeneScan.pl\nHmmer = DIR OF Hmmer\nSeq2Vec = DIR OF seq2vec\n\n[RESOURCES]\nMarkersHmm = PATH OF marker.hmm\n\n[PARAMETERS]\nKmerK = INTEGER\nContigLengthFilterBp = INTEGER\nScmCoverageThreshold = FLOAT BETWEEN 0 AND 1\nScmSelectPercentile = FLOAT BETWEEN 0 AND 1\nSeedContigSplitLengthBp = INTEGER\nAlgoNumNeighbors = INTEGER\nAlgoMaxIterations = INTEGER\nAlgoDistanceMetric = convex\nAlgoQpSolver = EITHER quadprog OR cvxopt\nInMemDistMatrix = EITHER yes OR no\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9708524692066745,
      "result": {
        "original_header": "Parameters Configuration",
        "type": "Text_excerpt",
        "value": "| Parameter               | Description                                                  |\n| ----------------------- | ------------------------------------------------------------ |\n| KmerK                   | K value of the kmers to count.                               |\n| ContigLengthFilterBp    | Threshold to filter the short contigs.                       |\n| ScmCoverageThreshold    | Threshold for a hit to be considered for the seed frequency distribution. |\n| ScmSelectPercentile     | Percentile to use for selecting the number of seeds. For example, 0.5 will take the median number of seeds. |\n| SeedContigSplitLengthBp | Length to split the seed contigs.                            |\n| AlgoNumNeighbors        | Number of neighbors to consider for polytope.                |\n| AlgoMaxIterations       | Number of maximum iterations to perform.                     |\n| AlgoDistanceMetric      | Polytope distance matrix (convex/affine)                     |\n| AlgoQpSolver            | Quadratic programming problem solver. (quadprog/cvxopt)      |\n| InMemDistMatrix         | Whether to use in-memory or in-disk distance matrix. (yes/no)    |\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8235832680320725,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "Additionally, linting and type-checking are configured to this project. You may install the git-hooks for the formatters\nvia, \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kdsuneraavinash/CH-Bin/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kdsuneraavinash/CH-Bin"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CH-Bin"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CH-Bin"
        ],
        "type": "Text_excerpt",
        "value": "First clone the CH-Bin repository to a local directory. Note that CH-Bin only supports linux.\n\n```bash\ngit clone https://github.com/kdsuneraavinash/CH-Bin\ncd CH-Bin\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CH-Bin Installation",
        "parent_header": [
          "CH-Bin",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Install using `setup.py`. (Recommended installing in a virtual environment)\n    ```bash\n    python -m venv .venv        # Optional: creating venv\n    source .venv/bin/activate   # Optional: activating venv\n    python setup.py install\n    ```\n2. Then run following command to run the tool.\n    ```bash\n    ch_bin --contigs [CONTIG_FASTA] --coverages [COVERAGE_TSV] --out [OUT_DIR]\n    ```\n\nFor example, to bin the sample dataset, run the following command.\n ```bash\n ch_bin --contigs test_data/five-genomes-contigs.fasta --coverages test_data/five-genomes-abundance.abund --out out\n ```\n\nThis will create the `out` directory with the binning assignments. The final binning assignments will be in `out/clustering/binning-assignment.csv` file. This will be a comma-separated file in the following format. (First column being the contig name and second being the assigned bin index)\n\n```csv\nCONTIG_NAME,BIN\nNODE_100_length_59166_cov_34.037370,2\nNODE_101_length_58711_cov_33.859759,2\nNODE_102_length_56779_cov_94.096062,1\nNODE_103_length_53962_cov_21.469587,3\n```\n\nFurthermore, the FASTA files of the bins will also be dumped into `out/clustering/bins` directory.\n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9980879918371307,
      "result": {
        "original_header": "Coverage File",
        "type": "Text_excerpt",
        "value": "Coverage file should be a tab-separated file with the following format.\n```tsv\nNODE_1_length_1189502_cov_16.379288\t16.379288\nNODE_2_length_1127036_cov_16.549343\t16.549343\nNODE_3_length_1009819_cov_16.436396\t16.436396\nNODE_4_length_861895_cov_21.063754\t21.063754\nNODE_5_length_737013_cov_20.834031\t20.834031\nNODE_6_length_659011_cov_21.171279\t21.171279\n```\n \nIf you followed the installation document, the requirements should be installed in the `tools` directory. If so you can\nskip this section and run the tool directly. If the tools were installed in a different manner, or you want to change\nsome internal configuration, you might want to provide a custom configuration.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9667078827985748,
      "result": {
        "original_header": "Configuration file format",
        "type": "Text_excerpt",
        "value": "If the requirement installations were done differently, you might want to change the `COMMANDS` section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8906083869436242,
      "result": {
        "original_header": "Commands/Resource Configuration",
        "type": "Text_excerpt",
        "value": "For each tool provide the command that can be used to run the specified tool. For example, for `FragGeneScan`, provide\nthe `run_FragGeneScan.pl` script location. Note that all the related files should be executable.\n(In `FragGeneScan` case, both `FragGeneScan` and `run_FragGeneScan.pl` should be executable) \nThe resource section describes the resource locations. Generally, you do not need to change this section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8012282491158264,
      "result": {
        "original_header": "Parameters Configuration",
        "type": "Text_excerpt",
        "value": "In the parameters section, you can adjust the default tool settings. Following table shows available properties. \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9982942344986147,
      "result": {
        "original_header": "Providing Configuration",
        "type": "Text_excerpt",
        "value": "When running `ch_bin` you can provide the custom configuration file via, `-s` or `--config` parameter.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997184172062785,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "1. Install the requirements of the project by running\n    ```bash\n    pip install -r requirements.txt\n    ```\n2. Run the tool via:\n    BASH2* \nAdditionally, linting and type-checking are configured to this project. You may install the git-hooks for the formatters\nvia, \n ```bash\npre-commit install\n ``` \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8566560640334138,
      "result": {
        "original_header": "Coverage File",
        "type": "Text_excerpt",
        "value": "### Coverage File \n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021, K. D. Sunera Avinash Chandrasiri, A. A. T. I. Perera, Anjala Dilhara\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CH-Bin"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kdsuneraavinash"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 55045,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kdsuneraavinash",
          "type": "User"
        },
        "date_created": "2021-09-16T09:16:51Z",
        "date_published": "2021-09-16T09:20:13Z",
        "html_url": "https://github.com/kdsuneraavinash/CH-Bin/releases/tag/v1.0.0",
        "name": "Initial CH-Bin Release",
        "release_id": 49660847,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/releases/49660847",
        "value": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/releases/49660847",
        "zipball_url": "https://api.github.com/repos/kdsuneraavinash/CH-Bin/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "CH-Bin",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You will need python and build requirements (and optionally venv). In ubuntu 20.04, you can install them by,\n\n```bash\nsudo apt-get update\nsudo apt-get install cmake\nsudo apt-get install build-essential\nsudo apt-get install python3 python-is-python3\nsudo apt-get install python3-dev\nsudo apt-get install python3.8-venv\nsudo apt-get install libboost-all-dev\n```\n\nAdditionally, [FragGeneScan](https://sourceforge.net/projects/fraggenescan), [HMMER](http://hmmer.org/)\nand [seq2vec](https://github.com/anuradhawick/seq2vec) tools are required. If you have them already installed, you may provide their paths in the configuration. Otherwise, follow the below steps to install them manually. Following commands will install the required tools in the `tools` directory.\n\n1. Install [FragGeneScan](https://sourceforge.net/projects/fraggenescan).\n    ```bash\n    wget -O tools/FragGeneScan1.31.tar.gz https://sourceforge.net/projects/fraggenescan/files/FragGeneScan1.31.tar.gz\n    tar -xzf tools/FragGeneScan1.31.tar.gz -C tools\n    cd tools/FragGeneScan1.31 && make clean && make fgs && cd ../..\n    ./tools/FragGeneScan1.31/run_FragGeneScan.pl\n    ```\n2. Install [HMMER](http://hmmer.org/).\n    ```bash\n    wget -O tools/hmmer.tar.gz http://eddylab.org/software/hmmer/hmmer.tar.gz\n    tar -xzf tools/hmmer.tar.gz -C tools\n    cd tools/hmmer-3.3.2 && ./configure && make && cd ../..\n    ./tools/hmmer-3.3.2/src/hmmalign -h\n    ```\n3. Install [seq2vec](https://github.com/anuradhawick/seq2vec).\n    ```bash\n    git clone https://github.com/anuradhawick/seq2vec.git tools/seq2vec\n    cd tools/seq2vec/ && mkdir -p build && cmake . && make -j8 && cd ../..\n    ./tools/seq2vec/seq2vec --help\n    ```\n4. Get marker-gene hmm file.\n    ```bash\n    wget -O tools/marker.hmm -nc https://raw.githubusercontent.com/sufforest/SolidBin/4c9b9ea7b8d8a0df1b772669872b69006c490e67/auxiliary/marker.hmm\n    head ./tools/marker.hmm\n    ```\n\nIf you installed them in a different directory than `tools`, you need to update the configuration. Edit `config/default.ini` as follows, (If you followed the default installation commands provided above, you do not need to change the configuration.)\n\n```ini\n[COMMANDS]\nFragGeneScan = <FragGeneScan Path>\nHmmer = <Hmmer Path>\nSeq2Vec = <Seq2Vec Path>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kdsuneraavinash/CH-Bin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:24:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}