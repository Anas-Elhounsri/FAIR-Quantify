{
  "application_domain": [
    {
      "confidence": 34.65,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "SAINT-Angle"
        ],
        "type": "Text_excerpt",
        "value": "\r\nA K M Mehedi Hasan, Ajmain Yasar Ahmed, Sazan Mahbub, M Saifur Rahman, and Md Shamsuzzoha Bayzid, SAINT-Angle: self-attention augmented inception-inside-inception network and transfer learning improve protein backbone torsion angle prediction, Bioinformatics Advances, Vol. 3(1): vbad042, https://doi.org/10.1093/bioadv/vbad042, 2023.\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Hasan, AKM Mehedi and Ahmed, Ajmain Yasar and Mahbub, Sazan and Rahman, M Saifur and Bayzid, Md Shamsuzzoha",
        "format": "bibtex",
        "title": "SAINT-Angle: self-attention augmented inception-inside-inception network and transfer learning improve protein backbone torsion angle prediction",
        "type": "Text_excerpt",
        "value": "@article{hasan2023saint,\n    publisher = {Oxford University Press},\n    year = {2023},\n    pages = {vbad042},\n    number = {1},\n    volume = {3},\n    journal = {Bioinformatics Advances},\n    author = {Hasan, AKM Mehedi and Ahmed, Ajmain Yasar and Mahbub, Sazan and Rahman, M Saifur and Bayzid, Md Shamsuzzoha},\n    title = {SAINT-Angle: self-attention augmented inception-inside-inception network and transfer learning improve protein backbone torsion angle prediction},\n}"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bayzidlab/SAINT-Angle"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-15T05:30:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-01T17:25:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository contains the official implementation of our paper titled SAINT-Angle: self-attention augmented inception-inside-inception network and transfer learning improve protein backbone torsion angles prediction."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9930064153908513,
      "result": {
        "original_header": "SAINT-Angle",
        "type": "Text_excerpt",
        "value": "\r\nThis repository contains the standalone version (command line interface/CLI tool) of the method proposed in our paper titled **SAINT-Angle: self-attention augmented inception-inside-inception network and transfer learning improve protein backbone torsion angle prediction**, published in the journal **[Bioinformatics Advances (Oxford Academic)](https://academic.oup.com/bioinformaticsadvances)**.\r\n\r\nIf any content in this repository is used for research or other purpose, we shall be obliged if you kindly cite *[**our paper**](https://doi.org/10.1093/bioadv/vbad042)*.\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9293245747549356,
      "result": {
        "original_header": "Understanding Output Files",
        "type": "Text_excerpt",
        "value": "\r\n**SAINT-Angle** will generate a folder named `outputs` inside `SAINT-Angle/saint_angle` directory *(if not specified otherwise via command line argument)* and place all the output files in this folder. For each input protein, you can expect either 4 (four) or 9 (nine) output `.csv` files inside the output folder. A short description of each output file format is provided in the below table.\r\n\r\n| **For Protein without `.spotcon` File** |                               |\r\n| --------------------------------------- | ----------------------------- |\r\n| **Output File Format**                  | **Model Used for Prediction** |\r\n| `PROTEIN_NAME.model_1.csv`              | model_1                       |\r\n| `PROTEIN_NAME.model_3.csv`              | model_3                       |\r\n| `PROTEIN_NAME.model_7.csv`              | model_7                       |\r\n| `PROTEIN_NAME.ensemble3.csv`            | *ensemble* of above 3 models  |\r\n| **For Protein with `.spotcon` File**    |                               |\r\n| **Output File Format**                  | **Model Used for Prediction** |\r\n| `PROTEIN_NAME.model_1.csv`              | model_1                       |\r\n| `PROTEIN_NAME.model_2.csv`              | model_2                       |\r\n| `PROTEIN_NAME.model_3.csv`              | model_3                       |\r\n| `PROTEIN_NAME.model_4.csv`              | model_4                       |\r\n| `PROTEIN_NAME.model_5.csv`              | model_5                       |\r\n| `PROTEIN_NAME.model_6.csv`              | model_6                       |\r\n| `PROTEIN_NAME.model_7.csv`              | model_7                       |\r\n| `PROTEIN_NAME.model_8.csv`              | model_8                       |\r\n| `PROTEIN_NAME.ensemble8.csv`            | *ensemble* of above 8 models  |\r\n\r\nThe \u03c6 angle of first amino acid residue and the \u03c8 angle of last amino acid residue for each input protein are masked with 360&deg; angle.\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.966144449498318,
      "result": {
        "original_header": "Data Availability",
        "type": "Text_excerpt",
        "value": "\r\nBackbone torsion \u03c6 and \u03c8 angles of proteins from a recent benchmark dataset, used to evaluate the performance of **SAINT-Angle**, can be found ***[here](https://drive.google.com/drive/folders/19s8KXsilnqdWesy-98oweCFEP-rjPW2S?usp=sharing)***.\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading Pretrained Model Weights",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPretrained model weights essential for running **SAINT-Angle** can be found ***[here](https://drive.google.com/drive/folders/1OLZ2mFbFhIER-JFxf24snxdUPyt5EiZ6?usp=sharing)***. Download these model weights files and place them in a folder named `models` inside `SAINT-Angle/saint_angle` directory. There are 8 (eight) model weights files with `.h5` extension, each of which corresponding to one of the base models used in ensemble of **SAINT-Angle**. A short description of each base model is provided in the below table.\r\n\r\n| Model Name | Architecture | Features                  |\r\n| ---------- | ------------ | ------------------------- |\r\n| model_1    | Basic        | Base                      |\r\n| model_2    | Basic        | Base, Window10            |\r\n| model_3    | ProtTrans    | Base, ProtTrans           |\r\n| model_4    | ProtTrans    | Base, Window10, ProtTrans |\r\n| model_5    | ProtTrans    | Base, Window20, ProtTrans |\r\n| model_6    | ProtTrans    | Base, Window50, ProtTrans |\r\n| model_7    | Residual     | Base, ProtTrans           |\r\n| model_8    | Residual     | Base, Window10, ProtTrans |\r\n\r\nFor details on different architectures and features, we request you to go through ***[our paper](https://doi.org/10.1093/bioadv/vbad042)***.\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bayzidlab/SAINT-Angle/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bayzidlab/SAINT-Angle/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayzidlab/SAINT-Angle"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAINT-Angle"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing Input Features",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines"
        ],
        "type": "Text_excerpt",
        "value": "\r\nFollow any of the following 2 (two) options to prepare input proteins list and corresponding feature files before running **SAINT-Angle**.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option-1",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines",
          "Preparing Input Features"
        ],
        "type": "Text_excerpt",
        "value": "\r\nList the name of input proteins in a file named `proteins_list` and place this file inside `SAINT-Angle/saint_angle` directory. Besides, place the `.fasta`, `.pssm`, `.hhm`, and `.spotcon` files of each input protein in a folder named `inputs` located inside `SAINT-Angle/saint_angle` directory. A `.spotcon` file should contain the contact map of an input protein in ***CASP*** format.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option-2",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines",
          "Preparing Input Features"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf you already have a text file containing a list of names of input proteins (one name in each line) and a folder containing the `.fasta`, `.pssm`, `.hhm`, and `.spotcon` files of each input protein, you can simply provide the corresponding paths when running **SAINT-Angle** (discussed in next section).\r\n\r\n***Keep in mind that, some of the base models of SAINT-Angle require contact map (window) features of input proteins to predict their torsion \u03c6 and \u03c8 angles. If you do not provide `spotcon` file for a particular input protein, then SAINT-Angle will use, in its ensemble, only the base models that do not require window features, in order to predict its torsion angles.***\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "When input features prepared following Option-1",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines",
          "Running SAINT-Angle"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```sh\r\npython saint_angle.py\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "When input features prepared following Option-2",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines",
          "Running SAINT-Angle"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```sh\r\npython saint_angle.py --list PATH_TO_PROTEINS_LIST --inputs PATH_TO_INPUT_FILES_FOLDER\r\n```\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8966201367423788,
      "result": {
        "original_header": "Understanding Output Files",
        "type": "Text_excerpt",
        "value": "\r\n**SAINT-Angle** will generate a folder named `outputs` inside `SAINT-Angle/saint_angle` directory *(if not specified otherwise via command line argument)* and place all the output files in this folder. For each input protein, you can expect either 4 (four) or 9 (nine) output `.csv` files inside the output folder. A short description of each output file format is provided in the below table.\r\n\r\n| **For Protein without `.spotcon` File** |                               |\r\n| --------------------------------------- | ----------------------------- |\r\n| **Output File Format**                  | **Model Used for Prediction** |\r\n| `PROTEIN_NAME.model_1.csv`              | model_1                       |\r\n| `PROTEIN_NAME.model_3.csv`              | model_3                       |\r\n| `PROTEIN_NAME.model_7.csv`              | model_7                       |\r\n| `PROTEIN_NAME.ensemble3.csv`            | *ensemble* of above 3 models  |\r\n| **For Protein with `.spotcon` File**    |                               |\r\n| **Output File Format**                  | **Model Used for Prediction** |\r\n| `PROTEIN_NAME.model_1.csv`              | model_1                       |\r\n| `PROTEIN_NAME.model_2.csv`              | model_2                       |\r\n| `PROTEIN_NAME.model_3.csv`              | model_3                       |\r\n| `PROTEIN_NAME.model_4.csv`              | model_4                       |\r\n| `PROTEIN_NAME.model_5.csv`              | model_5                       |\r\n| `PROTEIN_NAME.model_6.csv`              | model_6                       |\r\n| `PROTEIN_NAME.model_7.csv`              | model_7                       |\r\n| `PROTEIN_NAME.model_8.csv`              | model_8                       |\r\n| `PROTEIN_NAME.ensemble8.csv`            | *ensemble* of above 8 models  |\r\n\r\nThe \u03c6 angle of first amino acid residue and the \u03c8 angle of last amino acid residue for each input protein are masked with 360&deg; angle.\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bayzidlab/SAINT-Angle/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAINT-Angle"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bayzidlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30718,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "OpenEdge ABL",
        "size": 15842,
        "type": "Programming_language",
        "value": "OpenEdge ABL"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running SAINT-Angle",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIn order to run **SAINT-Angle** for protein backbone \u03c6 and \u03c8 angles prediction, run one of the following commands in a terminal from `SAINT-Angle/saint_angle` directory.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To see available command line parameters",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines",
          "Running SAINT-Angle"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```sh\r\npython saint_angle.py -h OR python saint_angle.py --help\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:04:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "SAINT-Angle",
          "Guidelines"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIn order to run **SAINT-Angle** on your local machine, navigate to a *workspace* directory and run the following commands in a terminal.\r\n\r\n```sh\r\ngit clone https://github.com/bayzidlab/SAINT-Angle.git\r\ncd SAINT-Angle/saint_angle\r\n```\r\n\r\nThen, create a separate ***Conda*** environment for running **SAINT-Angle** with ***Python*** version `3.7`. Install ***TensforFlow*** version `2.6.0`, ***Keras*** version `2.6.0`, and ***pandas*** version `1.3.5`. We tested our method with aforementioned versions of ***TensorFlow*** and ***Keras***. We recommend you install *GPU* version of ***TensorFlow*** for faster inference. Besides, run the following command in a terminal to install ***SentencePiece*** and ***transformers***.\r\n\r\n```sh\r\npip install -q SentencePiece transformers\r\n```\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bayzidlab/SAINT-Angle/main/README.md",
      "technique": "header_analysis"
    }
  ]
}