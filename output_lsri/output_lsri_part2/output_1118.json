{
  "application_domain": [
    {
      "confidence": 26.7,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Lalit, Manan and Tomancak, Pavel and Jug, Florian",
        "format": "bibtex",
        "title": "Embedding-based Instance Segmentation in Microscopy",
        "type": "Text_excerpt",
        "url": "https://proceedings.mlr.press/v143/lalit21a.html",
        "value": "@inproceedings{lalit2021embedseg,\n    url = {https://proceedings.mlr.press/v143/lalit21a.html},\n    pdf = {https://proceedings.mlr.press/v143/lalit21a/lalit21a.pdf},\n    publisher = {PMLR},\n    month = {07--09 Jul},\n    series = {Proceedings of Machine Learning Research},\n    volume = {143},\n    editor = {Heinrich, Mattias and Dou, Qi and de Bruijne, Marleen and Lellmann, Jan and Schl\u00e4fer, Alexander and Ernst, Floris},\n    year = {2021},\n    pages = {399--415},\n    booktitle = {Proceedings of the Fourth Conference on Medical Imaging with Deep Learning},\n    author = {Lalit, Manan and Tomancak, Pavel and Jug, Florian},\n    title = {Embedding-based Instance Segmentation in Microscopy},\n}"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Manan Lalit and Pavel Tomancak and Florian Jug",
        "doi": "https://doi.org/10.1016/j.media.2022.102523",
        "format": "bibtex",
        "title": "EmbedSeg: Embedding-based Instance Segmentation for Biomedical Microscopy Data",
        "type": "Text_excerpt",
        "url": "https://www.sciencedirect.com/science/article/pii/S1361841522001700",
        "value": "@article{lalit2022mia,\n    author = {Manan Lalit and Pavel Tomancak and Florian Jug},\n    url = {https://www.sciencedirect.com/science/article/pii/S1361841522001700},\n    doi = {https://doi.org/10.1016/j.media.2022.102523},\n    issn = {1361-8415},\n    year = {2022},\n    pages = {102523},\n    volume = {81},\n    journal = {Medical Image Analysis},\n    title = {EmbedSeg: Embedding-based Instance Segmentation for Biomedical Microscopy Data},\n}"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/juglab/EmbedSeg"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-13T14:05:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T00:28:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code Implementation for EmbedSeg, an Instance Segmentation Method for Microscopy Images"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.986965479159141,
      "result": {
        "type": "Text_excerpt",
        "value": "## Table of Contents \n\n### Introduction\nThis repository hosts the version of the code used for the **[publication](https://proceedings.mlr.press/v143/lalit21a.html)** **Embedding-based Instance Segmentation of Microscopy Images**.  \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9542933351637584,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "We refer to the techniques elaborated in the publication, here as **EmbedSeg**. `EmbedSeg` is a method to perform instance-segmentation of objects in microscopy images, based on the ideas by **[Neven et al, 2019](https://arxiv.org/abs/1906.11109)**.  \nWith `EmbedSeg`, we obtain state-of-the-art results on multiple real-world microscopy datasets. `EmbedSeg` has a small enough memory footprint (between 0.7 to about 3 GB) to allow network training on virtually all CUDA enabled hardware, including laptops. \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8103219553670455,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "For CPU support, one could execute the following lines of code: \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9308355589740176,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": "Look in the `examples` directory,  and try out the `DSB-2018` notebooks for 2D images or `Mouse-Organoid-Cells-CBG` notebooks for volumetric (3D) images. Please make sure to select `Kernel > Change kernel` to `EmbedSegEnv`.    \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9485935256117545,
      "result": {
        "type": "Text_excerpt",
        "value": "### Training and Inference on your data\n   \n`*.tif`-type images and the corresponding masks should be respectively present under `images` and `masks`, under directories `train`, `val` and `test`. (In order to prepare such instance masks, one could use the Fiji plugin <b>Labkit</b> as suggested <b>[here](https://github.com/juglab/EmbedSeg/wiki/01---Use-Labkit-to-prepare-instance-masks)</b>). The following would be a desired structure as to how data should be prepared.\n```\n$data_dir\n\u2514\u2500\u2500\u2500$project-name\n    |\u2500\u2500\u2500train\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500X0.tif\n            \u2514\u2500\u2500\u2500...\n            \u2514\u2500\u2500\u2500Xn.tif\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500Y0.tif\n            \u2514\u2500\u2500\u2500...\n            \u2514\u2500\u2500\u2500Yn.tif\n    |\u2500\u2500\u2500val\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500...\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500...\n    |\u2500\u2500\u2500test\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500...\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9596945120983578,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "The authors would like to thank the Scientific Computing Facility at MPI-CBG, thank Matthias Arzt,  Joran  Deschamps  and  Nuno  Pimpao  Martins  for  feedback  and  testing.    Alf  Honigmann and  Anna  Goncharova  provided  the  `Mouse-Organoid-Cells-CBG`  data  and  annotations.   Jacqueline Tabler and Diana Afonso provided the `Mouse-Skull-Nuclei-CBG` dataset and annotations.  This work was supported by the German Federal Ministry of Research and Education (BMBF) under the codes 031L0102 (de.NBI) and 01IS18026C (ScaDS2), and the German Research Foundation (DFG) under the code JU3110/1-1(FiSS) and TO563/8-1 (FiSS). P.T. was supported by the European Regional Development Fund in the IT4Innovations national supercomputing center,  project number CZ.02.1.01/0.0/0.0/16013/0001791 within the Program Research, Development and Education. \nThe authors would like to thank the authors of **[StarDist](https://github.com/stardist/stardist)** repository for several useful, helper functions. The authors would also like to thank Sahar Kakavand and Marco Dalla Vecchia for feedback on notebooks. \n \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/juglab/EmbedSeg/wiki"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/juglab/EmbedSeg/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/monuseg-2018/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/dsb-2018/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/bbbc010-2012/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/2d/usiigaci-2017/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-ISH-Nuclei-CBG/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Skull-Nuclei-CBG/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Platynereis-Nuclei-CBG/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Arabidopsis-Cells-CAM/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/Mouse-Organoid-Cells-CBG/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d/C.elegans-Cells-HK/03-predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/01-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/01-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/02-train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/02-train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/03-predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/examples/3d_sliced/Platynereis-ISH-Nuclei-CBG/03-predict.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "juglab/EmbedSeg"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/34229641/117163211-bb727300-adc3-11eb-8fe4-ebd7d0e5fceb.png"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/34229641/118558022-5bd27b00-b766-11eb-889b-00886b725c2a.png"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8949328696916322,
      "result": {
        "type": "Text_excerpt",
        "value": "\n### Dependencies  \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9414215819431153,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "One could execute these lines of code to run this branch with GPU support:\n```\nmamba create -n EmbedSeg python\nmamba activate EmbedSeg\nmamba install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia\ngit clone https://github.com/juglab/EmbedSeg.git\ncd EmbedSeg\npip install -e .\n```\n \nFor CPU support, one could execute the following lines of code: \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "type": "Text_excerpt",
        "value": "\n```\nmamba create -n EmbedSeg python\nmamba activate EmbedSeg\npip install torch torchvision\ngit clone https://github.com/juglab/EmbedSeg.git\ncd EmbedSeg\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974046177108522,
      "result": {
        "original_header": "Issues",
        "type": "Text_excerpt",
        "value": "[file an issue]: https://github.com/juglab/EmbedSeg/issues \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8003014932979542,
      "result": {
        "type": "Text_excerpt",
        "value": "### Training and Inference on your data\n   \n`*.tif`-type images and the corresponding masks should be respectively present under `images` and `masks`, under directories `train`, `val` and `test`. (In order to prepare such instance masks, one could use the Fiji plugin <b>Labkit</b> as suggested <b>[here](https://github.com/juglab/EmbedSeg/wiki/01---Use-Labkit-to-prepare-instance-masks)</b>). The following would be a desired structure as to how data should be prepared.\n```\n$data_dir\n\u2514\u2500\u2500\u2500$project-name\n    |\u2500\u2500\u2500train\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500X0.tif\n            \u2514\u2500\u2500\u2500...\n            \u2514\u2500\u2500\u2500Xn.tif\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500Y0.tif\n            \u2514\u2500\u2500\u2500...\n            \u2514\u2500\u2500\u2500Yn.tif\n    |\u2500\u2500\u2500val\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500...\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500...\n    |\u2500\u2500\u2500test\n        \u2514\u2500\u2500\u2500images\n            \u2514\u2500\u2500\u2500...\n        \u2514\u2500\u2500\u2500masks\n            \u2514\u2500\u2500\u2500...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deep-learning, instance-segmentation, spatial-embeddings, test-time-augmentation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Attribution-NonCommercial 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  j. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  k. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  l. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \u201cLicensor.\u201d The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EmbedSeg"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "juglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 383132,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1906.11109"
      },
      "source": "https://raw.githubusercontent.com/juglab/EmbedSeg/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-02-14T09:22:35Z",
        "date_published": "2024-02-14T09:32:05Z",
        "description": "## What's Changed\n* v1.0.1: 2d + 3d code examples by @lmanan in https://github.com/juglab/EmbedSeg/pull/6\n* v0.2.3 by @lmanan in https://github.com/juglab/EmbedSeg/pull/7\n* Automatic calculation of crop size by @lmanan in https://github.com/juglab/EmbedSeg/pull/13\n* v0.2.5 - tag (a) by @lmanan in https://github.com/juglab/EmbedSeg/pull/19\n* V0.2.5 - tag (b) by @lmanan in https://github.com/juglab/EmbedSeg/pull/20\n* V0.2.5 - tag (c) by @lmanan in https://github.com/juglab/EmbedSeg/pull/21\n* V0.2.5 - tag (d) by @lmanan in https://github.com/juglab/EmbedSeg/pull/22\n* Update train.py by @ajinkya-kulkarni in https://github.com/juglab/EmbedSeg/pull/29\n* Update utils.py by @ajinkya-kulkarni in https://github.com/juglab/EmbedSeg/pull/28\n\n## New Contributors\n* @ajinkya-kulkarni made their first contribution in https://github.com/juglab/EmbedSeg/pull/29\n\n**Full Changelog**: https://github.com/juglab/EmbedSeg/compare/v0.2.0...v0.2.5",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.2.5",
        "name": "v0.2.5",
        "release_id": 141944478,
        "tag": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/141944478",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/141944478",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lmanan",
          "type": "User"
        },
        "date_created": "2022-04-18T11:30:37Z",
        "date_published": "2022-04-18T11:39:52Z",
        "description": "This release was used to compute numbers for the MIDL [publication](https://openreview.net/forum?id=JM6GuFGayL5) and is stable.\r\n\r\n- The normalization of the image intensities was done by dividing pixel intensities by 255 (for 8-bit images) and 65535 (for unsigned 16-bit images). While this normalization strategy lead to a faster training, it lead to a sometimes, poorer OOD performance. In the future releases, the default will be set to `min-max-percentile` (takes model longer to reach the same val IoU but leads to a better inference performance).",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.2.4-tag",
        "name": "MIDL Notebooks",
        "release_id": 64639293,
        "tag": "v0.2.4-tag",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.2.4-tag",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/64639293",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/64639293",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.2.4-tag"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lmanan",
          "type": "User"
        },
        "date_created": "2021-06-15T14:51:12Z",
        "date_published": "2021-06-15T15:00:53Z",
        "description": "A minor update since release **`v0.2.2`**. This includes:\r\n- Add **`display_zslice`** parameter and **`save_checkpoint_frequency`** parameter to `configs` dictionary **[here](https://github.com/juglab/EmbedSeg/blob/1f8fe3e3cfbb16a18a1db15510b6da26667baec0/EmbedSeg/utils/create_dicts.py#L305)**\r\n\r\n1. Support for visualization for setups when `virtual_batch_multiplier` > 1 is still missing. \r\n2. Also hardcoded install version of `tifffile` in `setup.py` [here](https://github.com/juglab/EmbedSeg/blob/a2b846176e3b04f217fef37d4673503d02af5dfb/setup.py#L36) because latest version currently (`2021.6.14`) generates a warning message with `imsave` command while generating crops with `bbbc010-2012` dataset. Will relax this version specification in release `v0.2.4`\r\n\r\nTODOs include:\r\n1. Plan to update `pytorch` version to `1.9.0` in release `v0.2.4` (currently pytorch version used is `1.1.0`)\r\n2. Plan to add `tile and stitch` capability in release `v0.2.4` for handling in large 2d and 3d images during inference\r\n3. Plan to add a parameter `max_crops_per_image` in release `v0.2.4` to set an optional upper bound on number of crops extracted from each image\r\n4. Plan to save all instance crops and center crops as RLE files in release `v0.2.4`\r\n5. Plan to add an optional  mask parameter during training which ignores loss computation from certain regions of the image in release `v0.2.4`\r\n6. Plan to deal with bug while evaluating `var_loss` and to have crops of desired size by additional padding.\r\n7. Plan to include support for more classes. \r\n8. Normalization for 3d ==> (0,1, 2)\r\n9. Make normalization as default option for better extensibility\r\n10. Parallelize operations like cropping\r\n11. Eliminate the specification of grid size in notebooks -set to some default value\r\n12. Simplify notebooks further\r\n13. Make colab versions of the notebooks\r\n14. Test `center=learn` capability for learning the center freely\r\n15. Add the ILP formulation for stitching 2d instance predictions\r\n16. Add the code for converting predictions from 2d model on xy, yz and xz slices to generate a 3D instance segmentation\r\n17. Add more examples from medical image datasets    \r\n18. Add `threejs` visualizations of the instance segmentations. Explain how to generate these meshes, smoothen them and import them with `threejs` script. \r\n19. Padding  with `reflection` instead of `constant` mode\r\n20. Include `cluster_with_seeds` in case nuclei or cell detections are additionally available",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.2.3-tag",
        "name": "Minor bug-fixes",
        "release_id": 44653726,
        "tag": "v0.2.3-tag",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.2.3-tag",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/44653726",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/44653726",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.2.3-tag"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lmanan",
          "type": "User"
        },
        "date_created": "2021-05-05T23:41:55Z",
        "date_published": "2021-05-05T23:46:37Z",
        "description": "- Add all 3d example notebooks\r\n- Pad images with average background intensity instead of 0",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.2.2-tag",
        "name": "3d example notebooks",
        "release_id": 42509549,
        "tag": "v0.2.2-tag",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.2.2-tag",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/42509549",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/42509549",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.2.2-tag"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lmanan",
          "type": "User"
        },
        "date_created": "2021-04-17T22:03:28Z",
        "date_published": "2021-04-17T22:11:04Z",
        "description": "Major changes:\r\n\r\n- Add 3d example notebooks for two datasets\r\n- Correct `min_object_size` (evaluated now from looking at the train and validation masks)\r\n- Save `tif` images with datatype `np.uint16` (in the prediction notebooks )\r\n- Provide support in case evaluation GT images are not available (during prediction)\r\n\r\nSome things which are still incorrect in v0.2.0:\r\n\r\n- `n_y` should be set to `n_x` for equal pixel/voxel sizes in y and x dimension. This is fixed in v0.2.1\r\n-  `anisotropy_factor` is wrongly calculated for the 3d notebooks (it was calculated as the reciprocal). This is fixed in v0.2.1\r\n- `train_size` was set to 600 for the `bbbc012-2010` dataset. This is raised to 1200 in v0.2.1\r\n  ",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.2.0",
        "name": "Functional 2d + 3d code",
        "release_id": 41594629,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/41594629",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/41594629",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lmanan",
          "type": "User"
        },
        "date_created": "2021-04-11T14:05:09Z",
        "date_published": "2021-01-13T15:55:40Z",
        "description": "- Initial functional 2d code (`min_object_size` was hard coded to 36 and will be updated in later iterations)\r\n- Assets include: \r\n    - 2d images and GT instance annotations\r\n    - 3d images and GT instance annotations\r\n    - fully trained models (`*demo.tar`) (models trained from scratch up till 200 iterations)\r\n    - glasbey-like colormap (`cmap_60.npy`)\r\n    \r\n",
        "html_url": "https://github.com/juglab/EmbedSeg/releases/tag/v0.1.0",
        "name": "Functional 2d code, datasets, fully trained models and colormap",
        "release_id": 36341527,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/juglab/EmbedSeg/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/juglab/EmbedSeg/releases/36341527",
        "value": "https://api.github.com/repos/juglab/EmbedSeg/releases/36341527",
        "zipball_url": "https://api.github.com/repos/juglab/EmbedSeg/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:15:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 112
      },
      "technique": "GitHub_API"
    }
  ]
}