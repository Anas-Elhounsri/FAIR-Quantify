{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marbl/Winnowmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-11T02:27:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T10:43:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Long read / genome alignment software"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9956002541965341,
      "result": {
        "original_header": "Winnowmap",
        "type": "Text_excerpt",
        "value": "Winnowmap is a long-read mapping algorithm optimized for mapping ONT and PacBio reads to repetitive reference sequences. Winnowmap development began on top of [minimap2](https://github.com/lh3/minimap2/) codebase, and since then we have incorporated the following two ideas to improve mapping accuracy within repeats.  \n- Winnowmap implements a novel **weighted minimizer** sampling algorithm (>=v1.0). This optimization was motivated by the need to avoid masking of frequently occurring k-mers during the seeding stage in an efficient manner, and achieve better mapping accuracy in complex repeats (e.g., long tandem repeats) of the human genome. Using weighted minimizers, Winnowmap down-weights frequently occurring k-mers, thus reducing their chance of getting selected as minimizers. Users can refer to [this paper](https://doi.org/10.1093/bioinformatics/btaa435) for more details. This idea is helpful to preserve the [theoretical guarantee](http://www.cs.toronto.edu/~wayne/research/papers/minimizers.pdf) of minimizer sampling technique, i.e., if two sequences share a substring of a specified length, then they must be guaranteed to have a matching minimizer.    \n- We noticed that the highest scoring alignment doesn't necessarily correspond to correct placement of reads in repetitive regions of [T2T human chromosomes](https://github.com/nanopore-wgs-consortium/CHM13). In the presence of a non-reference allele within a repeat, a read sampled from that region could be mapped to an incorrect repeat copy because the standard pairwise sequence alignment scoring system penalizes true variants. This is also sometimes referred to as allelic bias. To address this bias, we introduced and implemented an idea of using **minimal confidently alignable substrings** (>=v2.0). These are minimal-length substrings in a read that align end-to-end to a reference with [mapping quality score](https://genome.sph.umich.edu/wiki/Mapping_Quality_Scores) above a user-specified threshold. This approach treats each read mapping as a collection of confident sub-alignments, which is more tolerant of structural variation and more sensitive to paralog-specific variants (PSVs). Our [most recent paper](https://doi.org/10.1101/2020.11.01.363887) desribes this concept and benchmarking results.    \n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9238326604998122,
      "result": {
        "original_header": "Benchmarking",
        "type": "Text_excerpt",
        "value": "When comparing Winnowmap (v1.0) to minimap2 (v2.17-r954), we observed a reduction in the mapping error-rate from 0.14% to 0.06% in the recently finished [human X chromosome](https://github.com/nanopore-wgs-consortium/CHM13), and from 3.6% to 0% within the highly repetitive X centromere (3.1 Mbp). Winnowmap improves mapping accuracy within repeats and achieves these results with sparser sampling, leading to better index compression and competitive runtimes. By avoiding masking, we show that Winnowmap maintains uniform minimizer density. \n<p align=\"center\">\n<img src=\"https://i.postimg.cc/MKtqBYPn/readme-winnowmap-density.jpg\" width=400px\"> <br>\nMinimizer sampling density using a human X chromosome as the reference, with the centromere positioned between 58 Mbp and 61 Mbp. \u2018Standard\u2019 method refers to the classic minimizer sampling algorithm from <a href=\"http://www.cs.toronto.edu/~wayne/research/papers/minimizers.pdf\">Roberts et al.</a>, without any masking or modification.\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8475471415337033,
      "result": {
        "original_header": "Publications",
        "type": "Text_excerpt",
        "value": "- **Chirag Jain, Arang Rhie, Nancy Hansen, Sergey Koren and Adam Phillippy**. \"[Long-read mapping to repetitive reference sequences using Winnowmap2](https://doi.org/10.1038/s41592-022-01457-8)\". *Nature Methods*, 2022.\n- **Chirag Jain, Arang Rhie, Haowen Zhang, Chaudia Chu, Brian Walenz, Sergey Koren and Adam Phillippy**. \"[Weighted minimizer sampling improves long read mapping](https://doi.org/10.1093/bioinformatics/btaa435)\". *Bioinformatics (ISMB proceedings)*, 2020.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marbl/Winnowmap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marbl/Winnowmap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "marbl/Winnowmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Winnowmap"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/src/utility/src/utility/libbacktrace/make.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/src/utility/scripts/build_initial_repo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/scripts/build-initial-meryl-repo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/scripts/merge-meryl-canu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/scripts/buildRelease.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/ext/meryl/scripts/build-initial-canu-repo.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.postimg.cc/MKtqBYPn/readme-winnowmap-density.jpg"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999999999716,
      "result": {
        "original_header": "Compile",
        "type": "Text_excerpt",
        "value": "Clone source code from master branch or download the [latest release](https://github.com/marbl/Winnowmap/releases/latest).\n  ```sh\n\tgit clone https://github.com/marbl/Winnowmap.git\n  ```\nWinnowmap compilation requires C++ compiler with c++11 and openmp, which are available by default in GCC >= 4.8.\n  BASH2*\nExpect `winnowmap` and `meryl` executables in `bin` folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marbl/Winnowmap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genome-analysis, nanopore, pacbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This software constitutes a joint work and the contributions of individual\nauthors are subject to different licenses.  Contributions and licenses are\nlisted in the applicable source files, with specific details on each\nindividual contribution captured in the revision control system.\n\n--\nFor all code, except as indicated otherwise:\n\nPUBLIC DOMAIN NOTICE\n\nThis software is freely available to the public for use\nwithout a copyright notice. Restrictions cannot be placed on its present or\nfuture use.\n\nAlthough all reasonable efforts have been taken to ensure the accuracy and\nreliability of the software and associated data, the National Human Genome\nResearch Institute (NHGRI), National Institutes of Health (NIH) and the\nU.S. Government do not and cannot warrant the performance or results that\nmay be obtained by using this software or data. NHGRI, NIH and the\nU.S. Government disclaim all warranties as to performance, merchantability\nor fitness for any particular purpose.\n\nPlease cite the authors in any work or product based on this material.\n\n--\nFor minimap2:\n\nURL: https://lh3.github.io/minimap2\n\nThe MIT License\n\nCopyright (c) 2018-     Dana-Farber Cancer Institute\n              2017-2018 Broad Institute, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--\nFor bloom: \n\nURL: http://www.partow.net/programming/bloomfilter/index.html\n\nCopyright notice:\nFree use of the Open Bloom Filter Library is permitted under the\nguidelines and in accordance with the MIT License.  \nhttp://www.opensource.org/licenses/MIT\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Winnowmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "marbl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 5736086,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 284139,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 68676,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 27007,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 25590,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 6397,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1820,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2021-05-08T09:04:25Z",
        "date_published": "2021-05-08T09:05:38Z",
        "description": "These are release notes for Winnowmap version 2.03, which was released on May 8, 2021. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v2.02, the new version includes changes in default parameters to improve runtime.\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code and see README file that specifies a simple installation procedure.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v2.03",
        "name": "Winnowmap 2.03",
        "release_id": 42641307,
        "tag": "v2.03",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v2.03",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/42641307",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/42641307",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v2.03"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2021-04-13T18:09:54Z",
        "date_published": "2021-04-28T13:35:36Z",
        "description": "These are release notes for Winnowmap version 2.02, which was released on April 28, 2021. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v2.01, the new version includes minor changes in its minimap2-based backend code. These changes were taken from the recent release of minimap2 [v2.18](https://github.com/lh3/minimap2/releases/tag/v2.18).\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code and see README file that specifies a simple installation procedure.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v2.02",
        "name": "Winnowmap 2.02",
        "release_id": 42138891,
        "tag": "v2.02",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v2.02",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/42138891",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/42138891",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v2.02"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2021-04-03T05:19:39Z",
        "date_published": "2021-04-04T13:24:46Z",
        "description": "These are release notes for Winnowmap version 2.01, which was released on April 4, 2021. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v2.0, the new version fixes a bug associated with read alignments getting clipped incorrectly. Thanks to T2T consortium members for highlighting this issue!\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code and see README file that specifies a simple installation procedure.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v2.01",
        "name": "Winnowmap 2.01",
        "release_id": 40915726,
        "tag": "v2.01",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v2.01",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/40915726",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/40915726",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v2.01"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-11-01T16:26:24Z",
        "date_published": "2020-11-01T16:30:52Z",
        "description": "These are release notes for Winnowmap version 2.0, which was released on November 1, 2020. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  There are no significant changes compared to v1.11; this release corresponds to Winnowmap2 preprint that is now available through BioRxiv.\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code and see README file that specifies a simple installation procedure.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v2.0",
        "name": "Winnowmap 2.0",
        "release_id": 33324210,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/33324210",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/33324210",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-08-09T00:38:37Z",
        "date_published": "2020-08-09T00:48:57Z",
        "description": "These are release notes for Winnowmap version 1.11, which was released on August 8, 2020. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v1.1, this version improves runtime by improving load-balance among threads.\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code and see README file that specifies a simple installation procedure.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v1.11",
        "name": "Winnowmap 1.11",
        "release_id": 29481338,
        "tag": "v1.11",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/29481338",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/29481338",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-07-22T01:30:52Z",
        "date_published": "2020-07-22T02:22:44Z",
        "description": "These are release notes for Winnowmap version 1.1, which was released on July 21st, 2020. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v1.01, this version implements a revised anchor selection algorithm to improve variant calling in repetitive genomic regions. \r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code or as pre-compiled linux binaries.",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v1.1",
        "name": "Winnowmap 1.1",
        "release_id": 28808490,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/28808490",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/28808490",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-05-28T18:52:29Z",
        "date_published": "2020-05-28T18:56:09Z",
        "description": "Upgraded to [meryl](https://github.com/marbl/meryl) k-mer counter; minor improvements / fixes in chaining algorithm; improvement in total runtime.\r\n\r\nWe recommend git cloning the source code, and compile directly (instructions in README). ",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v1.01",
        "name": "Winnowmap v1.01",
        "release_id": 27004478,
        "tag": "v1.01",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v1.01",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/27004478",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/27004478",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v1.01"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "skoren",
          "type": "User"
        },
        "date_created": "2020-02-07T11:48:52Z",
        "date_published": "2020-02-11T16:40:52Z",
        "description": "These are release notes for Winnowmap version 1.0, which was released on February 11th, 2020. Full documentation can be found by running ```winnowmap -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  The binary distributions should work on any relatively recent version of the respective OS.  The source code distribution contains everything you need to create a binary distribution for your own specific OS.\r\n\r\n## Installation\r\n\r\nUsers can download Winnowmap as source code or as pre-compiled binaries. The binary distribution is the recommended install method, assuming it is available for your platform. The source code package needs to be compiled and installed before it can be used. \r\n\r\nTo install from a binary distribution (recommended installation method):\r\n\r\n```\r\ntar -xzf winnowmap-1.0.*.tar.gz\r\n./winnowmap-1.0/winnowmap -h\r\n```\r\n\r\nTo install from source code (the file can be named either `winnowmap-v1.0.tar.gz` or just `v1.0.tar.gz`, depending on how it is downloaded):\r\n\r\n```\r\ngunzip -dc winnowmap-v1.0.tar.gz | tar -xf -\r\ncd winnowmap\r\nmake -j 8\r\ncd ..\r\n```",
        "html_url": "https://github.com/marbl/Winnowmap/releases/tag/v1.0",
        "name": "Winnowmap 1.0",
        "release_id": 23573472,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/marbl/Winnowmap/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/Winnowmap/releases/23573472",
        "value": "https://api.github.com/repos/marbl/Winnowmap/releases/23573472",
        "zipball_url": "https://api.github.com/repos/marbl/Winnowmap/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:49:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 250
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Winnowmap"
        ],
        "type": "Text_excerpt",
        "value": "For either mapping long reads or computing whole-genome alignments, Winnowmap requires pre-computing high frequency k-mers (e.g., top 0.02% most frequent) in a reference. Winnowmap uses [meryl](https://github.com/marbl/meryl) k-mer counting tool for this purpose.  \n\n*  Mapping ONT or PacBio-hifi WGS reads\n  ```sh\n\tmeryl count k=15 output merylDB ref.fa\n\tmeryl print greater-than distinct=0.9998 merylDB > repetitive_k15.txt\n\n\twinnowmap -W repetitive_k15.txt -ax map-ont ref.fa ont.fq.gz > output.sam  [OR]\n\twinnowmap -W repetitive_k15.txt -ax map-pb ref.fa hifi.fq.gz > output.sam\n  ```\n\n*  Mapping genome assemblies\n\n  ```sh\n\tmeryl count k=19 output merylDB asm1.fa\n\tmeryl print greater-than distinct=0.9998 merylDB > repetitive_k19.txt\n\n\twinnowmap -W repetitive_k19.txt -ax asm20 asm1.fa asm2.fa > output.sam\n  ```\n  For the genome-to-genome use case, it may be useful to visualize the dot plot. This [perl script](https://github.com/marbl/MashMap/blob/master/scripts) can be used to generate a dot plot from [paf](https://github.com/lh3/miniasm/blob/master/PAF.md)-formatted output. In both usage cases, pre-computing repetitive k-mers using [meryl](https://github.com/marbl/meryl) is quite fast, e.g., it typically takes 2-3 minutes for the human genome reference.\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/Winnowmap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}