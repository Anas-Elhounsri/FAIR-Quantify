{
  "application_domain": [
    {
      "confidence": 32.09,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please use below to cite our paper if you find our work useful in your research.\n\n\nYang, P., Hong, Z., Yin, X., Zhu, C. and Jiang, R., 2021, September. Self-supervised visual representation learning for histopathological images. In International Conference on Medical Image Computing and Computer-Assisted Intervention (pp. 47-57). Springer, Cham.\n\nYang, P., Yin, X., Lu, H., Hu, Z., Zhang, X., Jiang, R. and Lv, H., 2022. CS-CO: A Hybrid Self-Supervised Visual Representation Learning Method for H&E-stained Histopathological Images. Medical Image Analysis, 81, p.102539.\n\n\n\n```\n@InProceedings{10.1007/978-3-030-87196-3_5,\nauthor=\"Yang, Pengshuai\nand Hong, Zhiwei\nand Yin, Xiaoxu\nand Zhu, Chengzhan\nand Jiang, Rui\",\ntitle=\"Self-supervised Visual Representation Learning for Histopathological Images\",\nbooktitle=\"Medical Image Computing and Computer Assisted Intervention -- MICCAI 2021\",\nyear=\"2021\",\npublisher=\"Springer International Publishing\",\naddress=\"Cham\",\npages=\"47--57\",\nisbn=\"978-3-030-87196-3\"\n}\n```\n\n```\n@article{YANG2022102539,\ntitle = {CS-CO: A Hybrid Self-Supervised Visual Representation Learning Method for H&E-stained Histopathological Images},\njournal = {Medical Image Analysis},\nvolume = {81},\npages = {102539},\nyear = {2022},\nissn = {1361-8415},\ndoi = {https://doi.org/10.1016/j.media.2022.102539},\nurl = {https://www.sciencedirect.com/science/article/pii/S1361841522001864},\nauthor = {Pengshuai Yang and Xiaoxu Yin and Haiming Lu and Zhongliang Hu and Xuegong Zhang and Rui Jiang and Hairong Lv},\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Yang, Pengshuai\nand Hong, Zhiwei\nand Yin, Xiaoxu\nand Zhu, Chengzhan\nand Jiang, Rui",
        "format": "bibtex",
        "title": "Self-supervised Visual Representation Learning for Histopathological Images",
        "type": "Text_excerpt",
        "value": "@inproceedings{10.1007/978-3-030-87196-3_5,\n    isbn = {978-3-030-87196-3},\n    pages = {47--57},\n    address = {Cham},\n    publisher = {Springer International Publishing},\n    year = {2021},\n    booktitle = {Medical Image Computing and Computer Assisted Intervention -- MICCAI 2021},\n    title = {Self-supervised Visual Representation Learning for Histopathological Images},\n    author = {Yang, Pengshuai\nand Hong, Zhiwei\nand Yin, Xiaoxu\nand Zhu, Chengzhan\nand Jiang, Rui},\n}"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Pengshuai Yang and Xiaoxu Yin and Haiming Lu and Zhongliang Hu and Xuegong Zhang and Rui Jiang and Hairong Lv",
        "doi": "https://doi.org/10.1016/j.media.2022.102539",
        "format": "bibtex",
        "title": "CS-CO: A Hybrid Self-Supervised Visual Representation Learning Method for H&E-stained Histopathological Images",
        "type": "Text_excerpt",
        "url": "https://www.sciencedirect.com/science/article/pii/S1361841522001864",
        "value": "@article{YANG2022102539,\n    author = {Pengshuai Yang and Xiaoxu Yin and Haiming Lu and Zhongliang Hu and Xuegong Zhang and Rui Jiang and Hairong Lv},\n    url = {https://www.sciencedirect.com/science/article/pii/S1361841522001864},\n    doi = {https://doi.org/10.1016/j.media.2022.102539},\n    issn = {1361-8415},\n    year = {2022},\n    pages = {102539},\n    volume = {81},\n    journal = {Medical Image Analysis},\n    title = {CS-CO: A Hybrid Self-Supervised Visual Representation Learning Method for H&E-stained Histopathological Images},\n}"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/easonyang1996/CS-CO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-17T07:18:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-09T08:18:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MICCAI2021 Paper: Self-supervised visual representation learning for histopathological images"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.987527910200098,
      "result": {
        "original_header": "CS-CO",
        "type": "Text_excerpt",
        "value": "CS-CO is a hybrid self-supervised visual representation learning method tailored for H&E-stained histopathological images. This work has been presented in MICCAI2021 conference as an oral talk. An extended version of the MICCAI2021 paper has been accepted by Medical Image Analysis. \n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.964421403661471,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "We provide detailed step-by-step instructions for reproducing experiments of the proposed method on NCT-CRC-HE-100K. You can also run the proposed method on your own dataset in a similar way. \nPlease download the dataset from [NCT-CRC-HE-100K](https://zenodo.org/record/1214456#.Yn9lVy8RrfY). In our paper, `NCT-CRC-HE-100K.zip` is used as the training set and `CRC-VAL-HE-7K.zip` is used as the test set. For each set, we exclude images belonging to \"BACK\" class and move the rest images to one folder. \n```\n____NCT-CRC\n    |____train\n         |____patches\n              |____aaa.png\n              |____bbb.png\n              |____ccc.png\n    |____test\n         |____patches\n              |____ddd.png\n              |____eee.png\n              |____fff.png\n```\nThen, please go to `./data_preprocess/` and do stain separation on training and test set separately by running:\n```\npython3 H_H_prime_generate.py\n```\n \nThe configurations of all methods are saved in `./train/config/`, and you can modify them as you wish. \nThe model weights of Transpath and SimCLR-ciga can be found from [Xiyue-Wang/TransPath](https://github.com/Xiyue-Wang/TransPath) and [ozanciga/self-supervised-histopathology](https://github.com/ozanciga/self-supervised-histopathology) respectively. Please download and put them in `./linear_eval/` if you want to test the performance of Transpath and SimCLR-ciga. \n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/easonyang1996/CS-CO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/easonyang1996/CS-CO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "easonyang1996/CS-CO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CS-CO"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/ablation/run_co.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/ablation/eval.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/linear_eval/eval.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/full_supervised_resnet/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/train/run_cs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/train/run_co.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/train/run_byol_simsiam.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/train/run_chen_xie.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/figs/framework.png"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9340896957885192,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "You can also reproduce competing methods by running `run_byol_simsiam.sh` or `run_chen_xie.sh`.  \n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8108940842840333,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "At the first stage, cross-stain prediction can be done by running:\n```\nCUDA_VISIBLE_DEVICES=0 python3 -u 4_csco_train.py configs/NCT_CRC/cs_conf_resnet18.ini \n```\nAt the second stage, contrastive learning can be done by running:\n```\nCUDA_VISIBLE_DEVICES=0,1,2 python3 -u 4_csco_train_dist.py configs/NCT_CRC/cs-co_conf_resnet18.ini 3\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/easonyang1996/CS-CO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 easonyang1996\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CS-CO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "easonyang1996"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 229117,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9861,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/easonyang1996/CS-CO/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:21:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ]
}