{
  "application_domain": [
    {
      "confidence": 21.43,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use or extend this work, please cite [this paper](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac744/6835407) where it is introcuded. \n\n```\n@article{10.1093/bioinformatics/btac744,\n    author = {Chen, Wei and Zhong, Cheng and Peng, Jiajie and Wei, Zhongyu},\n    title = \"{DxFormer: a decoupled automatic diagnostic system based on decoder\u2013encoder transformer with dense symptom representations}\",\n    journal = {Bioinformatics},\n    year = {2022},\n    month = {11},\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btac744},\n    url = {https://doi.org/10.1093/bioinformatics/btac744},\n    note = {btac744},\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btac744/47804760/btac744.pdf},\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Chen, Wei and Zhong, Cheng and Peng, Jiajie and Wei, Zhongyu",
        "doi": "10.1093/bioinformatics/btac744",
        "format": "bibtex",
        "title": "{DxFormer: a decoupled automatic diagnostic system based on decoder\u2013encoder transformer with dense symptom representations}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btac744",
        "value": "@article{10.1093/bioinformatics/btac744,\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btac744/47804760/btac744.pdf},\n    note = {btac744},\n    url = {https://doi.org/10.1093/bioinformatics/btac744},\n    doi = {10.1093/bioinformatics/btac744},\n    issn = {1367-4803},\n    month = {11},\n    year = {2022},\n    journal = {Bioinformatics},\n    title = {{DxFormer: a decoupled automatic diagnostic system based on decoder\u2013encoder transformer with dense symptom representations}},\n    author = {Chen, Wei and Zhong, Cheng and Peng, Jiajie and Wei, Zhongyu},\n}"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lemuria-wchen/DxFormer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-02T21:19:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-16T10:15:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code for our Bioinformatics 2022 paper: \"DxFormer: A Decoupled Automatic Diagnostic System Based on Decoder-Encoder Transformer with Dense Symptom Representations\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9336274609420598,
      "result": {
        "original_header": "DxFormer",
        "type": "Text_excerpt",
        "value": "Code for our Bioinformatics 2022 paper: [DxFormer: A Decoupled Automatic Diagnostic System Based on Decoder-Encoder Transformer with Dense Symptom Representations](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac744/6835407).  \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download data",
        "parent_header": [
          "DxFormer"
        ],
        "type": "Text_excerpt",
        "value": "Download the datasets, then decompress them and put them in the corrsponding documents in  `data/{dxy|mz4|mz10}/raw`. For example, download mz4 dataset and put the dataset to the `data/mz4/raw`. \n\nThe dataset can be downloaded as following links:\n\n- [Dxy dataset](https://github.com/HCPLab-SYSU/Medical_DS)\n- [MZ-4 dataset](http://www.sdspeople.fudan.edu.cn/zywei/data/acl2018-mds.zip)\n- [MZ-10 dataset](https://github.com/lemuria-wchen/imcs21)\n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lemuria-wchen/DxFormer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lemuria-wchen/DxFormer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lemuria-wchen/DxFormer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.808940144778939,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "```shell\npython preprocess.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9342117344767022,
      "result": {
        "original_header": "Accuracy Bound",
        "type": "Text_excerpt",
        "value": "The default dataset is MZ-10, please modify the code to change dataset by just replace `mz10` to `dxy` or `mz4`. \n```shell\npython bound.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8580411007881982,
      "result": {
        "original_header": "Training &amp; Inference",
        "type": "Text_excerpt",
        "value": "```\npython train.py\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9042994316019511,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "```shell\npython preprocess.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.890529882084851,
      "result": {
        "original_header": "Pre-training",
        "type": "Text_excerpt",
        "value": "```\npython pretrain.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9496823546958583,
      "result": {
        "original_header": "Training &amp; Inference",
        "type": "Text_excerpt",
        "value": "```\npython train.py\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lemuria-wchen/DxFormer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "automatic-diagnosis, deep-learning, reinforcement-learning, transformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 lemuria-wchen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DxFormer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lemuria-wchen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 86125,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lemuria-wchen/DxFormer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:35:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}