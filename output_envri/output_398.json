{
  "application_domain": [
    {
      "confidence": 42.41,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement (CLA). You (or your employer) retain the copyright to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project. Head over to\n<https://cla.developers.google.com/> to see your current agreements on file or\nto sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code Reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google/conduct/)."
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/CONTRIBUTING",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-18T18:07:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-13T14:54:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository compiles prescriptive guidance and code samples demonstrating how to operationalize Google Research T5X framework on Google Cloud Vertex AI."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI"
        ],
        "type": "Text_excerpt",
        "value": "T5X is a machine learning (ML) framework for developing high-performance\nsequence models, including large language models (LLMs). For more information\nabout T5X, see the following resources:\n\n-  [Scaling Up Models and Data with `t5x` and `seqio`](https://arxiv.org/abs/2203.17189)\n-  [T5X Github repo](https://github.com/google-research/t5x)\n\nT5X is built as a [JAX](https://jax.readthedocs.io/en/latest/index.html)-based\nlibrary for training, evaluating, and inferring with sequence models. T5X's\nprimary focus is on Transformer type language models. You can use T5X to\npretrain language models and to fine-tune a pretrained language model. The T5X\nGitHub repo includes\n[references](https://github.com/google-research/t5x/blob/main/docs/models.md) to\na large number of pretrained Transformer models, including the T5 and Switch\nTransformer families of models.\n\nT5X is streamlined, modular, and composable. You can implement pretraining,\nfine-tuning, evaluating, and inferring by configuring reusable components that\nare provided by T5X rather than having to develop custom Python modules. \n\n[Vertex AI](https://cloud.google.com/vertex-ai) is Google Cloud's unified ML\nplatform that's designed to help data scientists and ML engineers increase their\nvelocity of experimentation, deploy faster, and manage models with confidence.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9889584331720113,
      "result": {
        "original_header": "Developing NLP solutions with T5X and Vertex AI",
        "type": "Text_excerpt",
        "value": "This repository compiles prescriptive guidance and code samples that show how to\noperationalize the Google Research T5X framework using Google Cloud Vertex AI.\nUsing T5X with Vertex AI enables streamlined experimentation, development, and\ndeployment of natural language processing (NLP) solutions at scale. \nThe guidance assumes that you're familiar with ML concepts such as large\nlanguage models (LLMs), and that you're generally familiar with Google Cloud\nfeatures like Cloud Storage, Cloud TPUs, and Google Vertex AI. \n \n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/eval-t511-xl-xsum.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/eval-t511-xl-xsum.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/finetune-t511-xl-xsum.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/finetune-t511-xl-xsum.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/finetune-t511-large-squad.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/finetune-t511-large-squad.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/getting-started.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/notebooks/getting-started.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Verify quota to run jobs using Vertex AI TPUs",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "Some notebooks demonstrate scenarios that require as many as 128 TPU cores. \n \nIf you need an increase in Vertex AI TPU quota values, follow these steps:\n\n1. In the Cloud Console, navigate to the **Quotas** tab of the [Vertex AI API page](https://console.cloud.google.com/apis/api/aiplatform.googleapis.com/quotas).\n2. In the **Enter property name or value box** that's next to the **Filter** label, add a filter that has the following conditions:\n* **Quota: Custom model training TPU V2 cores per region** or **Custom model training TPU V3 cores per region** \n* **Dimensions (e.g. location):  Region:** <YOUR_REGION>\n\n**Note**: Vertex AI TPUs are not available in all regions. If the **Limit** value in the listing is 8, TPUs are available, and you can request more by increasing the **Quota** value. If the **Limit** value is 0, no TPUs are available, and the **Quota** value cannot be changed.\n \n3. In the listing, select the quota that matches your filter criteria and then click **Edit Quotas**. \n \n4. In the **New limit** box, enter the required value and then submit the quota change request.\n\nQuota increases don\u2019t directly impact your billing because you are still required to specify the number of TPU cores to submit your T5X tasks. Only the tasks submitted with a high number of TPU cores result in higher billing.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GoogleCloudPlatform/t5x-on-vertex-ai/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GoogleCloudPlatform/t5x-on-vertex-ai"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Developing NLP solutions with T5X and Vertex AI"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main//images/arch.png"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Environment setup",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI"
        ],
        "type": "Text_excerpt",
        "value": "This section outlines the steps to configure the Google Cloud environment that is required in order to run the code samples in this repo.\n \n\n![arch](/images/arch.png)\n\n\n\n* You use a user-managed instance of Vertex AI Workbench  as your development environment and the primary interface to Vertex AI services.\n* You run T5X training, evaluating, and inferring tasks as Vertex Training custom jobs using a custom training container image.\n* You use Vertex AI Experiments and Vertex AI Tensorboard for job monitoring and experiment tracking.\n* You use a regional Cloud Storage bucket to manage artifacts created by T5X jobs.\n\nTo set up the environment execute the following steps.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Select a Google Cloud project",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "In the Google Cloud Console, on the project selector page, [select or create a Google Cloud project](https://console.cloud.google.com/projectselector2/home/dashboard?_ga=2.77230869.1295546877.1635788229-285875547.1607983197&_gac=1.82770276.1635972813.Cj0KCQjw5oiMBhDtARIsAJi0qk2ZfY-XhuwG8p2raIfWLnuYahsUElT08GH1-tZa28e230L3XSfYewYaAlEMEALw_wcB). You need to be a project owner in order to set up the environment.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Enable the required services",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "From [Cloud Shell](https://cloud.google.com/shell/docs/using-cloud-shelld.google.com/shell/docs/using-cloud-shell), run the following commands to enable the required Cloud APIs:\n\n```bash\nexport PROJECT_ID=<YOUR_PROJECT_ID>\n \ngcloud config set project $PROJECT_ID\n \ngcloud services enable \\\n  cloudbuild.googleapis.com \\\n  compute.googleapis.com \\\n  cloudresourcemanager.googleapis.com \\\n  iam.googleapis.com \\\n  container.googleapis.com \\\n  cloudapis.googleapis.com \\\n  cloudtrace.googleapis.com \\\n  containerregistry.googleapis.com \\\n  iamcredentials.googleapis.com \\\n  monitoring.googleapis.com \\\n  logging.googleapis.com \\\n  notebooks.googleapis.com \\\n  aiplatform.googleapis.com \\\n  storage.googleapis.com\n```\n\n**Note**: When you work with Vertex AI user-managed notebooks, be sure that all the services that you're using are provisioned in the same project and the same compute region as the available Vertex AI TPU pods regions. For a list of regions where TPU pods are available, see [Locations](https://cloud.google.com/vertex-ai/docs/general/locations#accelerators) in the Vertex AI documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configure Vertex AI Workbench",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "You can create a user-managed notebooks instance from the command line.\n \n**Note**: Make sure that you're following these steps in the same project as before.\n \nIn Cloud Shell, enter the following command. For `<YOUR_INSTANCE_NAME>`, enter a name starting with a lower-case letter followed by lower-case letters, numbers or dash sign. For `<YOUR_LOCATION>`, add a zone (for example, `us-central1-a` or `europe-west4-a`).\n\n```bash\nPROJECT_ID=$(gcloud config list --format 'value(core.project)')\nINSTANCE_NAME=<YOUR_INSTANCE_NAME>\nLOCATION=<YOUR_LOCATION>\ngcloud notebooks instances create $INSTANCE_NAME \\\n     --vm-image-project=deeplearning-platform-release \\\n     --vm-image-family=common-cpu-notebooks \\\n     --machine-type=n1-standard-4 \\\n     --location=$LOCATION\n```\n\nVertex AI Workbench creates a user-managed notebooks instance based on the properties that you specified and then automatically starts the instance. When the instance is ready to use, Vertex AI Workbench activates an **Open JupyterLab** link next to the instance name in the [Vertex AI Workbench Cloud Console](https://console.cloud.google.com/vertex-ai/workbench/list/instances) page. To connect to your user-managed notebooks instance, click **Open JupyterLab**.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clone the repo, install dependencies, and build the base container image",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "After the Vertex Workbench user-managed notebook Jupyter lab is launched, perform the following steps:\n\n1. On the Launcher page, start a new terminal session by clicking the Terminal icon.\n2. Clone the repository to your notebook instance:\n\n```bash\ngit clone https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai.git\n```\n3. Install code dependencies:\n \n```bash\ncd t5x-on-vertex-ai\npip install -U pip\npip install google-cloud-aiplatform[tensorboard] tfds-nightly t5[gcp]\n```\n\n4. Build the base T5X container image in Container Registry. For `<YOUR_PROJECT_ID>`, use the ID of the Google project that you are working with. \n\n```bash\nexport PROJECT_ID=<YOUR_PROJECT_ID>\ngcloud config set project $PROJECT_ID\n \nIMAGE_NAME=t5x-base\nIMAGE_URI=gcr.io/${PROJECT_ID}/${IMAGE_NAME}\ngcloud builds submit --timeout \"2h\" --tag ${IMAGE_URI} . --machine-type=e2-highcpu-8\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Create a staging Cloud Storage bucket",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "The notebooks in the repo require access to a Cloud Storage bucket that's used for staging and for managing ML artifacts created by the jobs submitted. The bucket must be in the same Google Cloud region as the region you will use to run Vertex AI custom jobs.\n \n* In the Jupyter lab terminal, create the bucket. For `<YOUR_REGION>`, specify the region. For `<YOUR_BUCKET_NAME>`, use a [globally unique name](https://cloud.google.com/storage/docs/naming-buckets). \n\n```bash\nREGION=<YOUR_REGION>\nBUCKET_NAME=<YOUR_BUCKET_NAME>\ngsutil mb -l $REGION -p $PROJECT_ID gs://$BUCKET_NAME\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare the datasets",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "Before you walk through the example notebooks, make sure that you pre-build all the required [TensorFlow Datasets](https://www.tensorflow.org/datasets) (TFDS) datasets.\n\nFrom the Jupyter lab Terminal:\n\n```bash\nBUCKET_NAME=<YOUR_BUCKET_NAME>\nexport TFDS_DATA_DIR=gs://${BUCKET_NAME}/datasets\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://www.tensorflow.org/datasets/catalog/squad\">squad</a>",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup",
          "Prepare the datasets"
        ],
        "type": "Text_excerpt",
        "value": " \n```\ntfds build --data_dir $TFDS_DATA_DIR --experimental_latest_version squad\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://www.tensorflow.org/datasets/catalog/wmt_t2t_translate\">wmt_t2t_translate</a>",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup",
          "Prepare the datasets"
        ],
        "type": "Text_excerpt",
        "value": "```\ntfds build --data_dir $TFDS_DATA_DIR --experimental_latest_version wmt_t2t_translate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://www.tensorflow.org/datasets/catalog/cnn_dailymail\">cnn_dailymail</a>",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup",
          "Prepare the datasets"
        ],
        "type": "Text_excerpt",
        "value": " \n```\ntfds build --data_dir $TFDS_DATA_DIR --experimental_latest_version cnn_dailymail\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://www.tensorflow.org/datasets/catalog/xsum\">xsum</a>",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup",
          "Prepare the datasets"
        ],
        "type": "Text_excerpt",
        "value": "To build **xsum** you need to download and prepare the source data manually. \n\n1. Follow the [instructions](https://github.com/EdinburghNLP/XSum/blob/master/XSum-Dataset/README.md#running-the-download-and-extraction-scripts) to create the `xsum-extracts-from-downloads` folder with source data. \n2. Create a tar archive from the `xsum-extracts-from-downloads` folder.\n```\ntar -czvf xsum-extracts-from-downloads.tar.gz xsum-extracts-from-downloads/\n```\n3. Copy the archive to the TFDS manual downloads folder.\n```\ngsutil cp -r xsum-extracts-from-downloads.tar.gz ${TFDS_DATA_DIR}/downloads/manual/\n```\n4. Build the dataset\n```\ntfds build --data_dir $TFDS_DATA_DIR --experimental_latest_version xsum\n```\n\nThe environment is ready.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9862097909304535,
      "result": {
        "original_header": "Repository structure",
        "type": "Text_excerpt",
        "value": "\n```\n.\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 examples\n\u251c\u2500\u2500 notebooks\n\u251c\u2500\u2500 tasks \n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 README.md\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8223178736578434,
      "result": {
        "original_header": "Repository structure",
        "type": "Text_excerpt",
        "value": "\n```\n.\n\u251c\u2500\u2500 configs\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 examples\n\u251c\u2500\u2500 notebooks\n\u251c\u2500\u2500 tasks \n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 README.md\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GoogleCloudPlatform/t5x-on-vertex-ai/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "t5x-on-vertex-ai"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "GoogleCloudPlatform"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 349635,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32441,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3612,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://jax.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2203.17189"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Clone the repo, install dependencies, and build the base container image",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "After the Vertex Workbench user-managed notebook Jupyter lab is launched, perform the following steps:\n\n1. On the Launcher page, start a new terminal session by clicking the Terminal icon.\n2. Clone the repository to your notebook instance:\n\n```bash\ngit clone https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai.git\n```\n3. Install code dependencies:\n \n```bash\ncd t5x-on-vertex-ai\npip install -U pip\npip install google-cloud-aiplatform[tensorboard] tfds-nightly t5[gcp]\n```\n\n4. Build the base T5X container image in Container Registry. For `<YOUR_PROJECT_ID>`, use the ID of the Google project that you are working with. \n\n```bash\nexport PROJECT_ID=<YOUR_PROJECT_ID>\ngcloud config set project $PROJECT_ID\n \nIMAGE_NAME=t5x-base\nIMAGE_URI=gcr.io/${PROJECT_ID}/${IMAGE_NAME}\ngcloud builds submit --timeout \"2h\" --tag ${IMAGE_URI} . --machine-type=e2-highcpu-8\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Verify quota to run jobs using Vertex AI TPUs",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "Some notebooks demonstrate scenarios that require as many as 128 TPU cores. \n \nIf you need an increase in Vertex AI TPU quota values, follow these steps:\n\n1. In the Cloud Console, navigate to the **Quotas** tab of the [Vertex AI API page](https://console.cloud.google.com/apis/api/aiplatform.googleapis.com/quotas).\n2. In the **Enter property name or value box** that's next to the **Filter** label, add a filter that has the following conditions:\n* **Quota: Custom model training TPU V2 cores per region** or **Custom model training TPU V3 cores per region** \n* **Dimensions (e.g. location):  Region:** <YOUR_REGION>\n\n**Note**: Vertex AI TPUs are not available in all regions. If the **Limit** value in the listing is 8, TPUs are available, and you can request more by increasing the **Quota** value. If the **Limit** value is 0, no TPUs are available, and the **Quota** value cannot be changed.\n \n3. In the listing, select the quota that matches your filter criteria and then click **Edit Quotas**. \n \n4. In the **New limit** box, enter the required value and then submit the quota change request.\n\nQuota increases don\u2019t directly impact your billing because you are still required to specify the number of TPU cores to submit your T5X tasks. Only the tasks submitted with a high number of TPU cores result in higher billing.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:39:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 50
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions or if you found any problems with this repository, please report through GitHub issues.\n\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Create a Vertex AI Tensorboard instance",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI",
          "Environment setup"
        ],
        "type": "Text_excerpt",
        "value": "In the Jupyter lab Terminal, create the Vertex AI Tensorboard instance:\n \n```bash\nDISPLAY_NAME=<YOUR_INSTANCE_NAME>\ngcloud ai tensorboards create --display-name $DISPLAY_NAME --project $PROJECT_ID --region=$REGION\n```\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI"
        ],
        "type": "Text_excerpt",
        "value": "Start by reading the [Running and monitoring T5X jobs with Vertex AI](https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai/tree/main/docs/run-t5x-jobs.md) guide and walking through the [Getting Started](https://github.com/GoogleCloudPlatform/t5x-on-vertex-ai/blob/master/notebooks/getting-started.ipynb) notebook.\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Developing NLP solutions with T5X and Vertex AI"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions or if you found any problems with this repository, please report through GitHub issues.\n\n"
      },
      "source": "https://raw.githubusercontent.com/GoogleCloudPlatform/t5x-on-vertex-ai/main/README.md",
      "technique": "header_analysis"
    }
  ]
}