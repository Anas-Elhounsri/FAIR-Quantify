{
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Code of Conduct\nThis project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct).\nFor more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact\nopensource-codeofconduct@amazon.com with any additional questions or comments.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aws-samples/aws-research-workshops"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing Guidelines\n\nThank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\ndocumentation, we greatly value feedback and contributions from our community.\n\nPlease read through this document before submitting any issues or pull requests to ensure we have all the necessary\ninformation to effectively respond to your bug report or contribution.\n\n\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check [existing open](https://github.com/aws-samples/aws-research-workshops/issues), or [recently closed](https://github.com/aws-samples/aws-research-workshops/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n\n* A reproducible test case or series of steps\n* The version of our code being used\n* Any modifications you've made relevant to the bug\n* Anything unusual about your environment or deployment\n\n\n## Contributing via Pull Requests\nContributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n\n1. You are working against the latest source on the *master* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n1. Fork the repository.\n2. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\n3. Ensure local tests pass.\n4. Commit to your fork using clear commit messages.\n5. Send us a pull request, answering any default questions in the pull request interface.\n6. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n\nGitHub provides additional document on [forking a repository](https://help.github.com/articles/fork-a-repo/) and\n[creating a pull request](https://help.github.com/articles/creating-a-pull-request/).\n\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/aws-samples/aws-research-workshops/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\nThis project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct).\nFor more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact\nopensource-codeofconduct@amazon.com with any additional questions or comments.\n\n\n## Security issue notifications\nIf you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please do **not** create a public github issue.\n\n\n## Licensing\n\nSee the [LICENSE](https://github.com/aws-samples/aws-research-workshops/blob/master/LICENSE) file for our project's licensing. We will ask you to confirm the licensing of your contribution.\n\nWe may ask you to sign a [Contributor License Agreement (CLA)](http://en.wikipedia.org/wiki/Contributor_License_Agreement) for larger changes.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-24T19:40:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-17T04:44:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repo provides a managed SageMaker jupyter notebook with a number of notebooks for hands on workshops in data lakes, AI/ML, Batch, IoT, and Genomics. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License Summary",
        "type": "Text_excerpt",
        "value": "This sample code is made available under a modified MIT license. See the [LICENSE](LICENSE) file.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9967862025775815,
      "result": {
        "original_header": "AWS Research Workshops",
        "type": "Text_excerpt",
        "value": "This repo provides a managed SageMaker jupyter notebook with a number of notebooks for hands on workshops in data lakes, AI/ML, Batch, IoT, and Genomics. \n \n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.886016595428379,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "To get the AWS Research Workshop Notebook up and running in your own AWS account, follow these steps (if you do not have an AWS account, please see [How do I create and activate a new Amazon Web Services account?](https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/)): \n1. Save the research-env.yml to local file system\n2. Log into the [AWS console](https://console.aws.amazon.com/) if you are not already\n3. Choose **Launch Stack**  to open the AWS CloudFormation console and create a new stack.  \n[![Launch Stack](https://cdn.rawgit.com/buildkite/cloudformation-launch-stack-button-svg/master/launch-stack.svg)](https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/new?stackName=ResearchWorkshopNotebook)\n3. Continue through the CloudFormation wizard steps\n    1. Name your stack, i.e. ResearchWorkshopNotebook\n    2. Select \"Upload a template file\" and use research-env.yml as the template file\n    3. After reviewing, check the blue box for creating IAM resources.\n4. Choose **Create stack**.  This will take ~20 minutes to complete.\n5. The output of the CloudFormation stack creation will provide a Notebook URL (in the *Outputs* section of your stack details \n \n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997799862083164,
      "result": {
        "original_header": "Workshops",
        "type": "Text_excerpt",
        "value": "Title               | Description\n:---: | :---\n[Introduction to AWS Basics](./notebooks/intro_to_aws/)                           | Learn about core AWS services for compute, storage, database and networking. This workshop has a hands-on lab where you will be able to launch an auto-scaled Apache web server behind an ALB, S3 bucket hosting content of the home page, and how to define the approriate roles for each resource.\n[Building Data Lakes](./notebooks/building_data_lakes/) | In this series of hands-on workshops, you will learn how to understand what data you have, how to drive insights, and how to make predictions using purpose-built AWS services. Learn about the common pitfalls of building data lakes, and discover how to successfully drive analytics and insights from your data. Also learn how services such as Amazon S3, AWS Glue, Amazon Athena, and Amazon AI/ML services work together to build a serverless data lake for various roles, including data scientists and business users.\n[Tensorflow with Amazon SageMaker](./notebooks/ml_tensorflow/) | Amazon SageMaker is a fully- managed platform that enables developers and data scientists to quickly and easily build, train, and deploy machine learning models at any scale. Amazon SageMaker removes all the barriers that typically slow down developers who want to use machine learning. We will show you how to train and build a ML model on SageMaker then how to deploy the inference end points on tools like AWS Greengrass or Serverless applications.\n[Cost-effective Research leveraging AWS Spot](./notebooks/spot/) | With Amazon Web Services (AWS), you can spin up EC2 compute capacity on demand with no upfront commitments. You can do this even more cost effectively by using Amazon EC2 Spot Instances to bid on spare Amazon EC2 computing capacity. This allows users to get 90% off on demand prices (often as little as 1c per core hour) and has helped them run very large scale workloads cost effectively. For example, at USC a computational chemist spun up 156,000 core in three days. Also, with the recent release of the Spot fleet API, a researcher or scientist can easily have access to some of the most cost effective compute capacity at a very large scale. Learn how to effectively use these tools for your research needs.\n[AWS Batch on AWS](./notebooks/hpc/) | In this workshop you will setup an AWS Batch environment for processing FastQC files leveraging the 1000 Genome dataset. Get started with AWS Batch by creating a job definition, compute environment, and a job queue for AWS Batch with the python SDK.\n[AWS ParallelCluster on AWS](./notebooks/parallelcluster/) | In this workshop you will setup an AWS ParallelCluster environment with Slurm REST API endpoint. You will be running Priceton's Athena++ MHD simulation on the cluster and visualize the result, all from the Jupyter Notebooks. \n[Introduction to Containers on AWS](./notebooks/container/) | In this workshop, we will introduce containers for researchers. You will learn the basics of containers and how to run your workload with containers on AWS.  \n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aws-samples/aws-research-workshops/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/account-factory/account-factory-setup.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/account-factory/account-factory-setup.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/intro_to_aws/intro_launch_ec2_and_s3.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/intro_to_aws/intro_launch_ec2_and_s3.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/spot/spot-fleet-web-app.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/spot/spot-fleet-web-app.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/ground_truth_cat_dog.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/ground_truth_cat_dog.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/catanddog.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/catanddog.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/using_s3_and_analytics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/using_s3_and_analytics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/ec2_cfn_systems_manager.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/ec2_cfn_systems_manager.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/mxnet_mnist_spot_neo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/escience_series/mxnet_mnist_spot_neo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-right-tool.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-right-tool.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/building_data_lakes.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/building_data_lakes.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/data_lake_sql_server_source.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/data_lake_sql_server_source.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/TaxiEMRNotebook.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/TaxiEMRNotebook.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-orchestration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-orchestration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-streaming.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/ny-taxi-streaming.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/kinesis-swiss-army-knife.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/building_data_lakes/kinesis-swiss-army-knife.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/ml_tensorflow/tensorflow_mnist.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/ml_tensorflow/tensorflow_mnist.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-federation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-federation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-slurmrestclient.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-slurmrestclient.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-athena%2B%2B.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-athena%2B%2B.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-accounting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/pcluster-accounting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/ai_services/nlp_services_overview.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/ai_services/nlp_services_overview.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/genomics_pipeline/cromwell.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/genomics_pipeline/cromwell.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/serverless_apps/aws-sam.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/serverless_apps/aws-sam.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-cicd-singularity.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-cicd-singularity.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-basic.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-basic.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-cicd.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/container/container-cicd.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/iot_greengress/greengrass.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/iot_greengress/greengrass.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/hpc/batch-fastqc.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/hpc/batch-fastqc.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 60
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aws-samples/aws-research-workshops/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aws-samples/aws-research-workshops"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/howto/sagemaker_modulus_kernel/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/howto/sagemaker_modulus_kernel/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/pcluster_post_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/pcluster_post_install_onprem.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/install_athena.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/pcluster_post_install_7g.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/pcluster_post_install_aws.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/pcluster_post_install_fast.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/parallelcluster/scripts/fetch_and_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/iot_greengress/health_tracker/tracker/start_tracker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/iot_greengress/health_tracker/tracker/cp_certs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/notebooks/iot_greengress/health_tracker/tracker/stop_tracker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/howto/sagemaker_modulus_kernel/build-image.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/howto/sagemaker_modulus_kernel/create-and-update-image.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/sagemaker-services.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/create-notebook.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/notebook-settings.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/notebook-git.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cdn.rawgit.com/buildkite/cloudformation-launch-stack-button-svg/master/launch-stack.svg"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/open-jupyter.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/./docs/assets/images/jupyter-homepage.png"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aws-samples/aws-research-workshops/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT No Attribution",
        "spdx_id": "MIT-0",
        "type": "License",
        "url": "https://api.github.com/licenses/mit-0",
        "value": "https://api.github.com/licenses/mit-0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License Summary",
        "type": "Text_excerpt",
        "value": "This sample code is made available under a modified MIT license. See the [LICENSE](LICENSE) file.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aws-research-workshops"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "aws-samples"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 887396,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 134007,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 36884,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 32528,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 30399,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1047,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 755,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "AWS Account",
        "parent_header": [
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "In order to complete these workshops you'll need a valid, usable AWS Account with Admin permissions.  The code and instructions in these workshops assume only one student is using a given AWS account at a time. If you try sharing an account with another student, you'll run into naming conflicts for certain resources. \n\nUse a **personal account** or create a new AWS account to ensure you have the neccessary access. This should not be an AWS account from the company you work for.\n\nIf you are doing this workshop as part of an AWS sponsored event, you will receive credits to cover the costs.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Browser",
        "parent_header": [
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "We recommend you use the latest version of Chrome or Firefox to complete this workshop.\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Text Editor",
        "parent_header": [
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "For any workshop module that requires use of the AWS Command Line Interface (see above), you also will need a **plain text** editor for writing scripts. Any editor that inserts Windows or other special characters potentially will cause scripts to fail.\n\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:25:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 120
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "IAM Role for Notebook Instance",
        "parent_header": [
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "A new IAM Role will be required for the workshops. The Notebook Instance requires `sagemaker.amazonaws.com` and `glue.amazonaws.com` trust permissions and the `AdministratorAccess` policy to access the required services in the workshops. Follow the instruction below to create the role in Python or use the `research-env.yml` file in CloudFormation to launch the notebook. \n\n<details>\n<summary><strong>Python script instructions for creating the IAM Role (expand for details)</strong></summary><p>\n\n``` python\nimport logging\nimport os\nimport time\nimport argparse\nimport botocore.session\nimport botocore.exceptions\n\ndef create_role(iam, policy_name, assume_role_policy_document, inline_policy_name=None, policy_str=None):\n    \"\"\"Creates a new role if there is not already a role by that name\"\"\"\n    if role_exists(iam, policy_name):\n        logging.info('Role \"%s\" already exists. Assuming correct values.', policy_name)\n        return get_role_arn(iam, policy_name)\n    else:\n        response = iam.create_role(RoleName=policy_name,\n                                   AssumeRolePolicyDocument=assume_role_policy_document)\n        \n        if policy_str is not None:\n            iam.put_role_policy(RoleName=policy_name,\n                            PolicyName=inline_policy_name, PolicyDocument=policy_str)\n        logging.info('response for creating role = \"%s\"', response)\n        return response['Role']['Arn']\n\ndef role_exists(iam, role_name):\n    \"\"\"Checks if the role exists already\"\"\"\n    try:\n        iam.get_role(RoleName=role_name)\n    except botocore.exceptions.ClientError:\n        return False\n    return True\n\ndef get_role_arn(iam, role_name):\n    \"\"\"Gets the ARN of role\"\"\"\n    response = iam.get_role(RoleName=role_name)\n    return response['Role']['Arn']\n\niam = boto3.client('iam')\n\nrole_doc = {\n        \"Version\": \"2012-10-17\", \n        \"Statement\": [\n            {\"Sid\": \"\", \n             \"Effect\": \"Allow\", \n             \"Principal\": {\n                 \"Service\": [\n                     \"sagemaker.amazonaws.com\",\n                     \"glue.amazonaws.com\"\n                 ]\n             }, \n             \"Action\": \"sts:AssumeRole\"\n        }]\n    }\n\ninline_policy = {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"*\",\n                    \"*\"\n                ],\n                \"Resource\": [\n                    \"*\"\n                ],\n                \"Effect\": \"Allow\"\n            }\n        ]\n    }\n\nrole_arn = workshop.create_role(iam, firehose_role_name, json.dumps(role_doc), firehose_policy_name, json.dumps(inline_policy))\nprint(role_arn)\n```\n</p></details>\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Launching Research Notebook Instance",
        "type": "Text_excerpt",
        "value": "SageMaker provides hosted Jupyter notebooks that require no setup, so you can begin processing your training data sets immediately. With a few clicks in the SageMaker console, you can create a fully managed notebook instance, pre-loaded with useful libraries for machine learning.\n\n<details>\n<summary><strong>Step-by-step instructions (expand for details)</strong></summary><p>\n\n1. In the upper-right corner of the AWS Management Console, confirm you are in the desired AWS region. Select a Region with SageMaker support.\n\n2. From the Services drop-down menu type `SageMaker` to filter the list of all services.  This will bring you to the Amazon CloudFormation console homepage.\n\n![Service Search](./docs/assets/images/sagemaker-services.png)\n\n3. On the left hand side click **Notebook instances**, and click the **Create notebook instance** button at the top of the browser window.\n\n![Notebook Instances](./docs/assets/images/create-notebook.png)\n\n4. In **Notebook instance settings** type `aws-research-workshops-notebook` into the **Notebook instance name** text box, select `ml.t2.medium` for the **Notebook instance type**, and enter `50` for **Volume Size in GB** leaving the other as defaults.\n\n![Create Notebook Instance](./docs/assets/images/notebook-settings.png)\n\n5. For IAM role, choose **Create a new role**, (steps to come) will require `sagemaker.amazonaws.com` and `glue.amazonaws.com` trust permissions and `AdministratorAccess` policy for access required services.\n\n6. In the Git Repositories section clone this repo to be included in the notebook instance.\n\n![Notebook Git](./docs/assets/images/notebook-git.png)\n\n7. Click **Create notebook instance**.\n\n</p></details>\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Accessing the Notebook Instance",
        "parent_header": [
          "Launching Research Notebook Instance"
        ],
        "type": "Text_excerpt",
        "value": "1. Wait for the server status to change to **InService**. This will take several minutes but likely less.\n\n![Access Notebook](./docs/assets/images/open-jupyter.png)\n\n2. Click **Open**. You will now see the Jupyter homepage for your notebook instance.\n\n![Open Notebook](./docs/assets/images/jupyter-homepage.png)\n"
      },
      "source": "https://raw.githubusercontent.com/aws-samples/aws-research-workshops/mainline/README.md",
      "technique": "header_analysis"
    }
  ]
}