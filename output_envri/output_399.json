{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AJueling/python_climate_physics"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-13T12:31:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-12T12:10:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "introductory workshop series on python for Climate Physics master at the Institute for Marine and Atmospheric research Utrecht (IMAU), Utrecht University"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9909537686393017,
      "result": {
        "original_header": "Python for Climate Physics  <a href=\"https://mybinder.org/v2/gh/AJueling/python_climate_physics.git/master?urlpath=lab\"><img alt=\"Binder\" src=\"https://mybinder.org/badge_logo.svg\" /></a>",
        "type": "Text_excerpt",
        "value": "This is a collection of jypyter notebooks for an introductory workshop series on python for the Climate Physics master programme at the Institute for Marine and Atmospheric research Utrecht (IMAU), Utrecht University, held in September/October 2020. \n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9794991075011243,
      "result": {
        "original_header": "Purpose",
        "type": "Text_excerpt",
        "value": "We noticed in the last years that the programming background of everyone varies with some having zero experience and others having quite a lot already.\nIn addition, there are common specificities in working with (geo-) scientific data which you could all discover by yourselves, but why reinvent the wheel!?\n \n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686429850432805,
      "result": {
        "original_header": "Workshop structure",
        "type": "Text_excerpt",
        "value": "There are four workshops.\nThe first two cover the basics of programming in python and if you feel comfortable with simple programming and plotting you will probably know this already and won\u2019t want to attend.\nThe second two workshops focus on packages specific to our field and best practices for computational research projects.\nI would thus recommend that all of you at least look at the contents of the last two workshops.\nBelow there is a list of resources that are worth checking out. \nThe workshops are held online in MS Teams.\nYou can join the team `Python for Climate Physics` with the code I shared by email.\nI will shortly introduce the content lecture-style, but most of the time is reserved for exercises and questions that may arise.\nThis is the first time I teach online, so things may change and even more than in normal times, I would like your feedback!\nI will make the workshop materials available in advance, also so that you can decide whether there is anything new to you.\nI will sent one more email before the first workshop, the rest of the communication will be via Teams. \n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9872596020061998,
      "result": {
        "original_header": "Resources",
        "type": "Text_excerpt",
        "value": "* [Earth and Environmental Data Science](https://earth-env-data-science.github.io/intro) full semester course by Ryan Abernathey at Columbia University from which much content is copied\n* [IMAU's Python for Lunch workshop series](https://github.com/UU-IMAU/Python-for-lunch-Notebooks) a collection of workshop materials on topics of interest from IMAU students and researchers\n \n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AJueling/python_climate_physics/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2a_numpy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2a_numpy.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/4a_cartopy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/4a_cartopy.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3c_xarray.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3c_xarray.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/4b_best_practices.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/4b_best_practices.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1c_Functions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1c_Functions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2c_advanced_Matplotlib.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2c_advanced_Matplotlib.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3b_netcdf_xarray.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3b_netcdf_xarray.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2d_SciPy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2d_SciPy.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1b_Fundamentals.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1b_Fundamentals.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1a_Introduction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/1a_Introduction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2b_matplotlib.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/2b_matplotlib.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3a_pandas.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/3a_pandas.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://mybinder.org/v2/gh/AJueling/python_climate_physics.git/master?urlpath=lab"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AJueling/python_climate_physics/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AJueling/python_climate_physics"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python for Climate Physics  "
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://docs.anaconda.com/anaconda/navigator/"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python/Jupyter installation instructions:",
        "parent_header": [
          "Python for Climate Physics  <a href=\"https://mybinder.org/v2/gh/AJueling/python_climate_physics.git/master?urlpath=lab\"><img alt=\"Binder\" src=\"https://mybinder.org/badge_logo.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "For coherence, I strongly recommend we all use a Python installation with the conda package manager.\nYou have two (equally valid) options:\n1. Anaconda: https://docs.anaconda.com/anaconda/install/ or \n2. Miniconda:  https://docs.conda.io/en/latest/miniconda.html\n(NB: If you are on Linux or MacOS, you have a system python, but it is a good idea to install a separate Python version. Changing/adding to the system Python can lead to silly errors that are annoying to fix.)\n\nThe difference between the conda distributions is that Anaconda includes many packages (including some you will never use) and consequently uses up quite some disk space. It features a graphical user interface (the ![Anaconda Navigator](https://docs.anaconda.com/anaconda/navigator/)). Miniconda, on the other hand, only includes the bare necessities and packages need to installed as they are needed, thus using a lot less disk space. \n\nOnce you have installed one of the two condas, there are two ways to work with jupyter notebooks:\n1. jupyter notebook app: the basic, but sufficient option\n2. jupyter lab app: the more advanced option\n\nWith Anaconda you can choose either app from the Navigator.\n\nWith Miniconda you need to install jupyter first.\nYou can do this by running `conda install jupyter jupyterlab` and subsequently confirming.\nThen you can type in the terminal `jupyter notebook` or `jupyter lab` to start either of the two apps.\nAlso see the documentation that is linked in the paragraph above.\n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Managing packages",
        "parent_header": [
          "Python for Climate Physics  <a href=\"https://mybinder.org/v2/gh/AJueling/python_climate_physics.git/master?urlpath=lab\"><img alt=\"Binder\" src=\"https://mybinder.org/badge_logo.svg\" /></a>",
          "Python/Jupyter installation instructions:"
        ],
        "type": "Text_excerpt",
        "value": "The strength of Python is its extensive ecosystem of packages. There are pre-installed system libraries, but most packages need to be installed explicitely by you. Common packages we use include `numpy` (for array calculations) and `matplotlib` (for plotting). There are (again) several ways you can install packages:\n1. in the terminal type `conda install {package}`, you can install several at the same time `conda install {package1} {package2} {package3}`\n2. if you have Anaconda, you can use the Anaconda Navigator to search for and install packages\n\nYou can list all the packages in the current environment by typing `conda list`.\n\nSometimes conda does not \"know\" a package. Often these packages can be installed using an alternative channel (list of packages). Many smaller scientific packages are on the conda-forge channel and you can install them with `conda install -c conda-forge {special_package}`\n\n---"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999918141628207,
      "result": {
        "original_header": "Workshop structure",
        "type": "Text_excerpt",
        "value": "I will use jupyter notebooks for teaching because they can combine high quality documentation, code and output. For you to participate in the workshops you need to have a way to execute them. Please install Anaconda/Miniconda before the first workshop (see instruction below)! \n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AJueling/python_climate_physics/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, Andr\u00e9 J\u00fcling\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "python_climate_physics"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "AJueling"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4789345,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AJueling/python_climate_physics/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:39:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}