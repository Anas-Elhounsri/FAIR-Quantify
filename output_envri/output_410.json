{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Shivani-781/Ganga-Water-Quality-Assessment"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-03T12:42:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T08:31:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The project is based on my work as a Research Intern under the supervision of Dr. Manish Kumar, Associate Professor at IIIT, Allahabad."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9727968005020999,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "This project is based on my work as a Research Intern under the supervision of <b>Dr. Manish Kumar</b>, Associate Professor at IIIT, Allahabad. \nIn this work, we will study the water samples from <b>the holy river of Ganga</b> which flows in the city of <b>Prayagraj</b>, situated at the confluence of the Rivers Ganga, Yamuna and Saraswati. The determination of water quality has been an important environmental problem. This study proposes an idea to develop a <b>machine learning model</b> which can accurately assess the quality of river water using <b>data mining techniques</b>. \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728524593413701,
      "result": {
        "original_header": "Data About Data",
        "type": "Text_excerpt",
        "value": "The parameters of the time-series dataset collected from the river Ganga using daily measure of sensors include: <b>Electrical Conductivity, Dissolved Oxygen (DO), Oxidation Reduction Potential (ORP), pH and Temperature of water</b>. \nLet's learn more about each of these physicochemical parameters:\n<ul>\n  <li>The <b>conductivity</b> of water is measured by its capability to pass electrical flow. Conductivity is quite an essential parameter to assess water quality as it is dependent on the concentration of conductive ions in the water.</li>\n  <li>The amount of <b>oxygen dissolved</b> in the water can tell a lot about its quality. As the dissolved oxygen (DO) increases, the temperature of water decreases. It is usually measured in both milligrams per litre and percentage saturation.</li>\n  <li>Another quality parameter is <b>Oxidation Reduction Potential</b>, which is also known as <b>REDOX</b>. It is a measurement that reflects the ability of a molecule to oxidise or reduce another molecule.</li>\n  <li>The relative amount of free hydrogen and hydroxyl ions determines the <b>pH of water</b>. In other words, it is a measure of how acidic or basic is the given water sample. pH ranges from 0-14, with 7 being neutral.</li>\n  <li><b>Temperature</b> is yet another important factor to consider when assessing water quality. Temperature can alter the physical and chemical properties of water.</li>\n</ul>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9435348766927555,
      "result": {
        "original_header": "DATA PRE-PROCESSING: (Transformation, Cleaning, Extraction, Normalization)",
        "type": "Text_excerpt",
        "value": "The <b>transformations</b> performed on the data using NumPy and Pandas libraries include:\n<ul>\n  <li>Changing the data types of Date and Time attributes</li>\n  <li>Dropping unnecessary attributes</li>\n  <li>Sorting the time-series data based on the Date attribute</li>\n  <li>Transforming the resulting data using pivot tables so that each sensor becomes an attribute</li>\n</ul>   \nThe sensing data collected includes data of Ganga as well as Sangam river. Based on the sensing details, the details of Ganga river have been extracted and the negative values are replaced by NaN values, to handle the <b>missing data</b>. The missing data in each attribute is then replaced by the mean of the last five values of the particular attribute using the <b>forward fill</b> technique. \nThe details of Ganga river have been extracted into <b>samples</b> for further processing. Negative values are dropped using the python libraries. As per the report on sensing details, the data is extracted into 21 buckets using the Pandas library. \nIn order to understand the underlying behaviour of our attributes, we need to apply the <b>Gaussian distribution formula</b> to check whether the data is normally distributed. On plotting the probability distribution if a <b>bell-shaped curve</b> is formed and the mean, mode, and median are equal then the variable is normally distributed. Normal distribution is dependent on two parameters which are mean and the standard deviation. If the data exhibits normal distribution, it is feasible to be forecasted with higher accuracy. We find that the collected data for oxidation-reduction potential of Ganga river water does not follow normal distribution as its mean is greater than 1. \nWe apply the <b>Central Limit Theorem</b>, which states that as the sample size is increased, the sampling distribution of the mean reaches a normal distribution. The random samples from the extracted data, each of sample size greater than equal to 30, are then checked for normal distribution using the Gaussian distribution formula. We find that the bell-shaped curve for oxidation-reduction potential data has a high mean while others have mean less than 1. \nWe normalize the data as variables that are measured at different scales do not contribute equally to the model fitting. Thus, to deal with this potential problem feature-wise normalization is usually used before model fitting. So, the data is normalized using <b>MinMaxScaler()</b> from scikit-learn library.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9745400345968807,
      "result": {
        "original_header": "DATA CLUSTERING: (K-Means Clustering)",
        "type": "Text_excerpt",
        "value": "Before fitting the model, we need to classify the data using <b>K-Means Clustering</b>, which is an extensively used technique for data clustering. \nThe K-means algorithm begins with a first group of randomly selected centroids. This cluster is used as the beginning points for every cluster. Then iterative calculations are done to optimize the positions of the centroids. It stops when there is no change in the values of centroids.  \nThe <b>elbow method</b> computes an average score for all clusters. It runs k-means clustering for a range of values for k (say from 1-10). \nFrom the plot for conductivity and dissolved oxygen attributes, we see a few points of one cluster overlaps with the points of another cluster. To get better results, we apply <b>SVM Kernel Tric</b>k to classify & model the data and visualize them by plotting their <b>Receiver Operating Characteristic (ROC) Curves</b>.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9662911413275683,
      "result": {
        "original_header": "DATA MODELLING: (Dempster Shafer Theory)",
        "type": "Text_excerpt",
        "value": "The data is modelled using the <b>Dempster Shafer Theory</b> with the help of machine learning models like <b>SVM, Logistic Regression, Na\u00efve Bayes and Decision Tree</b>. \nNow, let's have a look on all of these models. \n<b>Support Vector Machine (SVM)</b> is a supervised machine learning algorithm which can be used for both classification and regression problems. A line or a hyperplane in a high or infinite dimensional space is constructed. A <b>Kernel Trick</b> is a simple method where a non-linear data is projected onto a higher dimension space so as to make it easier to classify the data where it could be linearly divided by a plane. \n<b>Logistic regression</b> is a supervised learning classification algorithm used to predict the probability of a target variable. Based on the number of categories, it can be classified as: Binomial, Multinomial and Ordinal. Logistic regression is a powerful algorithm that utilizes a sigmoid function or a logistic function. \n<b>Naive Bayes Classifier</b> is a supervised machine learning algorithm that uses the Bayes\u2019 Theorem, which relies on the naive assumption that input variables are independent of each other. <b>Gaussian Naive Bayes</b> supports continuous data. When working with continuous data, an assumption often taken is that the continuous values associated with each class are distributed according to a normal (or Gaussian) distribution. \n<b>Decision tree</b> is a type of supervised learning algorithm that is mostly used in classification problems. A decision tree makes decisions by splitting nodes into sub-nodes. This process is performed multiple times during the training process until only homogenous nodes are left. \nThe <b>Dempster Shafer Theory</b>, also known as the theory of <b>belief functions</b>, was designed to mathematically model and validate the uncertainty involved in statistical inferences. It combines a set of representations and model data when there is a lack of information. \nDST is mostly known to represent <b>uncertainties or imprecision in a hypothesis</b>. The hypotheses characterize all the possible states of the system. These hypotheses are assigned a <b>probability mass assignment (PMA)</b> which when combined leads to a decision. \nThe process of forming mass assignment function and combining the same is thus crucial for <b>accurate prediction</b>. The high-level features are converted into Dempster-Shafer mass functions by aggregating them using Dempster\u2019s rule of combination.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9397420908512069,
      "result": {
        "original_header": "Conclusion",
        "type": "Text_excerpt",
        "value": "In future, we can use extended dataset and some other machine learning technique to assess the quality of water. \nAlso, with <b>extended dataset</b>, we would be able to extract the pattern of the river water at a particular interval of time over a year by using predictive analysis. The forecasting of river flow has great importance in water resources.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Shivani-781/Ganga-Water-Quality-Assessment/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/4_Data_Selection.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/4_Data_Selection.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/9_Data_Clustering.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/9_Data_Clustering.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/2_Data_Extraction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/2_Data_Extraction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/5_Data_Extraction_for_Resampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/5_Data_Extraction_for_Resampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/6_Data_Sample_Extraction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/6_Data_Sample_Extraction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/8_Data_Normalization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/8_Data_Normalization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/11_Dempster_Shafer_Theory_%28Part_1%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/11_Dempster_Shafer_Theory_%28Part_1%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/1_Data_Transformation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/1_Data_Transformation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/7_Data_Random_Sampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/7_Data_Random_Sampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/12_Data_Modelling_%28DST%29_%28Part_2%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/12_Data_Modelling_%28DST%29_%28Part_2%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/10_Data_Modelling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/10_Data_Modelling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/3_Data_Cleaning.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/3_Data_Cleaning.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Problem Statement",
        "parent_header": [
          "Ganga-Water-Quality-Assessment-Using-Dempster-Shafer-Theory"
        ],
        "type": "Text_excerpt",
        "value": "Complete survey surmised that the water quality is measured from spatial-temporal changes of water quality, statistical analysis of quality parameter and satellite data of the Ganga River basin.\n\nAlso, the traditional water quality monitoring approaches give precise measurements, but their costs are expensive and they are time-consuming. Moreover, these methods did not complete regional needs. Also, it requires large travelling and laboratory expenses, especially for a large area.\n\nSo, it is very challenging to <b>analyse water quality in real-time</b>. For solving these problems, we are trying to make a water quality assessment model based on the intrinsic nature of the collected <b>IoT data</b>.\n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Shivani-781/Ganga-Water-Quality-Assessment/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Shivani-781/Ganga-Water-Quality-Assessment"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ganga-Water-Quality-Assessment-Using-Dempster-Shafer-Theory"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Shivani-781/Ganga-Water-Quality-Assessment/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ganga-Water-Quality-Assessment"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Shivani-781"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1750210,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Shivani-781/Ganga-Water-Quality-Assessment/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:42:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}