{
  "application_domain": [
    {
      "confidence": 63.72,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Savinov, Nikolay and Raichuk, Anton and Marinier, Rapha{\\\"e}l and Vincent, Damien and Pollefeys, Marc and Lillicrap, Timothy and Gelly, Sylvain",
        "format": "bibtex",
        "title": "Episodic Curiosity through Reachability",
        "type": "Text_excerpt",
        "value": "@inproceedings{Savinov2019_EC,\n    year = {2019},\n    booktitle = {International Conference on Learning Representations ({ICLR})},\n    title = {Episodic Curiosity through Reachability},\n    author = {Savinov, Nikolay and Raichuk, Anton and Marinier, Rapha{\\\"e}l and Vincent, Damien and Pollefeys, Marc and Lillicrap, Timothy and Gelly, Sylvain},\n}"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/episodic-curiosity"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nYou are welcome to contribute patches to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google.com/conduct/).\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-21T18:45:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T12:46:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tensorflow/Keras code and trained models for Episodic Curiosity Through Reachability"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9736644431949346,
      "result": {
        "original_header": "In ICLR 2019 [<a href=\"https://sites.google.com/corp/view/episodic-curiosity\">Project Website</a>][<a href=\"https://arxiv.org/abs/1810.02274\">Paper</a>]",
        "type": "Text_excerpt",
        "value": "Navigation out of curiosity                         | Locomotion out of curiosity\n--------------------------------------------------- | ---------------------------\n<img src=\"misc/navigation_github.gif\" height=\"150\"> | <img src=\"misc/ant_github.gif\" height=\"150\"> \nThis is an implementation of our\n[ICLR 2019 Episodic Curiosity Through Reachability](https://arxiv.org/abs/1810.02274).\nIf you use this work, please cite: \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9557109429979037,
      "result": {
        "original_header": "Trained models",
        "type": "Text_excerpt",
        "value": "Trained R-networks and policies can be found in the\n`episodic-curiosity` Google cloud bucket. You can access them via the\n[web interface](https://console.cloud.google.com/storage/browser/episodic-curiosity),\nor copy them with the `gsutil` command from the\n[Google Cloud SDK](https://cloud.google.com/sdk):\n```shell\ngsutil -m cp -r gs://episodic-curiosity/r_networks .\ngsutil -m cp -r gs://episodic-curiosity/policies .\n```\nExample of command to visualize a trained policy with two episodes of\n1000 steps, and create videos similar to the ones at the top of this\npage:\n``` shell\npython -m episodic_curiosity.visualize_curiosity_reward --workdir=/tmp/ec_visualizations --r_net_weights=<path_to_r_network> --policy_path=<path_to_trained_policy> --alsologtostderr --num_episodes=2 --num_steps=1000 --visualization_type=surrogate_reward --trajectory_mode=do_nothing\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9142374151534508,
      "result": {
        "original_header": "On a single machine",
        "type": "Text_excerpt",
        "value": "[scripts/launcher_script.py](https://github.com/google-research/episodic-curiosity/blob/master/scripts/launcher_script.py)\nis the main entry point to reproduce the results of Table 1 in the\n[paper](https://arxiv.org/abs/1810.02274). For instance, the following command\nline launches training of the *PPO + EC* method on the *Sparse+Doors* scenario: \n| Flag | Descriptions |\n| :----------- | :--------- |\n| --method | Solving method to use, corresponds to the rows in table 1 of the [paper](https://arxiv.org/abs/1810.02274). Possible values: `ppo, ppo_plus_ec, ppo_plus_eco, ppo_plus_grid_oracle` |\n| --scenario | Scenario to launch. Corresponds to the columns in table 1 of the [paper](https://arxiv.org/abs/1810.02274). Possible values: `noreward, norewardnofire, sparse, verysparse, sparseplusdoors, dense1, dense2`. `ant_no_reward` is also supported which corresponds to the first row of table S1. |\n| --workdir | Directory where logs and checkpoints will be stored.  |\n| --run_number | Run number of the current run. This is used to create an appropriate subdir in workdir.  |\n| --r_networks_path | Only meaningful for the `ppo_plus_ec` method. Path to the root dir for pre-trained r networks.  If specified, we train the policy using those pre-trained r networks. If not specified, we first generate the R network training data, train the R network and then train the policy. | \nUnder the hood,\n[launcher_script.py](https://github.com/google-research/episodic-curiosity/blob/master/scripts/launcher_script.py)\nlaunches\n[train_policy.py](https://github.com/google-research/episodic-curiosity/blob/master/episodic_curiosity/train_policy.py)\nwith the right hyperparameters. For the method `ppo_plus_ec`, it first launches\n[generate_r_training_data.py](https://github.com/google-research/episodic-curiosity/blob/master/episodic_curiosity/generate_r_training_data.py)\nto accumulate training data for the R-network using a random policy, then\nlaunches\n[train_r.py](https://github.com/google-research/episodic-curiosity/blob/master/episodic_curiosity/train_r.py)\nto train the R-network, and finally\n[train_policy.py](https://github.com/google-research/episodic-curiosity/blob/master/episodic_curiosity/train_policy.py)\nfor the policy. In the method `ppo_plus_eco`, all this happens online as part of\nthe policy training.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9296903337276138,
      "result": {
        "original_header": "On Google Cloud",
        "type": "Text_excerpt",
        "value": "[scripts/launch_cloud_vms.py](https://github.com/google-research/episodic-curiosity/blob/master/scripts/launch_cloud_vms.py)\nis the main entry point. Edit the script and replace the `FILL-ME`s with the\ndetails of your GCP project. In particular, you will need to point it to a GCP\ndisk snapshot with the installed dependencies as described in the\n[Installation](#Installation) section. \nIMPORTANT: By default the script reproduces all results in table 1 and launches\n~300 VMs on cloud with GPUs (7 scenarios x 4 methods x 10 runs). The cost of\nrunning all those VMs is very significant: on the order of USD 30 **per day**\n**per VM** based on early 2019 GCP pricing. Pass\n`--i_understand_launching_vms_is_expensive` to\n[scripts/launch_cloud_vms.py](https://github.com/google-research/episodic-curiosity/blob/master/scripts/launch_cloud_vms.py)\nto indicate that you understood that. \nUnder the hood, `launch_cloud_vms.py` launches one VM for each (scenario,\nmethod, run_number) tuple. The VMs use startup scripts to launch training, and\nretrieve the parameters of the run through\n[Instance Metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata). \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9329010818615933,
      "result": {
        "original_header": "Training logs",
        "type": "Text_excerpt",
        "value": "Each training job stores logs and checkpoints in a workdir. The workdir is\norganized as follows: \n| File or Directory                          | Description                     |\n| :----------------------------------------- | :------------------------------ |\n| `r_training_data/{R_TRAINING,VALIDATION}/` | TF Records with data generated from a random policy for R-network training. Only for method `ppo_plus_ec` without supplying pre-trained R-networks. |\n| `r_networks/`                              | Keras checkpoints of trained R-networks. Only for method `ppo_plus_ec` without supplying pre-trained R-networks. |\n| `reward_{train,valid,test}.csv`            | CSV files with {train,valid,test} rewards, tracking the performance of the policy at multiple training steps. |\n| `checkpoints/`                             | Checkpoints of the policy.      |\n| `log.txt`, `progress.csv`                  | Training logs and CSV from OpenAI's PPO2 code. | \nOn cloud, the workdir of each job will be synced to a cloud bucket directory of\nthe form `<cloud_bucket_root>/<vm_id>/<method>/<scenario>/run_number_<d>/`. \nWe provide a\n[colab](https://github.com/google-research/episodic-curiosity/blob/master/colab/plot_training_graphs.ipynb)\nto plot graphs during training of the policies, using data from the\n`reward_{train,valid,test}.csv` files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9702371317288286,
      "result": {
        "original_header": "Related projects",
        "type": "Text_excerpt",
        "value": "Check out the code for [Semi-parametric Topological Memory](\nhttps://github.com/nsavinov/SPTM), which uses graph-based episodic memory\nconstructed from a short video to navigate in novel environments (thus providing\nexploitation policy, complementary to the exploration policy in this work).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9892543915303046,
      "result": {
        "original_header": "Known limitations",
        "type": "Text_excerpt",
        "value": "-   As of 2019/02/20, `ppo_plus_eco` method is not robust to restarts, because\n    the R-network trained online is not checkpointed. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/episodic-curiosity/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/colab/plot_training_graphs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/colab/plot_training_graphs.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/episodic-curiosity/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "google-research/episodic-curiosity"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/scripts/vm_start.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/scripts/vm_drop_root.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/misc/navigation_github.gif"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/misc/ant_github.gif"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Episodic Curiosity Through Reachability"
        ],
        "type": "Text_excerpt",
        "value": "Clone this repository:\n\n```shell\ngit clone https://github.com/google-research/episodic-curiosity.git\ncd episodic-curiosity\n```\n\nWe require a modified version of\n[DeepMind lab](https://github.com/deepmind/lab):\n\nClone DeepMind Lab:\n\n```shell\ngit clone https://github.com/deepmind/lab\ncd lab\n```\n\nApply our patch to DeepMind Lab:\n\n```shell\ngit checkout 7b851dcbf6171fa184bf8a25bf2c87fe6d3f5380\ngit checkout -b modified_dmlab\ngit apply ../third_party/dmlab/dmlab_min_goal_distance.patch\n```\n\nInstall DMLab as a PIP module by following\n[these instructions](https://github.com/deepmind/lab/tree/master/python/pip_package)\n\nIn a nutshell, once you've installed DMLab dependencies, you need to run:\n\n```shell\nbazel build -c opt python/pip_package:build_pip_package\n./bazel-bin/python/pip_package/build_pip_package /tmp/dmlab_pkg\npip install /tmp/dmlab_pkg/DeepMind_Lab-1.0-py2-none-any.whl --force-reinstall\n```\n\nIf you wish to run Mujoco experiments (section S1 of the paper), you need to\ninstall dm_control and its dependencies. See [this\ndocumentation](https://github.com/deepmind/dm_control#requirements-and-installation),\nand replace `pip install -e .` by `pip install -e .[mujoco]` in the command\nbelow.\n\nFinally, install episodic curiosity and its pip dependencies:\n\n```shell\ncd episodic-curiosity\npip install -e .\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999460829102,
      "result": {
        "original_header": "Trained models",
        "type": "Text_excerpt",
        "value": "This requires that you install extra dependencies for generating\nvideos, with `pip install -e .[video]` \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9316203352972832,
      "result": {
        "original_header": "On a single machine",
        "type": "Text_excerpt",
        "value": "```sh\npython episodic-curiosity/scripts/launcher_script.py --workdir=/tmp/ec_workdir --method=ppo_plus_ec --scenario=sparseplusdoors\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9753268614790183,
      "result": {
        "original_header": "On Google Cloud",
        "type": "Text_excerpt",
        "value": "First, make sure you have the [Google Cloud SDK](https://cloud.google.com/sdk)\ninstalled. \nTIP: Use `sudo journalctl -u google-startup-scripts.service` to see the logs of\nthe startup script.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8770977263128018,
      "result": {
        "original_header": "On a single machine",
        "type": "Text_excerpt",
        "value": "```sh\npython episodic-curiosity/scripts/launcher_script.py --workdir=/tmp/ec_workdir --method=ppo_plus_ec --scenario=sparseplusdoors\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8558478703857539,
      "result": {
        "original_header": "Training logs",
        "type": "Text_excerpt",
        "value": "| File or Directory                          | Description                     |\n| :----------------------------------------- | :------------------------------ |\n| `r_training_data/{R_TRAINING,VALIDATION}/` | TF Records with data generated from a random policy for R-network training. Only for method `ppo_plus_ec` without supplying pre-trained R-networks. |\n| `r_networks/`                              | Keras checkpoints of trained R-networks. Only for method `ppo_plus_ec` without supplying pre-trained R-networks. |\n| `reward_{train,valid,test}.csv`            | CSV files with {train,valid,test} rewards, tracking the performance of the policy at multiple training steps. |\n| `checkpoints/`                             | Checkpoints of the policy.      |\n| `log.txt`, `progress.csv`                  | Training logs and CSV from OpenAI's PPO2 code. | \nWe provide a\n[colab](https://github.com/google-research/episodic-curiosity/blob/master/colab/plot_training_graphs.ipynb)\nto plot graphs during training of the policies, using data from the\n`reward_{train,valid,test}.csv` files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/episodic-curiosity/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "episodic-curiosity"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "google-research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 686698,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 209431,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3878,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1810.02274"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Episodic Curiosity Through Reachability"
        ],
        "type": "Text_excerpt",
        "value": "The code was tested on Linux only. The code assumes that the command \"python\"\ninvokes python 2.7. We recommend you use virtualenv:\n\n```shell\nsudo apt-get install python-pip\npip install virtualenv\npython -m virtualenv episodic_curiosity_env\nsource episodic_curiosity_env/bin/activate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Resource requirements for training",
        "parent_header": [
          "Episodic Curiosity Through Reachability"
        ],
        "type": "Text_excerpt",
        "value": "| Environment | Training method | Required GPU         | Recommended RAM            |\n| ----------- | ---------- | -------------------- | -------------------------- |\n| DMLab       | PPO        | No                   | 32GBs                      |\n| DMLab       | PPO + Grid Oracle | No                   | 32GBs                      |\n| DMLab       | PPO + EC using already trained R-networks   | No                   | 32GBs                      |\n| DMLab       | PPO + EC with R-network training   | Yes, otherwise, training is slower by >20x.<br>Required GPU RAM: 5GBs      | 50GBs<br>Tip: reduce  `dataset_buffer_size` for  using less RAM at the expense of policy performance.   |\n| DMLab       | PPO + ECO  | Yes, otherwise, raining is slower by >20x.<br>Required GPU RAM: 5GBs     | 80GBs<br>Tip: reduce `observation_history_size` for using less RAM, at the expense of policy performance      |\n| Mujoco       | PPO + EC using already trained R-networks   | No                   | 32GBs                      |\n\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/episodic-curiosity/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:10:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 196
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}