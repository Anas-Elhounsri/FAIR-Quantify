{
  "application_domain": [
    {
      "confidence": 40.75,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-18T21:46:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-23T13:45:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This research constitutes an attempt to assess the dry spell patterns in the northern region of Ghana, near Burkina Faso. We aim to develop a model which by exploiting satellite products overcomes the poor temporal and spatial coverage of existing ground precipitation measurements. For this purpose 14 meteorological stations featuring different temporal coverage are used together with satellite-based precipitation products. Conventional machine-learning and deep-learning algorithms were compared in an attempt to establish a link between satellite products and field rainfall data for dry spell assessment."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9958875626871716,
      "result": {
        "original_header": "Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences",
        "type": "Text_excerpt",
        "value": "Large parts of the world rely on rainfed agriculture for their food security. In Africa, 90% of the agricultural yields rely only on precipitation for irrigation purposes and approximately 80% of the population\u2019s livelihood is highly dependent on its food production. Parts of Ghana are prone to droughts and flood events due to increasing variability of precipitation phenomena. Crop growth is sensitive to the wet- and dry spell phenomena during the rainy season. To support rural communities and small farmer in their efforts to adapt to climate change and natural variability, it is crucial to have good predictions of rainfall and related dry/wet spell indices.  \nThis research constitutes an attempt to assess the dry spell patterns in the northern region of Ghana, near Burkina Faso. We aim to develop a model which by exploiting satellite products overcomes the poor temporal and spatial coverage of existing ground precipitation measurements. For this purpose 14 meteorological stations featuring different temporal coverage are used together with satellite-based precipitation products. Conventional machine-learning and deep-learning algorithms were compared in an attempt to establish a link between satellite products and field rainfall data for dry spell assessment.  \nThe deep-learning architecture used should be able to efficiently manipulate spatial data. Hence, Convolutional Neural Networks were used in order to detect spatial patterns in the satellite data. Using these models we will attempt to exploit the long temporal coverage of the satellite products in order to overcome the poor temporal and spatial coverage of existing ground precipitation measurements. Doing that, our final objective is to enhance our knowledge about the dry spell characteristics and, thus, provide more reliable climatic information to the farmers in the area of Northern Ghana. Defining the optimal ANN architecture for each application depends on several factors. In our case, we are looking for an ANN architecture that would actually use as input the satellite-based images of precipitation at a fixed extent around any gauge (e.g. 32x32 pixels), while the labels will be the ground observations, constituting a typical supervised-learning modeling case. This process can be efficiently handled by a CNN. The input satellite precipitation images are passed through the feature extraction part and, then, the classifier of the CNN and the output is mapped in [0, 1]. For a more detailed analysis of the technical characteristics of the proposed CNN (convolutional layers, pooling layers, activation functions, padding etc.) refer to the code.  \nThe years where the satellite-based data and the point measurements overlap will be used to train and test the model. The number of input nodes depends on the amount of spatial and temporal information we choose to use. The output node will feature a cost function related to the discrepancy between the modeled output of a sigmoid function and observed wet/dry day label. Based on that, the Stochastic Gradient Descent (SGD) will optimize the values of all the trainable parameters of the ANN. The CNN architecture is chosen to perform this task because of its efficiency in dealing with gridded data and detecting spatial patterns. There are many features that give an advantage to CNNs when handling spatial data (e.g. in image multi-class classification tasks) compared to conventional ANN architectures. One of them is parameter (or weight) sharing. Parameter sharing introduces local connectivity in the convolutional layers of the feature extraction part of the CNN, resulting to each neuron being connected only to a subset of the input image. Thus, the total number of trainable parameters is drastically reduced, minimizing the computational expense and the complexity of the network. Apart from this, with parameter sharing the convolutional layer gains the ability to detect similar spatial patterns in different locations within the input image. Another concept of CNN that makes it suitable for this particular problem is spatial inductive bias. When referred to inductive bias of an ANN in computer vision, we refer to an ensemble of assumptions that assist the model to generate unknown output. In the case of gridded data handled by a CNN, spatial inductive bias assumes a certain spatial structure of the data. Two similar but not identical concepts of CNNs are also relevant to our classification task: transitional invariance and transitional equivariance. Translational invariance expresses the ability of the CNN to generate robust output even when the initial input is translated. Translational equivariance expresses the ability of a CNN to detect the location of the spatial pattern of interest in the image without it being in a certain pre-known position.  \nEven though the aforementioned concepts give a clear advantage to CNNs when dealing with spatial data, the potential of a conventional FNN is also being examined. The number and type of hidden layers, as well as the overall architecture of the FNN, is defined after trial-and-error processes and is a subject closely related to the spatiotemporal characteristics of the data used. Overall, the process scheme of all the modeling strategies used in this research are:  \n1. Four benchmark ML classifiers (Logistic Regression, Random Forest, Gaussian Na\u00efve Bayes and Support Vector Machine) and one benchmark FNN; \n2. The main CNN classifier; \n3. An alternative of the CNN classifier which also incorporates the stations latitude as an input variable; \n4. Different modeling approaches attempting to confront class imbalance; \n5. Several \u201csophisticated\u201d ensembles of models built in an attempt to combine the information of different satellite precipitation products, featuring majority vote models, models that stack different satellite data in parallel input channels and multi-resolution models; \n6. Three state-of-art classifiers used for multi-class classification fine-tuned and tested for this binary classification task.  \n"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Timing-Latitude.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Timing-Latitude.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Classifier%2Bregressor.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Classifier%2Bregressor.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/classifier_%28wet_season%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/classifier_%28wet_season%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/TAMSAT_CNN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/TAMSAT_CNN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Averages_Fractions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Averages_Fractions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/PredictionIntervals.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/PredictionIntervals.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Multi-linear%20Regression.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Multi-linear%20Regression.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Spatial%20analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Spatial%20analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/WiderArea.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/WiderArea.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Rainfall_occurence.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Rainfall_occurence.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/32x32_%28wet_season%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/32x32_%28wet_season%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/classifier_CNN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/classifier_CNN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Multi-resolution_CNN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Multi-resolution_CNN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Misclassifications.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/Misclassifications.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/CNN_classifier.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/CNN_classifier.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/3datasets_CNN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/3datasets_CNN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/mean_max.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/mean_max.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/UpdResolutions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Machine-Learning/UpdResolutions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing%2032.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing%2032.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing%20PC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing%20PC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/GenTraining%289-pixels%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/GenTraining%289-pixels%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/GenTraining%281-pixel%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/GenTraining%281-pixel%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Data%20pre-processing/Data%20pre-processing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Copula%20Modeling/Copula.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/Code/Copula%20Modeling/Copula.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8317873466496335,
      "result": {
        "original_header": "Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences",
        "type": "Text_excerpt",
        "value": "\nComplete report at https://repository.tudelft.nl/islandora/object/uuid%3Adbe50c7f-643e-4f9c-b6b0-8a20ddf7262c\n \n"
      },
      "source": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "convolutional-neural-networks, deep-learning, deep-neural-networks, feedforward-neural-network, gaussian-naive-bayes, hydrology, hydrology-statistical, logistic-regression, machine-learning, random-forest, support-vector-machines, transfer-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Pargo18"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 106154164,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20899,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Pargo18/Applying-Deep-Learning-vs-Machine-Learning-models-to-reproduce-dry-spell-sequences/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:02:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}