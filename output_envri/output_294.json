{
  "application_domain": [
    {
      "confidence": 27.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nghiahhnguyen/SWHGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-24T10:41:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-23T09:56:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The repository for a research project in exploring the Software Heritage Dataset"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9046198810737023,
      "result": {
        "type": "Text_excerpt",
        "value": "Attention: THIS GUIDANCE IS DEDUCED FROM OUR PROCESS. In authors&#39; opinion, it is better than we did in our thesis. \nWITH row WHERE row.id IS NOT NULL \nX can be 100,000 or 1,000,000 depending on your ram memory. We use 100,000 for 64 GB RAM. \nNotice: This step took us 1 month. So any improvement is welcome. \nIn the thesis, we choose based on the visited date which is a mistake. So we suggest future researchers use the date of the branch to find the active repositories. Moreover, we only choose MASTER branch or HEAD branch, the branch that the pointer currently point to: [https://stackoverflow.com/questions/2304087/what-is-head-in-git](https://stackoverflow.com/questions/2304087/what-is-head-in-git). \n- Find the latest date from all of MASTER/HEAD branches \nJOIN snapshot\\_branch as sb ON sbs.branch\\_id = sb.object\\_id \nWHERE ov.origin IS NOT NULL AND ss.object\\_id IS NOT NULL AND sbs.branch\\_id IS NOT NULL AND r.id IS NOT NULL AND o.type = &#39;git&#39; AND (encode(sb.name::bytea, &#39;escape&#39;) ~ &#39;.\\*HEAD.\\*&#39; OR encode(sb.name::bytea, &#39;escape&#39;) ~\\* &#39;.\\*master.\\*&#39;) \nWHERE ov.origin IS NOT NULL AND ss.object\\_id IS NOT NULL AND sbs.branch\\_id IS NOT NULL AND r.id IS NOT NULL AND o.type = &#39;git&#39; AND (encode(sb.name::bytea, &#39;escape&#39;) ~ &#39;.\\*HEAD.\\*&#39; OR encode(sb.name::bytea, &#39;escape&#39;) ~\\* &#39;.\\*master.\\*&#39;) AND \nThen, we find the oldest version of those &#39;active&#39; repositories: \nWHERE ov.origin IS NOT NULL AND ss.object\\_id IS NOT NULL AND sbs.branch\\_id IS NOT NULL AND r.id IS NOT NULL \nFinally, we find the id of the revision the the oldest version of the active repositories point to : \nWe will create relationship called &#39;BRANCH&#39; from repository to one particular revision for latest repository. \nMERGE (r)\\&lt;-[:BRANCH]-(s:Repository{id: row.origin\\_id}); \nWITH row.origin\\_id as origin\\_id, row.id as revision\\_id \nWHERE revision\\_id is not null \nMERGE (r)\\&lt;-[:BRANCH]-(s:Repository{id:origin\\_id, oldest: &quot;true&quot;}); \n1. Extract git repository&#39;s revisions and releases: \n&quot;MATCH (s:Repository)-[:BRANCH]-\\&gt;(r:Revision) \nWITH DISTINCT r, s.id as origin\\_id \nConclusion: We have two files: snapshot\\_revision\\_git.csv and snapshot\\_release\\_git to extract metrics. \nSince the file snapshot\\_revision\\_git is really big, we split it into 8 files since we have eight core ram. We do that to boost the process of extracting metrics. \nNotice: We should handle the case for example we split the big file into file 1 and file 2, the last origin\\_id of the file 1 and the first origin\\_id of file 2 belong to the same origin id. Therefore, we cannot extract these metrics from the code above directly. In thesis, we combine the last origin of file 1 and the first origin of file 2 and handle it separately. \n# **Please contact us if there is any concern**\n \n"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nghiahhnguyen/SWHGD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/find_last_fork.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/find_last_fork.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/origin_url.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/origin_url.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/min_max_odoo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/min_max_odoo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot_metrics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot_metrics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/longevity.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/longevity.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Metric%20Calculation%20Test%201.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Metric%20Calculation%20Test%201.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20Metrics%203.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20Metrics%203.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/metrics_rest_projects.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/metrics_rest_projects.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/check_count_snapshot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/check_count_snapshot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Crawling_data_from_github_Test_1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Crawling_data_from_github_Test_1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20metrics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20metrics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Untitled1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Untitled1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/cycle_time.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/cycle_time.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/get_random_repos.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/get_random_repos.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/handle_big_project.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/handle_big_project.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20Metrics%202.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Calculate%20Metrics%202.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot_gz.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/snapshot_gz.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/origin_snapshot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/origin_snapshot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Working%20with%20origin.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/Working%20with%20origin.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/Calculate%20metrics-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/Calculate%20metrics-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/Working%20with%20origin-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/Working%20with%20origin-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/snapshot_metrics-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/snapshot_metrics-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/find_last_fork-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/.ipynb_checkpoints/find_last_fork-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/Extract%20last%20column.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/Extract%20last%20column.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove_duplicated_forks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove_duplicated_forks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/extract_fork_pattern_from_revision_list.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/extract_fork_pattern_from_revision_list.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove_duplicated_forks_chunking.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove_duplicated_forks_chunking.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove-when-done.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/remove-when-done.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nghiahhnguyen/SWHGD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nghiahhnguyen/SWHGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Please contact us if there is any concern"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/fork-detection/compile.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.882210517206901,
      "result": {
        "type": "Text_excerpt",
        "value": "We only focus on **git project** \nCOPY ( \nUSING PERIODIC COMMIT X \n1 \\&lt;= x \\&lt;= 14 \nUSING PERIODIC COMMIT \nJOIN origin\\_visit as ov ON o.id = ov.origin \nCOPY( \nSELECT ov.origin as origin\\_id, r.id as revision\\_id \nCOPY \nlatest\\_repository(origin\\_id, revision\\_id) \nSELECT ov.origin as origin\\_id, min(r.date) as min\\_date \nJOIN origin\\_visit as ov ON lr.origin\\_id = ov.origin \nCOPY oldest\\_repository \nSELECT DISTINCT ov.origin as origin\\_id, r.id as revision\\_id \nJOIN origin\\_visit as ov ON or.origin\\_id = ov.origin \nWe will create relationship called &#39;BRANCH&#39; from repository to one particular revision for latest repository. \nUSING PERIODIC COMMIT 100000 \nLOAD CSV WITH HEADERS FROM &quot;file:///latest\\_repository.csv&quot; AS row \n1. Export release to file: \nFROM release) \nLOAD CSV WITH HEADERS FROM &quot;file:///release.csv&quot; AS row \nMATCH (r:Revision{id: row.release\\_id}) \n1. Extract git repository&#39;s revisions and releases: \n&quot;MATCH (s:Repository)-[:BRANCH]-\\&gt;(r:Revision) \n"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8623160751107201,
      "result": {
        "type": "Text_excerpt",
        "value": "1. Import revision to Neo4j: \nTO &#39;/tmp/revision.csv&#39; delimiter &#39;,&#39; CSV HEADER; \n- Import revision from file to Neo4j: Remember to put file in directory you set on config file of Neo4j. \nLOAD CSV WITH HEADERS FROM &#39;file:///revision.csv&#39; AS row \nLOAD CSV WITH HEADERS FROM &quot;file:///revision\\_history\\_[x].csv&quot; AS row \nto &#39;/tmp/latest\\_repository.csv&#39; delimiter &#39;,&#39; CSV HEADER; \nto &#39;/tmp/oldest\\_repository\\_date.csv&#39; delimiter &#39;,&#39; CSV HEADER; \nFROM &#39;/tmp/oldest\\_repository\\_date.csv&#39; delimiter &#39;,&#39; CSV HEADER; \nto &#39;/tmp/oldest\\_repository.csv&#39; delimiter &#39;,&#39; CSV HEADER; \nLOAD CSV WITH HEADERS FROM &quot;file:///latest\\_repository.csv&quot; AS row \nLOAD CSV WITH HEADERS FROM &quot;file:///oldest\\_repository.csv&quot; AS row \nto &#39;/tmp/release.csv&#39; delimiter &#39;,&#39; CSV HEADER; \nLOAD CSV WITH HEADERS FROM &quot;file:///release.csv&quot; AS row \n"
      },
      "source": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nghiahhnguyen/SWHGD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SWHGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nghiahhnguyen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4091928,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 140880,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 36449,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1135,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 110,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nghiahhnguyen/SWHGD/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:57:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}