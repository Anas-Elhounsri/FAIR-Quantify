{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rabernat/research_computing"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines For Contributing\n\n- Create a new git branch specific to your change, as opposed to making your commits in the master branch.\n- Don't put multiple fixes/features in the same branch / pull request.\n- Give a proper description in your pull request of what you're trying to fix.\n- First line of your commit message should start with present-tense verb, be 50 characters or less, and include the\nrelevant issue number(s) if applicable. Example: _Ensure proper PLUGIN_PATH behavior. Refs #428._ If the commit completely\nfixes an existing issue or request on the tracker, please use `Fixes #585` or `Fix #585` syntax (so the relevant issue is automatically closed\nupon PR merge).\n- Make sure that new features are configurable using a theme variable (eg. `DISPLAY_CHUCKNORRIS_ADVICE`). Should default to\n_False_, so users will not get any surprises when upgrading.\n- If you introduce new theme variables, new behaviour or changes from the default Pelican behaviour, make sure you make\nmention of it in the [README](README.md)\n- Make sure changes do not break backwards compatibility, especially with regards to settings.\n- Only changes that stand to benefit a majority of users or use cases are suitable for contributing back to the main repository. For tweaks that are likely specific to your site or likings, try using `CUSTOM_CSS`.\n    - If doing so would require a CSS selector that isn't supported by the theme, create a patch that adds the necessary CSS selector, not the CSS tweak.\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/themes/pelican-bootstrap3/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-30T02:08:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-15T21:26:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Website for Research Computing in Earth Sciences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8453393418210233,
      "result": {
        "original_header": "Automatic Publishing with Doctr",
        "type": "Text_excerpt",
        "value": "This site is configure to automatically publish to\nhttps://rabernat.github.io/research_computing/\nusing the [doctr](https://github.com/drdoctr/doctr) utility. \n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://pelican.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rabernat/research_computing/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_6.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_6.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_7.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_7.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_8.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_8.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_3.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Assignments/Assignment_3.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/intro_to_python.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/intro_to_python.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/Basemap_Tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/Basemap_Tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/organization_and_packaging.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/organization_and_packaging.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/numpy_and_matplotlib.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/numpy_and_matplotlib.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/xarray.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/xarray.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/dask_for_parallel_computing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/dask_for_parallel_computing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/pandas.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/lectures/python/pandas.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rabernat/research_computing/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rabernat/research_computing"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Research Computing in Earth Science"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/update.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/develop_server.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: Source Code Editors\nSummary:\nDate: 9/4/2017\nTags: source code editor\nCategory: software\n\nYou can NOT use word processing software like Microsoft Word to edit your source code since a source\nfile consists of simple ASCII text, whereas the files created by word processing software have all kinds of other information about the document formatting; they are also usually stored in binary rather than ascii form format.\n\nA source code editor is a piece of software that is designed to help you write your code.  Modern source code editors include features that making writing code easier such as syntax highlighting, indentation, autocomplete and brace or bracket matching.\n\nSome of the programming languages we will cover in this course have\n their own source code editors that are part of an integrated development\nenvironment (IDE), while other languages do not have an IDE and thus you need a standalone source code editor.\n\n There are numerous freely available source code editors.  Two editors that we recommend are:\n\n * <a href=\"https://atom.io\" target=\"_blank\"> Atom  - Available for all systems.</a>\n\n * <a href=\"https://www.barebones.com/products/bbedit/\" target=\"_blank\"> BBedit  - Only available for OS X</a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/software/install_sourceeditor.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: VPN\nSummary:  \nDate: 9/2/2017\nTags: vpn\nCategory: software\n\nA VPN is a virtual private network. If you are off-campus,\nyou can log on to the LDEO VPN and your computer's IP address\nwill make it look like your computer is physically located on campus. This\nis useful for accessing online material that is only available\nusing the campus network.\n\nPoint your web browser to the LDEO VPN log in screen:\n\nhttps://vpn.ldeo.columbia.edu\n\nLog in with your LDEO ID and Password.\n\nAfter you have successfully logged in, you will be able to download and\ninstall the new \"OpenVPN Connect\" Client and download the\nconfiguration file.  This will put the OpenVPN login tool up on the menu bar (on OS X)\nso that you can easily log in to the VPN.\n\nSome useful things you can do with the VPN:\n\n* access journal papers while off campus\n* access online content from the Columbia library\n* use software that is licensed only for on-campus usage\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_vpn.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: Fortran\nSummary:\nDate: 9/2/2017\nTags: fortran\nCategory: software\n\nDespite being one of the oldest programming languages, Fortran is still one of the primary languages used for scientific and high-performance computing.\nThe language has gone through seven major revisions since the original FORTRAN 66, with the latest standard being Fortran 2015.  \n\nThere are several Fortran  implementations  available from commercial vendors, with the Intel Fortran compiler being one of the best in terms of producing highly optimized code. However,\nthe Intel compiler costs about $300 per academic license, so for this class we will be using the freely available gFortran (aka\n GNU Fortran) compiler, which is part of the open source GNU Compiler Collection (GCC).\n\n## Installing gFortran\n\n\n#### OS X:\n\nDownload the  installer package from <a href=\"https://gcc.gnu.org/wiki/GFortranBinaries/\"  target=\"_blank\">  https://gcc.gnu.org/wiki/GFortranBinaries/  </a>\n\nMake sure you follow the instructions in the file Readme.html that comes with the installer.\n You will need to install Apple's Xcode software and the Xcode command-line tools BEFORE installing gfortran (see instructions in the Readme.html file).\n\n#### Linux:\nDownload and install the appropriate package for your Linux distribution. See\n <a href=\" https://gcc.gnu.org/wiki/GFortranDistros/\"  target=\"_blank\">  https://gcc.gnu.org/wiki/GFortranDistros/ </a>\n\n#### Windows:\n\n In the Cygwin environment, download and install the gcc-fortran package.\n\n## Sample Code\n\n\n\n\n``` fortran\nprogram example\n\n    implicit none\n    integer :: i,j,k   \n    real(8) :: x,y,z\n\n    i = 1\n    j = 2\n    k = i + j\n\n    write(*,*) 'k = ', k\n\n! Comments in Fortran begin with a \"!\"    \n\n    x = 1.8\n    y = 2.4\n    z = x + y    ! this is another comment\n\n    write(*,*) 'z = ', z\n\nend program\n```\n\n##   Online resources\n\n* <a href=\" http://fortranwiki.org/fortran/show/HomePage\"  target=\"_blank\"> Fortran Wiki </a>\n\n* <a href=\"https://stackoverflow.com/questions/tagged/fortran\"  target=\"_blank\"> Stack Overflow Fortran  </a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_fortran.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: Git\nSummary:\nDate: 9/2/2017\nTags: git\nCategory: software\n\n## Installing Git\n\n\n#### OS X:\n\nIf you've installed Xcode (or it's Command Line Tools), Git may already be installed.\nTo find out, open a terminal and type \"which git\". You should get the answer:\n\n/usr/bin/git\n\nIf not, then go install Xcode and the command line tools using these instructions:\n\n1. Install the Xcode application from the Mac App Store. Open the installed Xcode app, agree to the license, and let it install some \"components\"\n\n2. Install the Xcode command-line tools. Open a terminal window (Applications > Utilities > Terminal). Type xcode-select --install and follow the dialogs that open\n\n#### Linux:\n\nGit may already be installed.\nTo find out, open a terminal and type \"which git\". You should get the answer: /usr/bin/git\nIf not, then install git using these  instructions: <a href=\" https://www.atlassian.com/git/tutorials/install-git#linux\"  target=\"_blank\">   https://www.atlassian.com/git/tutorials/install-git#linux</a>\n\n\n#### Windows:\n\nFollow the instructions at  <a href=\"https://git-for-windows.github.io\"  target=\"_blank\">  https://git-for-windows.github.io </a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_git.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: GitHub\nSummary:\nDate: 9/2/2017\nTags: github\nCategory: software\n\n1. Sign up for a free account at <a href=\"https://github.com\"  target=\"_blank\"> https://github.com </a>  \n\n2. Next, sign up for the Student Developer Pack at <a href=\"https://education.github.com/pack\"  target=\"_blank\"> https://education.github.com/pack </a>. The Student Developer Pack gives you unlimited private repositories, which will we use in this course for turning in your homework assignments.\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_github.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: GMT\nSummary:  \nDate: 9/2/2017\nTags: gmt\nCategory: software\n\n\"The Generic Mapping Tools, GMT, are an open source collection of tools for\nmanipulating geographic and Cartesian data sets (including filtering, trend\nfitting, gridding, projecting, etc.) and producing PostScript illustrations\nranging from simple x\u2013y plots via contour maps to artificially illuminated\nsurfaces and 3D perspective views. It is released under the GNU Lesser General Public License.\"\n\n Go to the GMT installation webpage and download the appropriate GMT-5.X.X package for your system:\n\n <a href=\"http://gmt.soest.hawaii.edu/?id=Installing\" target=\"_blank\">http://gmt.soest.hawaii.edu/?id=Installing</a>\n\n* OS X:   download the application bundle gmt-5.X.X-darwin-x86_64.dmg\n* Windows: download the application bundle  gmt-5.X.X-win64.exe\n* Linux:  Follow the installation instructions\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_gmt.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: MATLAB\nSummary:\nDate: 9/2/2017\nTags: matlab\nCategory: software\n\n## Installing MATLAB\n\nYou can acquire a MATLAB license and instructions for installing the software by sending an email\nfrom your LDEO or Columbia University email account to:\n<a href=\"mailto:askit@ldeo.columbia.edu?body=I am a student at LDEO and would like to install the MATLAB software on my computer. Thank you. &subject=student request for MATLAB software\">askit@ldeo.columbia.edu</a>.\n\nMATLAB uses a license server on campus and thus may only run when your computer is on the university network,\nor if you remotely connect using the LDEO VPN server.\n\n## Sample Code\n\n\n```Matlab\nx = 1:10;\ny = x.^2;\nfigure;\nplot(x,y,'.-')\n```\n\n##   Getting help\n\nOpen the MATLAB help documentation, which can be accessed by the \"Help\" button on the MATLAB main window or you can\ntype \"doc\" in the command window.\n\n##   Online resources\n\n* <a href=\"https://www.mathworks.com/matlabcentral/\"  target=\"_blank\"> MATLAB Central </a>  -  knowledge base for MATLAB users\n\n* <a href=\"https://www.mathworks.com/matlabcentral/fileexchange/\"  target=\"_blank\">MATLAB File Exchange</a> -  free user contributed MATLAB routines and libraries.\n\n* <a href=\"https://stackoverflow.com/questions/tagged/matlab\"  target=\"_blank\">Stack Overflow  MATLAB </a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_matlab.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: GeoMapApp\nDate: 9/2/2017\nSummary:\nTags: GeoMapApp\nCategory: software\n\n Go to the GeoMapApp website and download the latest version:\n\n <a href=\"http://www.geomapapp.org\" target=\"_blank\">http://www.geomapapp.org</a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_geomapapp.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: UNIX\nSummary:  \nDate: 9/2/2017\nTags: unix\nCategory: software\n\n## Installing Unix\n\n#### OS X and Linux\n\nOS X and Linux come with the unix routines we will be using, so you don't need to install anything.  Simply open up a terminal window\nand you can start typing in unix commands.\n\nOn OS X, the terminal program is /Applications/Utilities/Terminal.app (Applications > Utilities > Terminal)\n\n#### Windows\n\nDownload and install Cygwin: <a href=\" https://cygwin.com\"  target=\"_blank\">  https://cygwin.com</a>\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_unix.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Title: Python\nSummary:  \nDate: 2 September 2017\nTags: python\nCategory: software\n\n_Note: many elements in this guide are adapted from\n[Daniel Rothenberg](http://danielrothenberg.com/)'s\nexcellent\n[getting started guide](http://danielrothenberg.com/gcpy/getting_started.html)._\n\n## What is Python?\n\n[Python](https://www.python.org/) itself is a\n[interpreted programming language](https://en.wikipedia.org/wiki/Interpreted_language)\nthat is popular for its flexibility and simple, elegant syntax.\nHowever, the \"core\" python language does not in itself contain enough features\nfor serious scientific work.\n\"Scientific python\" refers to an \"ecosystem\" of interrelated packages that\nextend the core python language and provide different elements of the\nscientific computing environment.\n(This ensemble of packages is sometimes also called the scientific python\n  \"stack\".)\nFor example,\n[numpy](http://www.numpy.org/)\nprovides the data structures and functions for dealing with multidimensional\narrays of numerical values, while\n[matplotlib](https://matplotlib.org/)\nprovides the plotting routines necessary for making figures.\nPython and nearly all of the software packages in the scientific python\necosystem are [open-source](https://opensource.org/).\nThey are maintained and developed by a community of scientists and programmers,\nsome of whose work is supported by universities, non-profits, and for-profit\ncorporations.\nThis work mostly happens in the open, via [github](http://github.com/) and other\nonline collaboration platforms.\n\nBecause there is no single authority which controls all of these packages, it\ncan be intimidating for new users to figure out how to set up a functional\nscientific python environment.\nCoordinating the compatibility between these different packages and their\nmultiple versions used to be a nightmare!\nFortunately, the problem is solved completely by using a Python _distribution_\nand / or a Python _package manager_ (described in detail below).\n\nThe only hard-and-fast rule about scientific computing in Python is this:\n\n**Do not use your system Python installation!**\n\nThe version of Python that ships with operating systems such as Red Hat Linux and\nmacOS is usually outdated and configured to support system functions. Although it\nis entirely possible to install and use the necessary packages using the system\nPython, it's much more practical on both\nyour local machine and any other computers you work with to use a specialized Python\ninstallation.\n\n**Should I use Python 2 or Python 3?**\n\nYou should use Python 3. The majority of the scientific Python packages are\n[moving to only support Python 3](http://www.python3statement.org/) in the\nnear future without any backwards compatibility. The differences between\nPython 2 and Python 3 are mostly superficial, but large enough that it is\ncumbersome to maintain large codebases that are compatible with both. With the\nexception of a handful of packages you may encounter which do not support\nPython 3, there is no compelling reason to use Python 2 today.\n\n## Recommended Installation Method: Use Anaconda Python\n\nThe easiest way to set up a full-stack scientific Python deployment is to use a\nPython distribution. This is an installation of Python with a set of curated\npackages which are guaranteed to work together.\nFor this class, we recommend the\n**[Anaconda Python Distribution](https://www.anaconda.com/download/)**.\nFollow the link above to obtain a one-click installer for Linux, Mac, or\nWindows.\n(Make sure you select the Python 3 installer, not Python 2.7.)\nIn addition to the packages themselves, Anaconda includes a graphical\nutility to help manage any packages you may want to install which are not\nalready included in the default inclusion list.\n\n## Lightweight Alternative: Miniconda\n\nIf you are installing python on a remote machine via ssh, or you simply don't\nwant to download a huge file like the Anaconda Python Distribution, there is a\nlightweight alternative installation method.\n\n1. **Obtain a minimal Python installer**\n  We recommend the [Miniconda](https://conda.io/miniconda.html) installer;\n  this provides a Python install for your operating system, plus the **conda**\n  package manager. This way, you can only install the packages you *want*.\n\n2. **Run the installer**\n  You'll probably need to do this from the command line, e.g.\n\n        $ sh Miniconda3-latest-MacOSX-x86_64.sh\n  Follow the instructions; you can choose where to place the installation (\n  preferably somewhere you have write access without super-user/root access,\n  like your home directory). At the end of this process, add this path to your\n  \\*rc configuration\n\n        $ echo \"PATH=$PATH:/path/to/miniconda/bin\" > ~/.bashrc\n  If you do this, your ``$PYTHONPATH`` will be implicitly configured correctly\n  and you will never have to touch it.\n\n3. **Install any packages you want**\n  As shown :ref:`before <packages>`, install whatever packages you want.\n  Optionally, you can create a customized environment, as described below.\n\n## Custom Environments\n\nPython coupled with a package manager provides a way to make isolated,\nreproducible *environments* where you have fine-tuned control over all packages\nand configuration.\nFor scientific Python, we recommend using **conda**'s built in\nenvironment management system. To create a conda environment, you simply\nexecute the following command:\n\n    $ conda create --name my_environment python=3.6 numpy\n\nThis will create a special environment in ``$MINICONDA_HOME/envs/my_environment``\nwith only Python and numpy to begin with. Here, we've also told conda to install\nPython version 3.6; you can specify exact versions or minima, and conda will\ntake care of figuring out all the compatibilties between versions for you. To use\nthis environment, simply \"activate\" it by executing:\n\n    $ source activate my_environment\n\nRegardless of your shell, you should now see the string ``(my_environment)``\nprepended to your prompt. Now, if you execute any Python-related tool from the\ncommand line, it will first search in ``$MINICONDA_HOME/envs/my_environment/bin``\nto find them. You can deactivate your environment by typing:\n\n    $ source deactivate\n\nFor extensive documentation on using environments, please see\n[the conda documentation](https://conda.io/docs/using/envs.html). The most\nimportant feature to review here is the ability to *share and export* your\nenvironment; this is the basis for reproducibility in the scientific Python stack.\nAt any time from the shell, you can execute\n\n    $ conda list\n\nto get a complete summary of all the packages installed in your environment, the\nchannel they were installed from, and their full version info. Using this info,\nyou can create an **environment file** in\n[YAML syntax](http://docs.ansible.com/ansible/latest/YAMLSyntax.html)\nwhich documents the exact\ncontents of your environment. With that file, a new environment with the exact\nconfiguration can be installed by executing\n\n    $ conda env create -f my_environment.yml\n\n\n## Geosciences Python Environment\n\nCombining all of the previous sections, we can very easily spin-up a\nfull-featured scientific Python environment with a set of packages curated for the\ngeosciences. Copy and paste the following ``environment.yml`` file somewhere\non your local hard drive:\n\n    :::yaml\n    name: geo_scipy\n    channels:\n        - conda-forge\n        - defaults\n    dependencies:\n        - python=3.6    # Python version 3.6\n        - bottleneck    # C-optimized array functions for NumPy\n        - cartopy       # Geographic plotting toolkit\n        - cython        # Transpile Python->C\n        - dask          # Parallel processing library\n        - future        # Python 2/3 compatibility\n        - h5py          # Wrapper for HDF5\n        - ipython       # IPython interpreter and tools\n        - jupyter       # Jupyter federation architecture\n        - matplotlib    # 2D plotting library\n        - netcdf4       # Wrapper for netcdf4\n        - notebook      # Notebook interface\n        - numpy         # N-d array and numerics\n        - pandas        # Labeled array library\n        - pyresample    # Geographic resampling tools\n        - scipy         # Common math/stats/science functions\n        - scikit-learn  # Macine learning library\n        - scikit-image  # Image processing routines\n        - statsmodels   # Regression/modeling toolkit\n        - seaborn       # Statistical visualizations\n        - six           # Python 2/3 compatibility\n        - tqdm          # Nice progressbar for longer computations\n        - xarray        # N-d labeled array library\n\n(**Note:**\nInstalling this environment will also install many dependencies, including\ncompiled libraries. This is totally fine; even if you have these libraries\nalready installed through your system package manager, **conda** will install\nand link for use in the environment a configuration which should be to play\nnicely and work with all of its components.)\n\nCreate this environment through **conda**\n\n    $ conda env create -f /path/to/environment.yml\n\nActivate this environment\n\n    $ source activate geo_scipy\n\nThis environment should be sufficient for all of your work in this class.\n\n## Installing More Packages\n\nOnce you have a basic Python environment, you can easily add or remove packages\nusing the [conda](https://conda.io/) command line utility.\nConda was created to help manage the complex dependencies and\npre-compiled binary libraries that are necessary in scientific python.\n\nIf you set up your python environment using the Anaconda Python Distribution or\nwith miniconda, you should already have the **conda** command available on\nthe command line.\nWith it, you can easily install packages from an official, curated set of packages which are\nbuilt and tested for a number of different system configurations on Linux,\nWindows, and macOS\n\n    $ conda install <package-name>\n\nAdditionally, there is a\ncommunity-maintained collection of packages/recipes called\n[conda forge](https://conda-forge.github.io/>)\nwhich is accessible through conda as a special \"channel\"\n\n    $ conda install -c conda-forge <package-name>\n\nWhile conda allows you to install almost any science-related package, there may\nbe other general-use python packages you wish to you that are not available in\nvia conda. For these, you can use an alternative installation method.\n\nOutside of the scientific python community,\nthe most common way to install packages is to search for them on the official\n[PyPI](https://pypi.python.org/pypi) index. Once you've found the package you\nwant to install (you may have also just found it on github or elsewhere), you\nuse the **pip** command from a the command line:\n\n    $ pip install <package-name>\n\nThis will fetch the source code, build it, and install it to wherever your\n``$PYTHONPATH`` is set. This works in the vast majority of cases, particularly\nwhen the code you're installing doesn't have any compiled dependencies.\n\nIf you\ncan't find a package on either PyPI or conda-forge, you can always install it\ndirectly from the source code. If the package is on github, ``pip`` already has\nan alias to do this for you:\n\n    $ pip install git+https://github.com/<user>/<package-name>.git\n\nIf all else fails, you can always download the source code and install it manually\nlike\n\n    $ wget https:/path/to/my/pkg/source.tar.gz\n    $ tar -xvzf source.tar.gz\n    $ cd source/\n    $ python setup.py install\n\nYou can also use ``pip`` to install code you've downloaded:\n\n    $ cd source/\n    $ pip install -e .\n\nThis will automatically call **setup.py** for you. The \"**-e**\" flag will\ninstall the package in \"editable\" mode, which means that any chane you make\nto the source code will automatically be recognized when you load the package\nin Python; this is *especially* useful when you're developing code.\n\nFinally, you don't *have* to go through this process of installing packages. If you\nhave code sitting on your disk somewhere, you can always modify the environmental\nvariable ``$PYTHONPATH`` to include a path to that code, and Python will find it\nfor you. However, you *should not do this* if it can be avoided, because it is\nextremely difficult (if not impossible) to be sure that any compiled code will\nlink against the correct libraries it needs, and it is very hard to debug errors\nassociated with mis-matched libraries/headers if you go this route.\n\n## Getting Help\n\nYour first stop for help should be the official documentation of the packages\nyou are using.\nReading documentation can be sometimes feel tedious if you just want a quick\nanswer.\nBut it is usually worthwhile, since it helps you reach a deeper understanding of\nhow a package is structured.\nHere are some of the links to the official documentation of the python packages\nwe use in this course.\n\n* [Python](http://docs.python.org)\n* [IPython](http://ipython.org/documentation.html)\n* [NumPy](http://docs.scipy.org/doc/numpy/reference/)\n* [MatPlotLib](http://matplotlib.org/contents.html)\n* [SciPy](http://docs.scipy.org/doc/scipy/reference/)\n* [pandas](http://pandas.pydata.org/pandas-docs/stable/)\n* [XArray](xarray.pydata.org/en/stable/)\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/content/Software/install_python.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Backup: Manual Publishing",
        "parent_header": [
          "Research Computing in Earth Science"
        ],
        "type": "Text_excerpt",
        "value": "Publish using [ghp_import](https://github.com/davisp/ghp-import).\n\n    $ pelican content -o output -s pelicanconf.py\n    $ ghp-import output\n    $ git push origin gh-pages\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9705717750272933,
      "result": {
        "original_header": "Research Computing in Earth Science",
        "type": "Text_excerpt",
        "value": "Pelican site repo. See [Pelican docs](http://pelican.readthedocs.io/) for\ninfo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962078199923922,
      "result": {
        "original_header": "Automatic Publishing with Doctr",
        "type": "Text_excerpt",
        "value": "This site is configure to automatically publish to\nhttps://rabernat.github.io/research_computing/\nusing the [doctr](https://github.com/drdoctr/doctr) utility. \nPushing to the master branch will trigger Travis CI to build the docs and\npublish them to the `github-pages` branch of the repo. \n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rabernat/research_computing/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Attribution-NonCommercial 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  j. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  k. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  l. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \u201cLicensor.\u201d The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n"
      },
      "source": "https://raw.githubusercontent.com/rabernat/research_computing/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "research_computing"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rabernat"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4128938,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 119588,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 61739,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 33791,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 14309,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5249,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 4224,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2311,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rabernat/research_computing/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:28:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 39
      },
      "technique": "GitHub_API"
    }
  ]
}