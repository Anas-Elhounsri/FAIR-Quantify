{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Freshwater-Initiative/Observatory"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-20T22:45:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-20T06:55:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Codebase for water research"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9457036196793678,
      "result": {
        "original_header": "Observatory",
        "type": "Text_excerpt",
        "value": "Tools for observing the terrestrial and aquatic surfaces of Earth  \n\"You belong among the wildflowers, you belong somewhere you feel free.\" Tom Petty \nAn observatory is a location used for observing terrestrial or celestial events (thank you Wikipedia). Observatories have been as simple as containing an astronomical sextant, and as complicated as modern academic supported observatories containing multi-million dollar instruments, tools, with institutions supporting long term research and education programs.  While observatories are usually thought of as star-gazing investments in the field of astronomy, observatories have also been constructed in climatology/meteorology, geophysical, oceanography and volcanology communities, in order to investigate and coordinate their research efforts.   \nThis repository is intended for the sharing and distribution of open-source Python based code useful for model and data integration that improves access to large datasets, reduces computational burden, reinvent the wheel less often, and share and communicate more about how to synthesize earth surface observations in useful ways.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9726830695316089,
      "result": {
        "original_header": "Work with a git-versioned-folder in hydroshare to develop your own Utilities",
        "type": "Text_excerpt",
        "value": "0) Make a fork of Freshwater-Initiative/Observatory\n1) In HydroShare, get to JupyterHub and open up a terminal instance.\n2) Change the working directory to notebooks/utilities \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8046591917618798,
      "result": {
        "original_header": "If you have previously cloned the git folder to notebooks/utilities, update this to the latest file",
        "type": "Text_excerpt",
        "value": "3) Change the working directory to notebooks/utilities/Observatory\n4) Pull the latest (your updated fork - pull from Freshwater-Initiative/Observatory master, before you do this) files from the repository\n  $ git pull\n5) you should now have notebooks/utilities/Observatory subdirectory that matches your fork on github.com (which should match Freshwater-Initiative/Observatory - if you pulled from the master) \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8531710655603005,
      "result": {
        "original_header": "Saving changes back to git repository",
        "type": "Text_excerpt",
        "value": " \u201cUse only that which works, and take it from any place you can find it.\u201d Bruce Lee\n \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Freshwater-Initiative/Observatory/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/ogh_meta_notebook.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/ogh_meta_notebook.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase1_treatgeoself.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase1_treatgeoself.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase7_xmapLandlab.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase7_xmapLandlab.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase0_adaptCatalog.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase0_adaptCatalog.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase3_gridclimdict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase3_gridclimdict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase4_exceedanceprob.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase4_exceedanceprob.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase8_xmapMappingfile.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase8_xmapMappingfile.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase5_exploreBasemaps.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase5_exploreBasemaps.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Unit_test_dev.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Unit_test_dev.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase6_observationdata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase6_observationdata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase2_datadownload.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/tutorials/Observatory_usecase2_datadownload.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Freshwater-Initiative/Observatory"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Observatory"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/107733338"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing Version on conda-forge",
        "parent_header": [
          "Observatory"
        ],
        "type": "Text_excerpt",
        "value": "Install package with conda:\n\n```bash\nconda install -c conda-forge ogh\n```\n\nExecute from Jupyter Notebook\n\n```\n!conda install -c conda-forge --yes ogh\nimport ogh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing Latest Master Version",
        "parent_header": [
          "Observatory"
        ],
        "type": "Text_excerpt",
        "value": "Linux/OSX:\n\n```bash\nwget https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/requirements.txt\nwget https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/requirements-dev.txt\nconda create -n oghenv -c conda-forge python=2.7 --file requirements.txt --file requirements-dev.txt\nsource activate oghenv\npip install git+https://github.com/Freshwater-Initiative/Observatory.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9496836568485197,
      "result": {
        "original_header": "Observatory",
        "type": "Text_excerpt",
        "value": "\"You belong among the wildflowers, you belong somewhere you feel free.\" Tom Petty \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8969928616144358,
      "result": {
        "original_header": "Work with a git-versioned-folder in hydroshare to develop your own Utilities",
        "type": "Text_excerpt",
        "value": "0) Make a fork of Freshwater-Initiative/Observatory\n1) In HydroShare, get to JupyterHub and open up a terminal instance.\n2) Change the working directory to notebooks/utilities \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "If you haven't cloned this repository into Hydroshare yet:",
        "type": "Text_excerpt",
        "value": "3) type/copy in \"git clone <github link>\" that is available from your fork (eg., https://github.com/username/Observatory.git)\n4) then type in your github username and password to then download the git clone.\n  $ git config --global user.name \"your git username\"\n  $ git config --global user.email \"your email that you used to setup the git account\"\n5) you should now have notebooks/utilities/Observatory subdirectory with this README.md and the observatory_gridded_hydrometeorology.py (OGH) within. \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999972147,
      "result": {
        "original_header": "If you have previously cloned the git folder to notebooks/utilities, update this to the latest file",
        "type": "Text_excerpt",
        "value": "3) Change the working directory to notebooks/utilities/Observatory\n4) Pull the latest (your updated fork - pull from Freshwater-Initiative/Observatory master, before you do this) files from the repository\n  $ git pull\n5) you should now have notebooks/utilities/Observatory subdirectory that matches your fork on github.com (which should match Freshwater-Initiative/Observatory - if you pulled from the master) \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997324660441816,
      "result": {
        "original_header": "Either way:",
        "type": "Text_excerpt",
        "value": "6) Change the working directory to notebooks/utilities/Observatory\n7) Copy observatory_gridded_hydromet.py to notebooks/utilities/\n  $ cp observatory_gridded_hydromet.py ../\n  Now, the file '/notebooks/utilities/observatory_gridded_hydromet.py' is updated to the latest state (from git) \n \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Saving changes back to git repository",
        "type": "Text_excerpt",
        "value": "8) Work on the file and save the changes.\n9) Change the working directory to '/notebooks/utilities'\n10) Copy the modified file back to git versioned folder\n  $ cp 'observatory_gridded_hydromet.py' Observatory/\n11) Change the working directory to '/notebooks/utilities/Observatory'\n12) Check file changes \n  $ git status\n13) Commit the changes\n  $ git add observatory_gridded_hydromet.py\n  $ git commit -m 'Add message to describe these changes, if any'\n  $ git push\n14) Check that the files changed\n  $ git status \n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Freshwater-Initiative\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Observatory"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Freshwater-Initiative"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 19052944,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 517082,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Freshwater-Initiative/Observatory/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jphuong",
          "type": "User"
        },
        "date_created": "2019-01-14T19:57:27Z",
        "date_published": "2019-01-14T20:01:09Z",
        "description": "A previous release tag error have been resolved, and OGH has now been updated with an additional class of operations to interact with xarray and landlab. Unit tests have been updated and additional unit tests will be developed. Use-case 7 and 8 notebooks have been developed to introduce ogh_xarray_landlab (OXL), and a number of new netcdf gridded data product data retrieval functions built for different spatial and temporal resolutions.",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.2.1",
        "name": "OGH with updated oxl class and tutorial notebooks",
        "release_id": 14968437,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/14968437",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/14968437",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jphuong",
          "type": "User"
        },
        "date_created": "2019-01-11T21:47:33Z",
        "date_published": "2019-01-11T21:48:54Z",
        "description": "A previous release tag error have been resolved, and OGH has now been updated with an additional class of operations to interact with xarray and landlab. Unit tests have been updated and additional unit tests will be developed. Use-case 7 and 8 notebooks have been developed to introduce ogh_xarray_landlab (OXL), and a number of new netcdf gridded data product data retrieval functions built for different spatial and temporal resolutions.",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.2.0",
        "name": "New class OXL in OGH",
        "release_id": 14748545,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/14748545",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/14748545",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lsetiawan",
          "type": "User"
        },
        "date_created": "2018-08-29T18:36:17Z",
        "date_published": "2018-08-29T20:29:26Z",
        "description": "## LATEST STABLE RELEASE\r\n\r\nThe OGH folder nesting has been restructured for unit tests to operate more smoothly. This release contains contains four OGH use-case notebooks. These examples derive a data management file, download target gridded data, apply spatial and temporal computations, and visualize spatial-temporal trends for exploratory data analysis communications. Several of the notebooks use the new renderValueInBoxplot function, which now has input parameters to visualize reference data relative to the boxplots. This release also incorporates Landlab from conda-forge for integrating modeling operations.\r\n\r\n[![DOI](https://zenodo.org/badge/107733338.svg)](https://zenodo.org/badge/latestdoi/107733338)\r\n",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.11",
        "name": "Releasing OGH with landlab dependency from conda-forge",
        "release_id": 12641440,
        "tag": "v0.1.11",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12641440",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12641440",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jphuong",
          "type": "User"
        },
        "date_created": "2018-08-29T20:30:53Z",
        "date_published": "2018-08-29T18:39:16Z",
        "description": "The OGH folder nesting has been restructured for unit tests to operate more smoothly. This release contains contains four OGH use-case notebooks. These examples derive a data management file, download target gridded data, apply spatial and temporal computations, and visualize spatial-temporal trends for exploratory data analysis communications. Several of the notebooks use the new renderValueInBoxplot function, which now has input parameters to visualize reference data relative to the boxplots. This release also incorporates Landlab from conda-forge for integrating modeling operations.",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.10",
        "name": "Releasing OGH with landlab dependency from conda-forge",
        "release_id": 12639372,
        "tag": "v0.1.10",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12639372",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12639372",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jphuong",
          "type": "User"
        },
        "date_created": "2018-08-29T17:56:44Z",
        "date_published": "2018-08-29T18:00:16Z",
        "description": "The OGH folder nesting has been restructured for unit tests to operate more smoothly. This release contains contains four OGH use-case notebooks. These examples derive a data management file, download target gridded data, apply spatial and temporal computations, and visualize spatial-temporal trends for exploratory data analysis communications. Several of the notebooks use the new renderValueInBoxplot function, which now has input parameters to visualize reference data relative to the boxplots.",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.9",
        "name": "OGH use-case 1 through 4 - completed",
        "release_id": 12623586,
        "tag": "v0.1.9",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12623586",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/12623586",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jphuong",
          "type": "User"
        },
        "date_created": "2018-05-25T15:33:13Z",
        "date_published": "2018-05-22T21:32:42Z",
        "description": "This release includes a number of tutorials, visualization options, and post-processing analyses. A number of tutorial jupyter notebooks are included within the tutorial subdirectory, which are intended to be applied in numerical order. The remapCatalog function was recently introduced to enable cataloging of pre-existing directories of files into the mapping file -- a HUGE time-saver. Finally, we incorporated Seaborn plots to aid in visual interpretations of the percent exceedance probability, which are now available in cfs (cubic feet per second) or mmday (millimeters per day) formats.",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.8-alpha",
        "name": "Incorporate tutorials and post-processing analyses",
        "release_id": 11119541,
        "tag": "v0.1.8-alpha",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.8-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/11119541",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/11119541",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.8-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristinaB",
          "type": "User"
        },
        "date_created": "2018-03-19T01:08:14Z",
        "date_published": "2018-03-30T21:28:18Z",
        "description": "This is the March 2018 release of the Observatory Gridded Hydrometeorology (ogh) package. It contains tools for observing the terrestrial and aquatic surfaces of Earth using gridded data products. This repository is intended for the sharing and distribution of open-source Python based code useful for model and data integration that improves access to large datasets, reduces computational burden, helps earth surface scientists reinvent the wheel less often, and improve tool sharing and communicate about how to synthesize earth surface observations in useful ways.\r\n\r\n## Features\r\n* Import geographic areas of interest and available data locations from HydroShare\r\n* Download gridded meteorology time series data products developed from observations and atmospheric models\r\n* Generate data files of daily, monthly, and annual statistics\r\n* NEW Mapping functions to show spatial distribution of gridded values\r\n* NEW Catalog prints available data\r\n* Package and export data to the CUAHSI JupyterHub environment  ",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.6-alpha",
        "name": "v0.1.6 Alpha",
        "release_id": 10337939,
        "tag": "v0.1.6-alpha",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.6-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/10337939",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/10337939",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.6-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lsetiawan",
          "type": "User"
        },
        "date_created": "2018-03-14T02:25:24Z",
        "date_published": "2018-03-13T17:03:09Z",
        "description": "This is the first release of the Observatory Gridded Hydrometeorology (ogh) package. It contains tools for observing the terrestrial and aquatic surfaces of Earth using gridded data products.  This repository is intended for the sharing and distribution of open-source Python based code useful for model and data integration that improves access to large datasets, reduces computational burden, helps earth surface scientists reinvent the wheel less often, and improve tool sharing and communicate about how to synthesize earth surface observations in useful ways.   \r\n\r\n## Features\r\n- Import geographic areas of interest and available data locations from HydroShare\r\n- Download gridded meteorology time series data products developed from observations and atmospheric models\r\n- Generate data files of daily, monthly, and annual statistics\r\n- Package and export data generated and downloaded through this workflow",
        "html_url": "https://github.com/Freshwater-Initiative/Observatory/releases/tag/v0.1.5-alpha",
        "name": "v0.1.5 Alpha",
        "release_id": 10024743,
        "tag": "v0.1.5-alpha",
        "tarball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/tarball/v0.1.5-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/10024743",
        "value": "https://api.github.com/repos/Freshwater-Initiative/Observatory/releases/10024743",
        "zipball_url": "https://api.github.com/repos/Freshwater-Initiative/Observatory/zipball/v0.1.5-alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:06:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ]
}