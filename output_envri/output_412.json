{
  "application_domain": [
    {
      "confidence": 20.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "[1] [He, J. (2016). Identity Mappings in Deep Residual Networks. In Computer Vision \u2013 ECCV 2016 (pp. 630\u2013645). Springer International Publishing.](https://link.springer.com/chapter/10.1007/978-3-319-46493-0_38)\n\n[2] [Samuel Yen-Chi Chen, Tzu-Chieh Wei, Chao Zhang, Haiwang Yu, & Shinjae Yoo. (2021). Hybrid Quantum-Classical Graph Convolutional Network.](https://arxiv.org/abs/2101.06189)\n\n[3] [P\u00e9rez-Salinas, A., Cervera-Lierta, A., Gil-Fuster, E., & Latorre, J. (2020). Data re-uploading for a universal quantum classifier. Quantum, 4, 226.](https://quantum-journal.org/papers/q-2020-02-06-226/)\n\n[4] [Samuel Yen-Chi Chen, Tzu-Chieh Wei, Chao Zhang, Haiwang Yu, & Shinjae Yoo. (2020). Quantum Convolutional Neural Networks for High Energy Physics Data Analysis.](https://arxiv.org/abs/2012.12177)\n\n[5] [LeCun Y, Cortes C. MNIST handwritten digit database 2010.](http://yann.lecun.com/exdb/mnist/)\n\n[6] [Andrews, M., Alison, J., An, S., Burkle, B., Gleyzer, S., Narain, M., Paulini, M., Poczos, B., &amp; Usai, E. (2020). End-to-end jet classification of quarks and gluons with the cms open data. Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 977, 164304.](https://www.sciencedirect.com/science/article/pii/S0168900220307002?via%3Dihub)\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ericardomuten/qcnn-hep"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Contributing and Reporting"
        ],
        "type": "Text_excerpt",
        "value": "### Contributing\nIf you want to contribute to the code (e.g., adding new features, provide another example of usage in Jupyter Notebook, research results), please let me know by sending a pull request with a comprehensive PR note on new things that you added and the reasoning. I won't be too strict on it as the main goal of this project is more towards \"research\" rather than \"code development\". So, as long as it is clear and good enough, I will merge the PR.\n\nYou can also open a [new issue](https://github.com/eraraya-ricardo/qcnn-hep/issues/new/choose) or contact me if you want to discuss things first.\n  "
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reporting",
        "parent_header": [
          "Contributing and Reporting"
        ],
        "type": "Text_excerpt",
        "value": "If you used the code and found any bugs/errors, or have any suggestions, critics, requests, etc., please let me know either by opening up a [new issue](https://github.com/ericardomuten/qcnn-hep/issues/new/choose) or by contacting me.\n\nThank you!\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-25T15:55:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-22T02:26:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Google Summer of Code 2021 Project Repository. This project aims to demonstrate quantum machine learning's potential, specifically Quantum Convolutional Neural Network (QCNN), in HEP events classification from particle image data. The code used in the research is wrapped as an open-source package to ease future research in this field."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "- **Organization**\n  - [Machine Learning for Science (ML4Sci)](https://ml4sci.org/)\n- **Student**\n  - [Eraraya Ricardo Muten](https://ericardomuten.com/)\n- **Mentors**\n  - [Prof. Sergei V. Gleyzer](http://sergeigleyzer.com/), [Dr. Emanuele Usai](https://orcid.org/0000-0001-9323-2107), and [Raphael Koh](https://www.raphaelkoh.me/)\n- **Project Details**\n  - [Project Idea](https://ml4sci.org/gsoc/2021/proposal_QMLHEP2.html)\n  - [Accepted Proposal](https://raw.githubusercontent.com/ericardomuten/qml-hep-gsoc-2021/main/Eraraya_Ricardo_Muten_GSoC_2021_Proposal_QCNN.pdf)\n  - [Official Project Page](https://summerofcode.withgoogle.com/projects/#5612096894533632)\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Abstract",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "One of the challenges in High-Energy Physics (HEP) is events classification, which is to predict whether an image of particle jets belongs to events being sought after or just background signals. Classical Convolutional Neural Network (CNN) has been proven a powerful algorithm in image classification, including jets image. As quantum computers promise many advantages over classical computing, comes a question on whether quantum machine learning (QML) can give any improvement in solving the problem. This project aims to demonstrate quantum machine learning's potential, specifically Quantum Convolutional Neural Network (QCNN), in HEP events classification from image data. The code used in the research is wrapped as an open-source package to ease future research in this field.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Package Description",
        "parent_header": [
          "How to Use"
        ],
        "type": "Text_excerpt",
        "value": "This package is a [TensorFlow Quantum](https://www.tensorflow.org/quantum) implementation of quantum convolution and classifier with Data Re-uploading[[3](#references)] ansatz. Both are wrapped as [Keras](https://keras.io/) layers that can easily be integrated into other Keras layers (classical and/or quantum), acting as building blocks for Quantum Convolutional Neural Networks (both hybrid and fully quantum). The model can be trained using Keras API.\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8199968782940024,
      "result": {
        "original_header": "Weekly Progress",
        "type": "Text_excerpt",
        "value": "- Week 1: Looking and getting used to the dataset, train a classical ResNet[[1](#references)] model as a baseline.\n- Week 2: Coding the graph-convolution preprocessing[[2](#references)] and Quantum Conv layer with data re-uploading[[3](#references)] PQC.\n- Week 3: Testing the first iteration of the QCNN model, coding the parallelized convolution, testing ResNet with 8x8 images.\n- Week 4: Tested the Kaggle platform, tested the parallelized convolution, trained QCNN with varying hyperparameters.\n- Week 5: Tested the classical CNN and Fully-connected NN, started to train the QCNN v0.1.0 with varying filter size & stride, coded the new ansatz for quantum convolution layer based on [[4](#references)].\n- Week 6: Tested the new quantum convolution ansatz[[4](#references)], try to combine ideas from data re-uploading circuit to the new ansatz, presented a short summary about the project at the MCQST Student Conference.\n- Week 7: Tested the QCNN v0.1.1 on MNIST[[5](#references)] and LArTPC[[4](#references)] dataset.\n- Week 8: Wrapped the code in the development notebooks as a Python package.\n- Week 9: Tested the QCNN v0.1.1 and classical CNN on the Quark-Gluon[[6](#references)] dataset.\n- Week 10: Cleaned up the repository, README, and the docs/tutorial notebook. \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9189315998777469,
      "result": {
        "original_header": "Photon-Electron Electromagnetic Calorimeter (ECAL) Dataset",
        "type": "Text_excerpt",
        "value": "<p align=\"middle\">\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/photon%20full.png\" title=\"Photon\" />\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/electron%20full.png\" title=\"Electron\" /> <br>\n  <a>Averages of Photon (left) and Electron (right) image samples from the dataset.</a>\n</p>\n  \nThe dataset contains images from two types of particles: photons (0) and electrons (1) captured by the ECAL detector.\n- Each pixel corresponds to a detector cell.\n- The intensity of the pixel corresponds to how much energy is measured in that cell.\n- In total, there are 498,000 samples, equally distributed between the two classes.\n- The size of the images are 32x32.\n  \nIf you are interested on using the datast for your study, contact me and I can try to connect you to the people at ML4Sci who have the dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9834055969304365,
      "result": {
        "original_header": "Liquid Argon Time Projection Chamber (LArTPC) Dataset[<a href=\"#references\">4</a>]",
        "type": "Text_excerpt",
        "value": "The dataset contains images of simulated particle activities (\u03bc+, e\u2212, p+, \u03c0+, \u03c00, \u03b3) in a LArTPC detector. This dataset is prepared by the authors for study in [[4](#references)]. \n- The images have a resolution of 480 x 600 pixels, where each pixel in the x-axis represents a single wire and each pixel in the y-axis represents a sampling time tick.\n- Colors in the images represent the sizes of the ionization energy loss along the particle trajectories when measured by LArTPC\u2019s wire planes.\n- In total, there are 100 samples for each class.\n- Each particle\u2019s momentum is set such that the mean range of the particle is about 2 meters, so the classification is not sensitive to the image size.\n- In this study, the images are scaled to 30x30, prepared by the original authors of the dataset.\n- You can check reference [[4](#references)] for more details of the dataset. \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8901569001219239,
      "result": {
        "original_header": "Quark-Gluon Dataset[<a href=\"#references\">6</a>]",
        "type": "Text_excerpt",
        "value": "The dataset contains images of simulated quark and gluon jets. The image has three channels, the first channel is the reconstructed tracks of the jet, the second channel is the images captured by the electromagnetic calorimeter (ECAL) detector, and the third channel is the images captured by the hadronic calorimeter (HCAL) detector.\n  \n- The images have a resolution of 125 x 125 pixels (for every channel).\n- Since the original size of 125 x 125 pixels is too large for quantum computing simulation, we cropped the images into certain size. For now, we limit the current size to 40 x 40 pixels.\n- In this study, we focus mostly on the tracks channel.\n- You can check reference [[6](#references)] for more details of the dataset. \nIf you are interested on using the datast for your study, contact me and I can try to connect you to the people at ML4Sci who have the dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9410604805967004,
      "result": {
        "original_header": "MNIST Dataset[<a href=\"#references\">5</a>]",
        "type": "Text_excerpt",
        "value": "The dataset contains images of grayscale (8 bit) handwritten digits, 28 x 28 pixels, has a training set of 60,000 examples, and a test set of 10,000 examples. \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.825502089348672,
      "result": {
        "original_header": "Hardware and Platform",
        "type": "Text_excerpt",
        "value": "The whole project is run on `Google Colab` with `GPU` vary between `V100, P100, or T4`. The runtime listed in the [Research](#research) section might not be too accurate as the GPU used vary between runs. The main benchmarking metric is the `Test AUC`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9717309749091243,
      "result": {
        "original_header": "Test on Quark-Gluon Dataset",
        "type": "Text_excerpt",
        "value": "> **This part is still a working progress**. A much higher specs computational device (more RAMs) is needed for training the model because this dataset is huge.<br>Early testing with small samples showed a promising results. The training accuracies and AUCs are high, indicates that the model was able to learn how to differentiate the data. Low test metrics indicates overfitting, the model failed to generalize well -> we need to train the model on larger number of samples.\n  \n> 2 classes, 850 training samples (425 per class), 150 testing samples (75 per class), 200 epochs, 128 batch size, *varying* qubits, *varying* layers, filter size = [3, 3], stride = [2, 1], followed by classical head [8, 2] with activation [relu, softmax], classical preprocessing: crop to 40x40 -> log scaling -> MinMax scaling \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8406148525343505,
      "result": {
        "original_header": "General Notes",
        "type": "Text_excerpt",
        "value": "    ```\n    def lr_schedule(epoch):\n        \"\"\"Learning Rate Schedule\n\n        Learning rate is scheduled to be reduced after 80, 120, 160, 180 epochs.\n        Called automatically every epoch as part of callbacks during training.\n\n        # Arguments\n            epoch (int): The number of epochs\n\n        # Returns\n            lr (float32): learning rate\n        \"\"\"\n        lr = 1e-3\n        if epoch > 180:\n            lr *= 0.5e-3\n        elif epoch > 160:\n            lr *= 1e-3\n        elif epoch > 120:\n            lr *= 1e-2\n        elif epoch > 80:\n            lr *= 1e-1\n        print('Learning rate: ', lr)\n        return lr\n  \n    # Both `lr_scheduler` and `lr_reducer` are used for `callbacks` argument of Keras' model training API\n    lr_scheduler = tf.keras.callbacks.LearningRateScheduler(lr_schedule)\n    lr_reducer = tf.keras.callbacks.ReduceLROnPlateau(factor=np.sqrt(0.1),\n                                   cooldown=0,\n                                   patience=5,\n                                   min_lr=0.5e-6)\n    ```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9986911935104394,
      "result": {
        "type": "Text_excerpt",
        "value": "\nA Google Summer of Code 2021 Project Repository.\nThis project aims to demonstrate quantum machine learning's potential, specifically Quantum Convolutional Neural Network (QCNN), in HEP events classification from particle image data.The code used in the research is wrapped as an open-source package to ease future research in this field.Check the  section to learn more about it. \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ericardomuten/qcnn-hep/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.2.0.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.2.0.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/Classical%20CNN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/Classical%20CNN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.1.1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.1.1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.3.0.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.3.0.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/Classical%20Fully-connected%20NN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/Classical%20Fully-connected%20NN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.1.0.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/development%20notebooks/QCNN%20v0.1.0.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/sandbox/QCNN_v1_1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/sandbox/QCNN_v1_1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/assets/qcnn_drc_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/assets/qcnn_drc_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/assets/qcnn_drc_docs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/assets/qcnn_drc_docs.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ericardomuten/qcnn-hep/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ericardomuten/qcnn-hep"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gsoc%40ml4sci.jpeg"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/photon%20full.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/electron%20full.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/LArTPC_sample.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gluon-125-10k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/quark-125-10k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gluon-40-10k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/quark-40-10k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/mnist_sample.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/qcnn-v1.1_heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/muon_electron.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/muon_proton.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/muon_pion-plus.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gluon-40-1k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/quark-40-1k.png"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "How to Use"
        ],
        "type": "Text_excerpt",
        "value": "```shell\ngit clone https://github.com/eraraya-ricardo/qcnn-hep.git\ncd qcnn-hep\npython -m pip install -r requirements.txt\npython setup.py\n```\nFor a more detail step-by-step installation, please refer to [Docs and Tutorial](#docs-and-tutorial).\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8792125752165136,
      "result": {
        "original_header": "Quark-Gluon Dataset[<a href=\"#references\">6</a>]",
        "type": "Text_excerpt",
        "value": "<p align=\"middle\">\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gluon-125-10k.png\" title=\"Gluon\" />\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/quark-125-10k.png\" title=\"Quark\" /> <br>\n  <a>Averages of Gluon (left) and Quark (right) image samples of the track channel from the subdataset of 10k samples.</a>\n</p>\n  \n<p align=\"middle\">\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/gluon-40-10k.png\" title=\"Gluon\" />\n  <img src=\"https://raw.githubusercontent.com/eraraya-ricardo/qcnn-hep/main/assets/quark-40-10k.png\" title=\"Quark\" /> <br>\n  <a>Cropped to 40 x 40.</a>\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8006644403340893,
      "result": {
        "original_header": "Test on ECAL Dataset",
        "type": "Text_excerpt",
        "value": "| Notebook Version Name  | Notes | Num. Trainable Params | Test AUC | Runtime (secs per epoch) |\n| ------------- | ------------- | :-------------: | :-------------: | :-------------: |\n| ResNet v2  | Whole samples with 15% for test samples, 200 epochs, 128 batch size, classical preprocessing: MinMax scaling -> subtract mean, optimizer: Adam(learning_rate=lr_schedule) | 295,074 | 0.80 | - |\n| QCNN v0.1.0 (data re-uploading circuit) | Whole samples with 15% for test samples, 10 epochs, 128 batch size, 1 qubits, 1 layers, filter size = [3, 3], stride = [1, 1], followed by classical head [8, 2] with activation [relu, softmax], classical preprocessing: crop to 8x8 -> standard scaling, optimizer: Adam(learning_rate=lr_schedule) | 190 | 0.730 | (about 1.5 hours/epoch) |\n| ResNet v2  | Whole samples with 15% for test samples, 200 epochs, 128 batch size, classical preprocessing: crop to 8x8 -> MinMax scaling -> subtract mean, optimizer: Adam(learning_rate=lr_schedule) | 295,074 | 0.63 (overfit, train AUC = 0.80) | - |\n| QCNN v0.2.0 (data re-uploading circuit) | Whole samples with 15% for test samples, 10 epochs, 128 batch size, 2 qubits, 2 layers, filter size = [2, 2], stride = [2, 1], followed by classical head [8, 2] with activation [relu, softmax], classical preprocessing: crop to 8x8 -> standard scaling, optimizer: Adam(learning_rate=lr_schedule) | 194 | 0.68 | - |\n| Classical CNN | Whole samples with 15% for test samples, 10 epochs, 128 batch size, filter size = [3, 3], stride = [1, 1], num. of filters = [2, 1], conv activation = [relu, relu], use_bias = [True, True], followed by classical head [8, 2] with activation [relu, softmax], classical preprocessing: crop to 8x8 -> standard scaling, optimizer: Adam(learning_rate=lr_schedule) | 193 | 0.738 | 13 |\n| Classical Fully-connected NN | Whole samples with 15% for test samples, 10 epochs, 128 batch size, num. of nodes = [3, 2], activation [relu, softmax], classical preprocessing: crop to 8x8 -> standard scaling -> flatten to 64, optimizer: Adam(learning_rate=lr_schedule) | 203 | 0.691 | 10 | \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8582451189415231,
      "result": {
        "original_header": "Test on Quark-Gluon Dataset",
        "type": "Text_excerpt",
        "value": "| Num. Qubits  | Num. Layers | Num. Trainable Params | Train AUC | Test AUC | Train Accuracy | Test Accuracy | Runtime (secs per epoch) |\n| ------------ | ----------- | :-------------------: | :-------: | :------: | :------------: | :-----------: | :----------------------: |\n| 1 | 1 | 2374 | 0.712 | 0.531 | 0.659 | 0.567 | 128 |\n| 1 | 2 | 2410 | 0.928 | 0.559 | 0.846 | 0.567 | 370 |\n| 1 | 3 | 2446 | 0.992 | 0.571 | 0.956 | 0.560 | 670 |\n| 2 | 1 | 2410 | 0.829 | 0.663 | 0.754 | 0.640 | 450 |\n   \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8199757277012513,
      "result": {
        "original_header": "Test on MNIST Dataset",
        "type": "Text_excerpt",
        "value": "| Classes | Num. Qubits  | Num. Layers | Num. Trainable Params | Train AUC | Test AUC | Train Accuracy | Test Accuracy | Runtime (secs per epoch) |\n| :-------------: | ------------- | ------------- | :-------------: | :-------------: | :-------------: | :-------------: | :-------------: | :-------------: |\n| 0 vs 1 | 1 | 1 | 350 | 0.999 | 0.999 | 0.99 | 0.99 | \u00b140 | \n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ericardomuten/qcnn-hep/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "google-summer-of-code, gsoc-2021, high-energy-physics, machine-learning, neural-networks, qml-hep, quantum-computing, quantum-convolution, quantum-machine-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Eraraya Ricardo Muten\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qcnn-hep"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ericardomuten"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 3596014,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17296,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2101.06189"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2012.12177"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Package Dependencies",
        "parent_header": [
          "How to Use"
        ],
        "type": "Text_excerpt",
        "value": "<a href=\"https://www.python.org/\" target=\"_blank\"><img alt=\"Python\" height=\"23px\" src=\"https://img.shields.io/badge/Python%203.7-%2314354C.svg?style=for-the-badge&logo=python&logoColor=white\" /></a>\n<a href=\"https://quantumai.google/cirq\" target=\"_blank\"><img alt=\"Cirq\" height=\"23px\" src=\"https://img.shields.io/badge/Cirq%200.11.0-%23fff2c8.svg?style=for-the-badge&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAMAAAADACAMAAABlApw1AAAACVBMVEUAAAD%2F%2F%2F8AAABzxoNxAAAAAnRSTlMAAHaTzTgAAAMbSURBVHja7d2BZjRJFIbhb8%2F9X%2FSywjL8f3V5TndNxykITOJ9ur4QMZL88%2FIzgN8IGMAABjCAAcRO%2FXxYnGycJwH%2Fx5UTAAD5QDgO%2BGxzAgEg3y%2FBAZjvBAdovxMcYPkucIDlOwEA0A%2BEA4Banw1nP0Dy%2FRIAAP1AeBhQOydAcADl%2ByU4wPuJ4ADK9x05gPL9Ehzg%2FURwAOQDAQCQn6RJUASA%2Fj4CASA%2FSTURegFXn37zXTlgfxa9O3LAfk1aCQ7I7h56dwQAeZJ%2BCQ6whiABALAeJjiAHr%2FvyAGU7wQH%2BHp8Rw7o%2F4GmNqAGaM%2FfIzigeT37BAXc8%2FizQ0ZAf%2F72JRCgcz1O6AdQ%2Fg7eAL4eJzDA16M7QoCvxwkG8PX4jhDg6%2FFLQICvxwkKgHwnIMDX4wQGQL4LHID5TggAeD1OSAiA%2BU4IATDfBQkAdD1OSAiA%2BU4IATDfBYkA8t%2BBfCUkBMDH74QYQPP9OOBovgPqaL8DPP%2BbATlx%2Bn8r8VbAT%2F73Axb53w9Y5L8AsOj%2FesAi%2F%2FsBi%2FwXABb97wNUvRtQAxjAAAYwgAEMYAADGMAABjCAAQxgAAMYwAAGMIABDGAAAxjAAAYwgAEM4PcC6t2AqqonAOff%2FO2As2%2B%2Fd0A7oT7OI4Dqzf84TwCq7uuvegDQQ6g%2FngcALqi%2FngcARqg6CXBCnQesCZR%2FH8AFdam%2FbgI44Vp%2BPQmoas5PPQ2o6s0%2FAKi%2B8dcZQFXX%2BI8BquLrOQuo0vXcDViH0HoEkCwB1wQF6zFAloDKNQKshwDJCnCVAPkGSD4BsCNYDwDyCbAdbb%2FIAckHwAj7r3BA8gmgHe1%2FEQdkCXDCQvfA39yNEdaf3Qhwwma%2BA6BtDV3KHbAQwI422A7oJuzkVxxwx452vA7ov4SNVwLACH5XlW5AZ9vFfAL4JcBJBHCeEAGcJyQGcEGJIHHAwUtIGHCUkF6AEyzfAS4I5APgBCF3AZwg%2BQ545BKSU4AeQk4CnJAcBti3QnIQ4JeQnAQ4IecBsqPkIMAvITkPkP86mHMAJyzyCfCeM4ABDGAAAxjAq8%2B%2F636IWYQLuCcAAAAASUVORK5CYII%3D&logoColor=black\" /><a/>\n<a href=\"https://www.tensorflow.org/\" target=\"_blank\"><img alt=\"TensorFlow\" height=\"23px\" src=\"https://img.shields.io/badge/TensorFlow%202.4.1-%23FF6F00.svg?style=for-the-badge&logo=TensorFlow&logoColor=white\" /></a>\n<a href=\"https://www.tensorflow.org/quantum\" target=\"_blank\"><img alt=\"TensorFlow Quantum\" height=\"23px\" src=\"https://img.shields.io/badge/TensorFlow--Quantum%200.5.1-%23425066.svg?style=for-the-badge&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAKgAAADNCAMAAAAbrMtvAAABMlBMVEUcR3oiSHcjSHcjSXckSXYlSXYmSHUnSXUoSXQrSXIrSnIuSnEwS3AxTG8yTG4yTG8zTG40TG40TW00TW41TW02TWw2TW03TWw5Tms8Tmk9Tmk%2FT2dAT2dAUGdBT2dBUGZBUGdCUGZDUGVDUGZDUWZEUGVFUWRFUWVGUWRKUmFKUmJMU2BTVF1WVFtYVVpbVlhbV1hiWlVsWk9tWk9vW05xW010XEt0XUt1XUt9YEaBYkSNYz2NZj2dZzWeZzShZzOhaDO7cyXCcCHDcSDDciDQcxrRdRnYdhXaeBTdehLiexDkew%2Flfg7oewzqewz6fgP6gAP%2BgwD%2FfgD%2FfwD%2FgAD%2FgQD%2FggD%2FgwD%2FhAD%2FhQD%2FhgD%2FhwD%2FiAD%2FiQD%2FigD%2F%2F%2F%2F5%2Bvr3%2Bfn09fb19vf29%2Fj%2F%2F%2F8Eoe3YAAAAZXRSTlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBQgI%2FPpD%2F74AAAR6SURBVHjaYoinFkhNjY%2BNi4sDUgBm56MAgSAIAJja%2BLfAjw63bUoUJERAVOsoj6i%2BUV6i9IzyEaVh1NcozaL8itIoyr%2BoLlEuonSIMhClPGowSmmU8ai6KFNRiqKmoxREWYmSHGU1KjPKRpS0qM0oKVH2o4RHORMVG%2BVYlLgoR6MERR2PEhAlIup0lKAoR6MCoxyLEht1Jkp4lP0oKVE2o9KibETJjLIYJTtqJUpBlNkoRVGmogqjDEepjRqLUh7lOkqLKBdRbaL8idIp6leUZlG%2BRWkY5SOqaZQbe%2FaO6zYMhGF0qSfN7H8Laa8Rxh758jXAfK2InwcqpaLQ6Dfa0IY2tKENbWhDi0H5PdR6KGIClLVQpkFZCDUVyiIos6FWQFkAZTrUIihToayDmgdlKZQ5UJZDmQC1BUoSmltcCfUbKBuhfAtlM5SvoA5AeQzlDNQzKMeg5KHMhD6XSkKthiakCShboHnqGMo2aJI6htoKTVDHUDZCM1JDKLuhCeq%2FUI5AE9RXqEPQBPUmaJSBRpSBRpSBRhlorIA2tKENbWhDG9rQhja0oQ1taEMbShkoZaDKQCkDpQxUGShloJSBUgaqDJQyUCKKQHkObWhDG9rQhka8dic0xl0GjXfdA41P3QGNTKeh%2BcpAI8pA4zooEtLj0LfD90A%2FTd8C%2FTx%2BBTQ1fwGUnPQw1LjboE%2FuOAh9eMkx6McvOldAx6j3Fx2AjkQJ6k5oQvPaQeiYknq%2BDJpgSh05D314aC%2F0T2boPDQ7cw804ou%2Fe8%2Bg%2FB4aiSZAKQNVBsoJaHwDpQyUMlBloJSBUgaqDJS3UBdB%2BS%2BUSEFtgjKGykHBJqgBFBhBhyR7oLxCgxTUjzZB%2BQElB%2FXaJqiI%2BNu8XWCpEQQBGI67r%2FvWrMZ94%2B6edKanBanI3v8KuEM1xbxC%2Fmc4H4xbFYoMaE8pBqG%2FBykupXVSyhhjrXXOee8zmUy2VC5XhiIyoCR1AqEElYLi%2BKD0n7o%2FeijS0BD17yRA%2Bec4jxFKU%2FtBUR4a%2BC4mlYBaNQYofVCJhr7LuniEUILK2Ju38vjJD2MEoUwpQaX3jy4cO7X97Ks3amhQJrV6l3LiAYC16YubL75lYyFouv3fzTvUPnwot3Tg2lNiBBCAMhfu5PUk2ITC7oWTjBGABSWlNLXrdTS0NgJ8d%2FJQ9iljAWcTWhsBLn%2B2Jh4OlKb%2BD0OxGwq7Z5YffUq0GJSW8qHYCwrR3Myp51mjxKC0IT201vLU3Tc%2BFoZiiPA%2F%2BCISGq0fPPc2Z5QAlLlw%2Fx96BQ0F2JpdffndKQEoT%2Fo%2FPNxpKETLB6588VqJQmnKv7CThpbaPXX9vTZKFIoDn6iJ%2FaEQzZ%2B49yuRhNIeKuRAAXaO7yWJEoViSmYYChuH7xujUkBFqMiHwvrR8tCPqwlBEdlMPhS2j%2B%2F91DWn1koGimwmHwob52%2Fculnp6oNfGSEoIpfJh8La7HS1S0cevrKGCWXEZtJQou2zp%2B%2B8LtE0E8qIgUwBhWj90OLtDx9NLme0DHSwqxiLfQiyQ6GK9nMAAAAASUVORK5CYII%3D&logoColor=white\" /><a/>\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:42:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docs and Tutorial",
        "parent_header": [
          "How to Use"
        ],
        "type": "Text_excerpt",
        "value": "- Docs: [![Google Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1ojCEutBoHu-L6Q3PyWSYI51MNIr3OF_k?usp=sharing) or download [here](https://github.com/eraraya-ricardo/qcnn-hep/blob/main/assets/qcnn_drc_docs.ipynb).\n- Tutorial: [![Google Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1TWQgdVzKUITMNzIUFtyzq9MfuTfkyJVe?usp=sharing) or download [here](https://github.com/eraraya-ricardo/qcnn-hep/blob/main/assets/qcnn_drc_tutorial.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/ericardomuten/qcnn-hep/main/README.md",
      "technique": "header_analysis"
    }
  ]
}