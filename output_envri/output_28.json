{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "RLDS"
        ],
        "type": "Text_excerpt",
        "value": "We greatly appreciate all the support from the\n[TF-Agents](https://github.com/tensorflow/agents) team in setting up building\nand testing for EnvLogger.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 98.47,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "RLDS"
        ],
        "type": "Text_excerpt",
        "value": "If you use RLDS, please cite the [RLDS paper](https://arxiv.org/abs/2111.02767)\nas\n\n```\n@misc{ramos2021rlds,\n      title={RLDS: an Ecosystem to Generate, Share and Use Datasets in Reinforcement Learning},\n      author={Sabela Ramos and Sertan Girgin and L\u00e9onard Hussenot and Damien Vincent and Hanna Yakubovich and Daniel Toyama and Anita Gergely and Piotr Stanczyk and Raphael Marinier and Jeremiah Harmsen and Olivier Pietquin and Nikola Momchev},\n      year={2021},\n      eprint={2111.02767},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Sabela Ramos and Sertan Girgin and L\u00e9onard Hussenot and Damien Vincent and Hanna Yakubovich and Daniel Toyama and Anita Gergely and Piotr Stanczyk and Raphael Marinier and Jeremiah Harmsen and Olivier Pietquin and Nikola Momchev",
        "format": "bibtex",
        "title": "RLDS: an Ecosystem to Generate, Share and Use Datasets in Reinforcement Learning",
        "type": "Text_excerpt",
        "value": "@misc{ramos2021rlds,\n    primaryclass = {cs.LG},\n    archiveprefix = {arXiv},\n    eprint = {2111.02767},\n    year = {2021},\n    author = {Sabela Ramos and Sertan Girgin and L\u00e9onard Hussenot and Damien Vincent and Hanna Yakubovich and Daniel Toyama and Anita Gergely and Piotr Stanczyk and Raphael Marinier and Jeremiah Harmsen and Olivier Pietquin and Nikola Momchev},\n    title = {RLDS: an Ecosystem to Generate, Share and Use Datasets in Reinforcement Learning},\n}"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/rlds"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement (CLA). You (or your employer) retain the copyright to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project. Head over to\n<https://cla.developers.google.com/> to see your current agreements on file or\nto sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code Reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google/conduct/).\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-09T06:32:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T06:38:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9171482157759427,
      "result": {
        "original_header": "RLDS",
        "type": "Text_excerpt",
        "value": "RLDS stands for Reinforcement Learning Datasets and it is an ecosystem of tools\nto store, retrieve and manipulate episodic data in the context of Sequential\nDecision Making including Reinforcement Learning (RL), Learning for\nDemonstrations, Offline RL or Imitation Learning. \nThis repository includes a library for manipulating RLDS compliant datasets. For\nother parts of the pipeline please refer to: \n*   [EnvLogger](http://github.com/deepmind/envlogger) to create synthetic\n    datasets\n*   [RLDS Creator](http://github.com/google-research/rlds-creator) to create\n    datasets where a human interacts with an environment.\n*   [TFDS](http://www.tensorflow.org/datasets/catalog/overview) for existing RL\n    datasets. \nLearn more about the RLDS ecosystem in the\n[Google AI Blog](https://ai.googleblog.com/2021/12/rlds-ecosystem-to-generate-share-and.html)\nand the [arXiv paper](https://arxiv.org/abs/2111.02767).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9017563895894922,
      "result": {
        "original_header": "QuickStart &amp; Colabs",
        "type": "Text_excerpt",
        "value": "See how to use RLDS in this\n[tutorial](https://colab.research.google.com/github/google-research/rlds/blob/main/rlds/examples/rlds_tutorial.ipynb). \nYou can find more examples, including performance best practices in the\n[examples page](docs/examples.md). Besides, the\n[transformations page](docs/transformations.md) provides an\noverview of the RLDS library.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9464902039193802,
      "result": {
        "original_header": "Available datasets",
        "type": "Text_excerpt",
        "value": "This is a non-exhaustive list of datasets that are compatible with RLDS: \n*   **[D4RL](https://www.tensorflow.org/datasets/catalog/overview#d4rl)**:\n    subset of the [D4RL suite](https://github.com/rail-berkeley/d4rl) with\n    Mujoco, Adroit and AntMaze tasks.\n*   **[RL Unplugged](https://www.tensorflow.org/datasets/catalog/overview#rl_unplugged)**:\n    subset of the\n    [RL Unplugged suite](https://github.com/deepmind/deepmind-research/tree/master/rl_unplugged)\n    that includes DMLab, Atari, Real World RL, Locomotion and Control Suite\n    datasets.\n*   **[Robosuite](https://www.tensorflow.org/datasets/catalog/robosuite_panda_pick_place_can)**:\n    three [Robosuite](https://robosuite.ai/) datasets generated with the RLDS\n    tools.\n*   **[Robomimic](https://www.tensorflow.org/datasets/catalog/overview#robomimic)**:\n    [subset of the Robomimic suite](https://arise-initiative.github.io/robomimic-web/).\n*   **[MuJoCo Locomotion](https://www.tensorflow.org/datasets/catalog/locomotion)**\n    datasets created with a SAC agent trained on the environment reward of\n    MuJoCo locomotion tasks. These datsets were generated with the RLDS tools.\n*   **Robotics**:\n    *   [MT Opt dataset](https://www.tensorflow.org/datasets/catalog/mt_opt) \nIf you want to add your dataset to this list, let us know!\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9807479637481906,
      "result": {
        "original_header": "Dataset Format",
        "type": "Text_excerpt",
        "value": "The dataset is retrieved as a `tf.data.Dataset` of Episodes where each episode\ncontains a `tf.data.Dataset` of steps. \n*   **Episode**: dictionary that contains a `tf.data.Dataset` of Steps, and\n    metadata. \n      * `episode_id`: Unique identifier of the episode within the dataset.\n        The episode ID should also be unique with high probability across\n        datasets so different datasets can be merged easily on the fly.\n      * `agent_id`: Unique identifier of the agent(s) that generated the\n        episode. In a multi-agent setting, this could be for example a tensor\n        of size Nx2 where N is the number of agents and where each pair\n        represents the agent name in the environment and the ID of the agent\n        that actually generated the episode.\n      * `environment_config`: Configuration of the environment that was used\n        to generate the episode.\n      * `experiment_id`: Identifier of an experiment when the episode was\n        generated as part of an experiment.\n      * `invalid`: Flag to signal invalid episodes, which in general\n        should be discarded at read time. Since episodes are in general\n        recorded step by step, there are a few scenarios where an episode\n        might be incomplete: e.g. machine preemption. This flag is usually\n        used in dtaasets that have just been created and not polished for\n        sharing. \n      *   `is_first`: if this is the first step of an episode that contains the\n          initial state.\n      *   `is_last`: if this is the last step of an episode, that contains the\n          last observation. When true, `action`, `reward` and `discount`, and\n          other cutom fields subsequent to the observation are considered invalid.\n    * Optional fields:\n      *   `observation`: current observation\n      *   `action`: action taken in the current observation\n      *   `reward`: return after appyling the action to the current observation\n      *   `is_terminal`: if this is a terminal step\n      *   `discount`: discount factor at this step.\n      *   extra metadata \n    If an episode ends in a step where `is_terminal = False`, it means that this\n    episode has been truncated. In this case, depending on the environment, the\n    action, reward and discount might be empty as well. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9964411110656968,
      "result": {
        "original_header": "How to create a dataset",
        "type": "Text_excerpt",
        "value": "Although you can read datasets with the RLDS format even if they were not\ncreated with our tools (for example, by adding them to [TFDS](#load-with-tfds)),\nwe recommend the use of [EnvLogger] and [RLDS Creator] as they ensure that the\ndata is stored in a lossless fashion and compatible with RLDS.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9152950570684775,
      "result": {
        "original_header": "Synthetic datasets",
        "type": "Text_excerpt",
        "value": "Besides, two callbacks can be passed to the `EnvLogger` constructor to\nstore per-step metadata and per-episode metadata. See the [EnvLogger]\ndocumentation for more details. \nNOTE: We recommend to use the TFDS Envlogger backend in order to get datasets\nthat can be read directly with TFDS. See an example in\n[this colab](https://colab.research.google.com/github/google-research/rlds/blob/main/rlds/examples/rlds_tfds_envlogger.ipynb). \n*   `o_i`: observation at step `i`\n*   `a_i`: action applied to `o_i`\n*   `r_i`: reward obtained when applying `a_i` in `o_i`\n*   `d_i`: discount for reward `r_i`\n*   `m_i`: metadata for step `i` \nData is generated as:\n```none\n    (o_0, _, _, _, m_0) \u2192 (o_1, a_0, r_0, d_0, m_1)  \u2192 (o_2, a_1, r_1, d_1, m_2) \u21e2 ...\n```\nBut loaded with RLDS as:\n```none\n    (o_0,a_0, r_0, d_0, m_0) \u2192 (o_1, a_1, r_1, d_1, m_1)  \u2192 (o_2, a_2, r_2, d_2, m_2) \u21e2 ...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8925320956482727,
      "result": {
        "original_header": "Human datasets",
        "type": "Text_excerpt",
        "value": "If you want to collect data generated by a human interacting with an\nenvironment, check the [RLDS Creator].\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8137270710003207,
      "result": {
        "original_header": "How to load a dataset",
        "type": "Text_excerpt",
        "value": "RL datasets can be loaded with [TFDS](#load-with-tfds)\nand they are retrieved\nwith the canonical [RLDS dataset format](#dataset-format).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9375401828214034,
      "result": {
        "original_header": "Load with TFDS",
        "type": "Text_excerpt",
        "value": "Note: In TFDS you can load the nested dataset as a batched sequence instead of a\n`tf.data.Dataset`. See the [FAQ](#faq) for details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9729928246863807,
      "result": {
        "original_header": "Datasets in the TFDS catalog",
        "type": "Text_excerpt",
        "value": "This is how we load the datasets in the\n[tutorial](https://colab.research.google.com/github/google-research/rlds/blob/main/rlds/examples/rlds_tutorial.ipynb). \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686769005963546,
      "result": {
        "original_header": "Datasets in your own repository",
        "type": "Text_excerpt",
        "value": "Datasets can be implemented with TFDS both inside and outside of the TFDS\nrepository. See examples\n[here](https://www.tensorflow.org/datasets/external_tfrecord?hl=en#load_dataset_with_tfds).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9877580360494954,
      "result": {
        "original_header": "How to add your dataset to TFDS",
        "type": "Text_excerpt",
        "value": "This is only necessary when your dataset is not already in TFDS format or if you\nwant to add it to the TFDS catalog. See more details in\n[this page](docs/tfds-add.md).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9495762095153171,
      "result": {
        "original_header": "Performance best practices",
        "type": "Text_excerpt",
        "value": "As RLDS exposes RL datasets in a form of Tensorflow's\n[tf.data](https://www.tensorflow.org/api_docs/python/tf/data), many Tensorflow's\n[performance hints](https://www.tensorflow.org/guide/data_performance#optimize_performance)\napply to RLDS as well. It is important to note, however, that RLDS datasets are\nvery specific and not all general speed-up methods work out of the box. Advice\non improving performance might not result in expected outcome. \nRLDS provides an optimized\n[library of transformations](docs/transformations.md), but\nto get a better understanding on how to use RLDS datasets effectively we\nrecommend going through this\n[colab](https://colab.research.google.com/github/google-research/rlds/blob/main/rlds/examples/rlds_performance.ipynb).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9858071088887679,
      "result": {
        "original_header": "Disclaimer",
        "type": "Text_excerpt",
        "value": "This is not an officially supported Google product. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/rlds/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/rlds/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_reverb_patterns.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_reverb_patterns.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/tfds_rlu_atari.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/tfds_rlu_atari.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_dataset_patterns.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_dataset_patterns.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_tfds_envlogger.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_tfds_envlogger.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_performance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_performance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_examples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_examples.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/rlds/examples/rlds_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Processing steps in random order",
        "parent_header": [
          "RLDS",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "While by default the order of episodes in RLDS datasets is randomized and there\nis no need to randomize them again when loading the dataset, some algorithms\noperate on steps/n-step transitions. There are different ways to interleave\nsteps across multiple episodes - for example:\n\n* Shuffle steps using [tf.data.Dataset.shuffle](https://www.tensorflow.org/api_docs/python/tf/data/Dataset#shuffle).\nNote that obtaining perfect shuffling this way involves specifying `buffer_size`\nwhich can accomodate entire dataset and can result in high memory usage for big datasets.\n\n* Interleave `N` copies of the dataset using [tf.data.Dataset.interleave](https://www.tensorflow.org/api_docs/python/tf/data/Dataset#interleave):\n\n```\ndef ds_loader():\n  episode_dataset = tfds.load(...)\n  step_dataset = episode_dataset.flat_map(lambda x: x[rlds.STEPS])\n  return step_dataset\n\ndataset = Dataset.range(1, N).interleave(ds_loader, cycle_length=..., block_length=...)\n```\n\nEach copy of the dataset shuffles input partitions independently, so consecutive steps\nreturned by the resulting dataset come from unrelated episodes. It is important to note,\nhowever, that this way each step will be loaded `N` times. To avoid duplicates,\nit is possible to construct each dataset using disjoint [splits](https://www.tensorflow.org/datasets/splits).\n\nSee one example of randomized access in the\n[Atari colab](https://colab.research.google.com/github/google-research/rlds/blob/main/rlds/examples/tfds_rlu_atari.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Processing random episodes in multiple readers.",
        "parent_header": [
          "RLDS",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "Sometimes, users read multiple copies of the dataset in separate processes. For\nexample, to emulate a multiple-actor single learner scenario, where the actors\nget the offline data from the same dataset. In these situations, it is important\nthat the different processes don't get the same sequence of episodes.\n\nWhen the number of readers is known, the easiest way is to use the\n[`split` API](https://www.tensorflow.org/datasets/splits#slicing_api) from TFDS\nto ensure that each of the reader takes a different set of episodes from the\ndataset. Note that if one of the reader dies, its portion of the dataset will\nnot be processed.\n\nAnother option is to ensure that the datasets are read in a non-deterministic\nway. This can be achieved by setting `shuffle_files=True` and by tuning the\n`ReadConfig` options in `tfds.load` or in `builder.as_dataset`. You can find\nmore details in the [TFDS documentation about determinism]. In this case, if a\nreader dies, the full dataset can still be processed. However, with this option,\nsome episodes may appear more than once.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Loading the steps as a batch instead of a nested dataset.",
        "parent_header": [
          "RLDS",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "If using TFDS you can load the nested dataset as a batched sequence instead of a\nnested `tf.data.Dataset`. You can do it by using `SkipDecoding`:\n\n```py\nds = tfds.load('d4rl_mujoco_halfcheetah/v0-medium', decoders={rlds.STEPS: tfds.decode.SkipDecoding()}, split='train')\n```\n\nTo decode the steps as a dataset, you can use\n`tf.data.Dataset.from_tensor_slices`.\n\n```py\n\nfor e in ds:\n print(tf.data.Dataset.from_tensor_slices(e[rlds.STEPS]))\n break\n\n```\n\nWhen using `tfds.builder_from_directories` or `tfds.builder_from_directory`, the\n`decoder` argument can be passed to `as_dataset`.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/rlds/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "google-research/rlds"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RLDS"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/run_python_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/oss_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/pip_package/build_pip_package.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/docker/build_release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/docker/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9980886937939508,
      "result": {
        "original_header": "Available datasets",
        "type": "Text_excerpt",
        "value": "If you want to add your dataset to this list, let us know!\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976365173559844,
      "result": {
        "original_header": "Dataset Format",
        "type": "Text_excerpt",
        "value": "    Note: Although some fields of the steps are optional, all the steps in the\n    same dataset are required to have the same fields.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8834840374004168,
      "result": {
        "original_header": "Load with TFDS",
        "type": "Text_excerpt",
        "value": "Note: In TFDS you can load the nested dataset as a batched sequence instead of a\n`tf.data.Dataset`. See the [FAQ](#faq) for details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9550511726432759,
      "result": {
        "original_header": "Datasets created with Envlogger and the TFDS backend",
        "type": "Text_excerpt",
        "value": "These datasets can be loaded directly with:\n```py\ntfds.builder_from_directory('path').as_dataset(split='all')\n```\nor from a list of paths:\n```py\ntfds.builder_from_directories(paths).as_dataset(split='all')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8728330697215105,
      "result": {
        "original_header": "Datasets in the TFDS catalog",
        "type": "Text_excerpt",
        "value": "These datasets can be loaded directly with:\n```py\ntfds.load('dataset_name').as_dataset()['train']\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9977018464739584,
      "result": {
        "original_header": "How to add your dataset to TFDS",
        "type": "Text_excerpt",
        "value": "This is only necessary when your dataset is not already in TFDS format or if you\nwant to add it to the TFDS catalog. See more details in\n[this page](docs/tfds-add.md).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999997073744427,
      "result": {
        "original_header": "Disclaimer",
        "type": "Text_excerpt",
        "value": "[EnvLogger]: http://github.com/deepmind/envlogger\n[RLDS Creator]: http://github.com/google-research/rlds-creator\n[dm_env]: http://github.com/deepmind/dm_env/blob/master/docs/index.md\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9219661505383092,
      "result": {
        "original_header": "Datasets in the TFDS catalog",
        "type": "Text_excerpt",
        "value": "These datasets can be loaded directly with:\n```py\ntfds.load('dataset_name').as_dataset()['train']\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/rlds/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/docs/images/rlds.png"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rlds"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "google-research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 507512,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 130422,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Starlark",
        "size": 13028,
        "type": "Programming_language",
        "value": "Starlark"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9237,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3083,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/rlds/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2104.08212"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2106.06431"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2106.00672.pdf"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2111.02767"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2110.10149.pdf"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2103.01948"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2105.12034"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:00:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 278
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reducing memory usage",
        "parent_header": [
          "RLDS",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "To improve throughput of loading datasets, by default TFDS loads multiple partitions\nof the dataset in parallel. In the case of datasets with big episodes that can result\nin high memory usage. If you run into high memory usage problems, it is worth playing\naround with `read_config` provided to [tfds.load](https://www.tensorflow.org/datasets/api_docs/python/tfds/load).\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Publications",
        "parent_header": [
          "RLDS",
          "Who uses RLDS"
        ],
        "type": "Text_excerpt",
        "value": "Below is a sample of publications using RLDS:\n\n*   [Hyperparameter Selection for Imitation Learning](https://arxiv.org/abs/2105.12034).\n    L. Hussenot et al., ICML 2021.\n*   [Continuous Control with Action Quantization from Demonstrations](https://arxiv.org/pdf/2110.10149.pdf),R.\n    R. Dadashi et al., Deep RL Workshop @ NeurIPS 2021.\n*   [What Matters for Adversarial Imitation Learning?](https://arxiv.org/pdf/2106.00672.pdf)\n    M. Orsini et al., NeurIPS 2021.\n*   [MT-Opt: Continuous Multi-Task Robotic Reinforcement Learning at Scale](https://arxiv.org/abs/2104.08212)\n    D. Kalashnikov et al.\n*   [Offline Reinforcement Learning with Pseudometric Learning](https://arxiv.org/abs/2103.01948)\n    R. Dadashi et al., ICML 2021.\n*   [Offline Reinforcement Learning as Anti-Exploration](https://arxiv.org/abs/2106.06431)\n    S. Rezaheifar et al.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/rlds/main/README.md",
      "technique": "header_analysis"
    }
  ]
}