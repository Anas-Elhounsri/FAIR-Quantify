{
  "application_domain": [
    {
      "confidence": 14.78,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/venkatFontbonne/Drowsiness"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-13T20:11:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-15T02:51:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "According to research, driver drowsiness results in over 60% of the road accidents each year. Utilizing innovation technologies to detect driver drowsiness is a fascinating challenge that would help in preventing accidents. In the past, different efforts have been reported in the writing on approaches for drowsiness detection of car driver. In the most recent decade alone, many countries have started to consider the vehicle driver security issue. Scientists have been taking a shot at the recognition of vehicle driver's laziness utilizing different systems, for example, physiological discovery and Road checking strategies. Physiological recognition strategies exploit the way that rest mood of an individual is unequivocally related with mind and heart exercises. Be that as it may, all the examination till date in this methodology need cathode contacts on the car drivers' head, face, or chest making it non-implementable in certifiable situations. Street observing (Bhatt) is one of the most generally utilized method, frameworks dependent on this methodology, incorporate Attention help by Mercedes, Fatigue Detection System by Volkswagon, Driver Alert by Ford, Driver Alert Control by Volvo. All the referenced methods screen the street and driver conduct attributes to distinguish the languor of the vehicle driver. Barely any parameters utilized incorporate whether the driver is adhering to the path rules, fitting utilization of the pointers and so forth, if there are variations in these parameters, over the resilience level then the framework infers that the driver is sleepy. This methodology is naturally imperfect as observing the street to distinguish laziness is a greater amount of a backhanded methodology and furthermore needs exactness."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9818245587934981,
      "result": {
        "original_header": "Drowsiness",
        "type": "Text_excerpt",
        "value": "According to research, driver drowsiness results in over 60% of the road accidents each year. Utilizing innovation technologies to detect driver drowsiness is a fascinating challenge that would help in preventing accidents. In the past, different efforts have been reported in the writing on approaches for drowsiness detection of car driver. In the most recent decade alone, many countries have started to consider the vehicle driver security issue. Scientists have been taking a shot at the recognition of vehicle driver's laziness utilizing different systems, for example, physiological discovery and Road checking strategies. Physiological recognition strategies exploit the way that rest mood of an individual is unequivocally related with mind and heart exercises. Be that as it may, all the examination till date in this methodology need cathode contacts on the car drivers' head, face, or chest making it non-implementable in certifiable situations. Street observing (Bhatt) is one of the most generally utilized method, frameworks dependent on this methodology, incorporate Attention help by Mercedes, Fatigue Detection System by Volkswagon, Driver Alert by Ford, Driver Alert Control by Volvo. All the referenced methods screen the street and driver conduct attributes to distinguish the languor of the vehicle driver. Barely any parameters utilized incorporate whether the driver is adhering to the path rules, fitting utilization of the pointers and so forth, if there are variations in these parameters, over the resilience level then the framework infers that the driver is sleepy. This methodology is naturally imperfect as observing the street to distinguish laziness is a greater amount of a backhanded methodology and furthermore needs exactness.\n \n"
      },
      "source": "https://raw.githubusercontent.com/venkatFontbonne/Drowsiness/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/venkatFontbonne/Drowsiness/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/venkatFontbonne/Drowsiness/master/Drowsiness.ipynb"
      },
      "source": "https://raw.githubusercontent.com/venkatFontbonne/Drowsiness/master/Drowsiness.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/venkatFontbonne/Drowsiness/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "venkatFontbonne/Drowsiness"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Drowsiness"
      },
      "source": "https://raw.githubusercontent.com/venkatFontbonne/Drowsiness/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/venkatFontbonne/Drowsiness/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Drowsiness"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "venkatFontbonne"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 10217,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7698,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/venkatFontbonne/Drowsiness/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:06:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}