{
  "application_domain": [
    {
      "confidence": 36.18,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/graphcore/ogb-lsc-pcqm4mv2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-16T09:28:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T03:41:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The OGB-LSC is the Large Scale Competition by Open Graph Benchmark to help accelerate research into machine learning on graph structured data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9496866998322501,
      "result": {
        "original_header": "GPS++: An Optimised Hybrid GNN/Transformer for Molecular Property Prediction",
        "type": "Text_excerpt",
        "value": "An optimised hybrid GNN/Transformer model for molecular property prediction using Graphcore IPUs, trained on the [PCQM4Mv2](https://arxiv.org/abs/2103.09430) dataset. The flexible hybrid model closely follows the [General, Powerful, Scalable (GPS) framework](https://arxiv.org/abs/2205.12454) and combines the benefits of both message passing and attention layers for graph-structured input data training.\n \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9092759542111354,
      "result": {
        "original_header": "Our submission to OGB-LSC PCQM4Mv2",
        "type": "Text_excerpt",
        "value": "For the OGB-LSC PCQM4Mv2 challenge submission we trained an ensemble of the GPS++ (44M) model with six adjustments to the hyperparameters to form seven different model configurations. \nAdditionally, we trained the models on the training and validation data. The directory pcqm4mv2-cross_val_splits contains such split options and they can be used by modifying the flag `--split_mode`. \nIn total 112 models were ensembled and achieved an MAE of 0.0719 on the test-challenge set.\n \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9790984766395949,
      "result": {
        "original_header": "Logging and visualisation in Weights &amp; Biases",
        "type": "Text_excerpt",
        "value": "This project supports Weights & Biases, a platform to keep track of machine learning experiments. To enable this, use the `--wandb` flag. \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8375463923130242,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "This application is licensed under the MIT license, see the LICENSE file at the base of the repository. \nThis directory includes derived work, these are documented in the NOTICE file at the base of the repository. \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/graphcore/ogb-lsc-pcqm4mv2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/notebook_training.ipynb"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/notebook_training.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/notebook_inference.ipynb"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/notebook_inference.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/graphcore/ogb-lsc-pcqm4mv2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "graphcore/ogb-lsc-pcqm4mv2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GPS++: An Optimised Hybrid GNN/Transformer for Molecular Property Prediction"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://assets.paperspace.io/img/gradient-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "GPS++: An Optimised Hybrid GNN/Transformer for Molecular Property Prediction",
          "Running the model <a href=\"https://ipu.dev/3CGjC5E\"><img alt=\"Gradient\" src=\"https://assets.paperspace.io/img/gradient-badge.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "This model is optimised for Graphcore IPUs and requires the Graphcore's Poplar SDK to run. You can access IPUs through [Paperspace](https://www.paperspace.com/graphcore), using the button above, or [G-Core](https://gcore.com/partners/graphcore).\n\nCreate a virtual environment and install the Poplar SDK, including the TensorFlow 2 wheels from inside the SDK directory:\n\n```shell\nvirtualenv --python python3.6 .gps_venv\nsource .gps_venv/bin/activate\nsource <path to the Graphcore SDK>/enable\npip install <path to the TensorFlow-2 wheel from the Poplar SDK>\npip install --force-reinstall --no-deps <path to the Keras wheel from the Poplar SDK>\npip install <path to the ipu_tensorflow_addons wheel for TensorFlow 2 from the Poplar SDK>\npip install -r requirements.txt\n```\n\nOur implementation includes a couple of things that need to be compiled prior to use, including an IPU optimised grouped gather-scatter custom op.\n\n```shell\nmake -C data_utils/feature_generation\nmake -C static_ops\n```\n\nThis project uses Weights & Biases to track experiments. If you don't have a Weights & Biases account, set the wandb mode to `offline`.\n\n```shell\nwandb offline\n```\n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9912167000295244,
      "result": {
        "original_header": "Logging and visualisation in Weights &amp; Biases",
        "type": "Text_excerpt",
        "value": "The user will need to manually log in (see the quickstart guide [here](https://docs.wandb.ai/quickstart)) and configure these additional arguments: \nFor more information please see https://www.wandb.com/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8913981757202355,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "| Model config | Parameters | No. layers | Train MAE | Valid MAE | Config file name | Checkpoint |\n| :--- | :---: | :---: | :---: | :---: | :---: | :---: |\n| GPS++ 11M | 11M | 4 | ~0.075 | ~0.090 | GPS_PCQ_4gps_11M.yaml | [11M ckpt](https://graphcore-ogblsc-pcqm4mv2.s3.us-west-1.amazonaws.com/GPS_PCQ_4gps_11M.tar.gz) |\n| GPS++ 22M | 22M | 8 | ~0.056 | ~0.082 | GPS_PCQ_8gps_22M.yaml | [22M ckpt](https://graphcore-ogblsc-pcqm4mv2.s3.us-west-1.amazonaws.com/GPS_PCQ_8gps_22M.tar.gz) |\n| GPS++ | 44M |  16 | ~0.044 | ~0.077 | GPS_PCQ_16gps_44M.yaml | [gps++ ckpt1](https://graphcore-ogblsc-pcqm4mv2.s3.us-west-1.amazonaws.com/GPS_PCQ_16gps_44M.tar.gz) |\n| GPS++ trained on valid split | 44M |  16 | ~0.044 | NA | GPS_PCQ_16gps_44M.yaml | [gps++ ckpt2](https://graphcore-ogblsc-pcqm4mv2.s3.us-west-1.amazonaws.com/GPS_PCQ_16gps_44M_inc_valid.tar.gz) |\n \n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/graphcore/ogb-lsc-pcqm4mv2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Graphcore Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ogb-lsc-pcqm4mv2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "graphcore"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 641415,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 415390,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 7307,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 3811,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1183,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2205.12454"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2103.09430"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset",
        "parent_header": [
          "GPS++: An Optimised Hybrid GNN/Transformer for Molecular Property Prediction",
          "Running the model <a href=\"https://ipu.dev/3CGjC5E\"><img alt=\"Gradient\" src=\"https://assets.paperspace.io/img/gradient-badge.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "The [PCQM4Mv2](https://arxiv.org/abs/2103.09430) dataset is a recently published dataset for the OGB Large Scale Challenge built to aide the development of state-of-the-art machine learning models for molecular property prediction. The task is for the quantum chemistry task of predicting the [HOMO-LUMO energy gap](https://en.wikipedia.org/wiki/HOMO_and_LUMO) of a molecule.\n\nThe dataset consists of 3.7 million molecules defined by their SMILES strings which can simply be represented as a graph with nodes and edges.\n\nThe dataset includes four splits: train, valid, test-challenge and test-dev. The train and valid splits have true label and can be used for model development. The test-challenge split is used for the OGB-LSC PCQM4Mv2 challenge submission and test-dev for the [leaderboard](https://ogb.stanford.edu/docs/lsc/leaderboards/#pcqm4mv2) submission.\n\nAt the start of training, the dataset will be downloaded and the additional features will be preprocessed automatically, including the 3D molecular features that are provided with the dataset.\n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Training and inference on OGB-LSC PCQM4Mv2",
        "parent_header": [
          "GPS++: An Optimised Hybrid GNN/Transformer for Molecular Property Prediction",
          "Running the model <a href=\"https://ipu.dev/3CGjC5E\"><img alt=\"Gradient\" src=\"https://assets.paperspace.io/img/gradient-badge.svg\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "In order to begin training, select the configuration you wish to run from those in the `configs` directory.\n\nThen run with the following command:\n\n```shell\npython3 run_training.py --config configs/<CONFIG_FILE>\n```\n\nAfter training has finished inference will follow and show the validation results on the validation dataset.\n\nTo run inference separately and on other dataset splits, use the following command, changing the `--inference_fold` flag:\n\n```shell\npython3 inference.py --config configs/<CONFIG_FILE> --checkpoint_path <CKPT_PATH> --inference_fold <DATA_SPLIT_NAME>\n```\n\nWe also provide [training](notebook_training.ipynb) and [inference](notebook_inference.ipynb) notebooks.\n"
      },
      "source": "https://raw.githubusercontent.com/graphcore/ogb-lsc-pcqm4mv2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:40:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 66
      },
      "technique": "GitHub_API"
    }
  ]
}