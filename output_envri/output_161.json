{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-02T01:17:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-22T00:49:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Project from Summer 2021 Research Internship @ Stanford"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary:",
        "parent_header": [
          "File Information"
        ],
        "type": "Text_excerpt",
        "value": "- This work was done during Summer 2021 as a part of the Leadership Alliance Summer Research-Early Identification Program. All of the research was conducted at the Stanford University Department of Chemistry\n- Project is a continuation of https://pubs.rsc.org/en/content/articlelanding/2021/sc/d1sc01159f (DOI: 10.1039/d1sc01159f)\n- Background information & project summary can be found on the \"Final Presentation.pdf\" file in this repo (https://github.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/blob/main/Final%20Presentation.pdf)\n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.993265069200433,
      "result": {
        "original_header": "Calculations and Plotting - No Edge Cases.ipynb:",
        "type": "Text_excerpt",
        "value": "- This file does the mismatch calculations and plotting (only plots the optimal arrangement right now) for a given set of ions\n- There is an example with all of the Ag-Bi-Br combinations and their minimized total mismatches. If you want to do the same thing with other sets of ions, you can generate a csv from `GenerateAllPossibleIonSets.ipynb` and use the code I have in the last two cells of this file and just change out the variable names \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924719089519709,
      "result": {
        "original_header": "GenerateAllPossibleIonSets.ipynb:",
        "type": "Text_excerpt",
        "value": "- This will calculate all possible sets of 1+/2+/3+ or 2+/4+/vacancy ions\n   - You can control if you want specific ions to be included in the sets (see comments and examples in code for this)\n- Can specify if you want redox considerations or note (see comments and examples in code for this)\n- Have the option to output the possible combinations/ion sets to a csv file (see comments and examples in code for this)\n    - Then, you can open this csv in  `Calculations and Plotting - No Edge Cases.ipynb` and run the code for each row in the csv file (see comments and examples in code for this)\n \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8995951347723918,
      "result": {
        "original_header": "experimental_bond_lengths.csv, updatedRedox.csv, and allCharges.csv:",
        "type": "Text_excerpt",
        "value": "- Contain constants that are used throughout the Python files\n- If you update the csvs and re-run the code, the code will automatically update with the new data\n- `allCharges.csv` is probably missing some  ions because I only used the ones listed in the periodic table figure\n- `updatedRedox.csv` seems to be missing a lot of the 4+ ions\n \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9691001345151832,
      "result": {
        "original_header": "AgBiCombinations.csv:",
        "type": "Text_excerpt",
        "value": "- Contains all the possible Ag-Bi-2+ combinations (without redox considerations)\n- I included this file because it is used for one of the examples in `Calculations and Plotting - No Edge Cases.ipynb`\n \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.943609055524382,
      "result": {
        "original_header": "cr2+Combos.csv:",
        "type": "Text_excerpt",
        "value": "- A list of all possible combinations with Cr2+  (without redox considerations)\n \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/Generate%20All%20Combos%20with%20Functions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/Generate%20All%20Combos%20with%20Functions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/Calculations%20and%20Plotting%20-%20No%20Edge%20Cases.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/Calculations%20and%20Plotting%20-%20No%20Edge%20Cases.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "File Information"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9995264666682935,
      "result": {
        "original_header": "GenerateAllPossibleIonSets.ipynb:",
        "type": "Text_excerpt",
        "value": "- This will calculate all possible sets of 1+/2+/3+ or 2+/4+/vacancy ions\n   - You can control if you want specific ions to be included in the sets (see comments and examples in code for this)\n- Can specify if you want redox considerations or note (see comments and examples in code for this)\n- Have the option to output the possible combinations/ion sets to a csv file (see comments and examples in code for this)\n    - Then, you can open this csv in  `Calculations and Plotting - No Edge Cases.ipynb` and run the code for each row in the csv file (see comments and examples in code for this)\n \n"
      },
      "source": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "computational-chemistry, materials-chemistry, materials-science"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Calculating-Optimal-Perovskite-Crystal-Structures"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tk-randhawa"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 331076,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tk-randhawa/Calculating-Optimal-Perovskite-Crystal-Structures/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:31:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}