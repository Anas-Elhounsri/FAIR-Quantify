{
  "application_domain": [
    {
      "confidence": 89.78,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CamHD-Analysis/CamHD_object_identification"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-22T23:20:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-27T06:00:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Object identification applications developed from Computer Vision research on CamHD video data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9707172954486745,
      "result": {
        "original_header": "CamHD_object_identification",
        "type": "Text_excerpt",
        "value": "Identify objects of interest near and on the hydrothermal vent - Mushroom in the Axial Seamount volcano. \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8472523006361906,
      "result": {
        "original_header": "Animals on Hydrothermal vent. (Segmentation and Classification)",
        "type": "Text_excerpt",
        "value": "- Amphipod - Scaleworm (Currently, only this has been implemented)\n- Starfish\n- Crab\n \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9224085126679802,
      "result": {
        "original_header": "Data Directory",
        "type": "Text_excerpt",
        "value": "This directory contains large image files hence not committed to GitHub currently.\nOnce the data is ready, it would be hosted on a remote drive and link will be shared here. <br/><br/> \n_Note: The frames are extracted from the videos at zoom Z1 (scenes: d5A_p1_z1, d5A_p5_z1, d5A_p6_z1, d5A_p0_z1, d5A_p7_z1, d5A_p8_z1).\nEach frame is 1920x1080 pixels. The coordinates in the patch names are with respect these dimensions._\n \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.956755132681704,
      "result": {
        "original_header": "File Format Specification",
        "type": "Text_excerpt",
        "value": "_patch name format_: <src_frame_name_<object_type>_X_Y.png\n(Where (X, Y) is the centroid of the patch, and the patch size is defined for each object type) <br/><br/> \n_sample src_frame_name (VideoName_Frame)_: \"CAMHDA301-20180711T001500_1274.png\" (this is a frame retrieved from LazyCache) <br/><br/>\n_file extension_:* \"png\" <br/><br/> \n- Object Types:\n    - amphipod (patch size: 256x256) (_NOTE: These are identified as 'scaleworms', but referred as amphipods in this project._)\n    - star (patch size: 256x256)\n \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9214086349091364,
      "result": {
        "original_header": "Directory Structure:",
        "type": "Text_excerpt",
        "value": "- raw (Downloaded src_frames from LazyCache with the above mentioned src_frame_name format) <br/><br/>\n- annotations (Json files containing the manually segmented annotations using 'labelme' on the raw frames) <br/><br/>\n- amphipod _(Similar structure for labels: amphipod, star)_\n    - amphipod_segmentation (Separate train and validation (val) directories for each Set of labeled data.)\n        - set_1_train\n            - patches\n            - masks\n            - pred_masks _(for verification after training)_\n        - set_1_val\n            - patches\n            - masks\n            - pred_masks _(for verification after training)_ \n    - testbed (randomly sampled frames from several videos across days)\n        - testbed_src_frame_names (each frame inside a directory corresponding to its scene_tag)\n        - analysis_output (in the same directory as the frame)\n            - raw_stitched_mask\n            - postprocessed_mask\n            - marked_frame (src frame on which the predicted bounding boxes are drawn)\n            - report.json\n        - analysis_report (consolidation of report.json files from each of the test frame images.)\n        - mask_dir: a directory containing the patch-level masks for each of the detected objects.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CamHD-Analysis/CamHD_object_identification/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/presentations/report_util.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/presentations/report_util.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/code/test_analysis_pipeline.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/code/test_analysis_pipeline.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CamHD-Analysis/CamHD_object_identification/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CamHD-Analysis/CamHD_object_identification"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CamHD_object_identification"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8099605542782373,
      "result": {
        "original_header": "Tools",
        "type": "Text_excerpt",
        "value": "- Scripts: Scripts to run the processes and misc tools.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8501108784990358,
      "result": {
        "original_header": "Files",
        "type": "Text_excerpt",
        "value": "- Data\n    - Raw\n    - Annotated\n        - Segmentation masks (images)\n        - Classification labels (csv) \n- Trained Model (TF) files \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8163960480949363,
      "result": {
        "original_header": "Directory Structure:",
        "type": "Text_excerpt",
        "value": "- raw (Downloaded src_frames from LazyCache with the above mentioned src_frame_name format) <br/><br/>\n- annotations (Json files containing the manually segmented annotations using 'labelme' on the raw frames) <br/><br/>\n- amphipod _(Similar structure for labels: amphipod, star)_\n    - amphipod_segmentation (Separate train and validation (val) directories for each Set of labeled data.)\n        - set_1_train\n            - patches\n            - masks\n            - pred_masks _(for verification after training)_\n        - set_1_val\n            - patches\n            - masks\n            - pred_masks _(for verification after training)_ \n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CamHD-Analysis/CamHD_object_identification/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CamHD_object_identification"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CamHD-Analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1841563,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 163694,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 124406,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:58:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Frame level report format (frame_report):",
        "parent_header": [
          "CamHD_object_identification",
          "Data Directory",
          "Report format (report.json):"
        ],
        "type": "Text_excerpt",
        "value": "```json\n{\n    \"frame\": \"CAMHDA301-20180711T001500_1274.png\",\n    \"scene_tag\": \"d5A_p1_z1\",\n    \"frame_resolution\": \"[1920, 1080]\",\n    \"counts\": {\n        \"amphipod\": 4,\n        \"star\": 2\n    },\n    \"detected_object_info\": {\n        \"amphipod\": {\n            \"(<X_wrt_frame>, <Y_wrt_frame>)\": {\"area\": \"<num_pixels>\", \"...\"},\n            \"(324, 1452)\": {\"size\": 65},\n            \"<...>\": \"<>\"\n        },\n        \"star\": {\n            \"(<X_wrt_frame>, <Y_wrt_frame>)\": {\"area\": \"<num_pixels>\", \"...\"},\n            \"<...>\": \"<>\"\n        }\n    }\n}\n```"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Video level report format (video_report) from a regions file of a video:",
        "parent_header": [
          "CamHD_object_identification",
          "Data Directory",
          "Report format (report.json):"
        ],
        "type": "Text_excerpt",
        "value": "```json\n{\n    \"video\": \"CAMHDA301-20180711T001500\",\n    \"deployment\": \"d5A\",\n    \"date\": \"20180711\",\n    \"time\": \"001500\",\n    \"frame_reports\": [\n        \"<frame_report_1>\",\n        \"<frame_report_2>\",\n        \"<...>\"\n    ]\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CamHD-Analysis/CamHD_object_identification/master/README.md",
      "technique": "header_analysis"
    }
  ]
}