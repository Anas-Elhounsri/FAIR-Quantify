{
  "application_domain": [
    {
      "confidence": 19.59,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8602314742172977,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Explanatory Interactive Concept Learning"
        ],
        "type": "Text_excerpt",
        "value": "If you find this code useful in your research, please consider citing:\n\n> @article{stammer2021,\n  author    = {Wolfgang Stammer and\n               Marius Memmel and\n               Patrick Schramowski and\n               Kristian Kersting},\n  title     = {Interactive Disentanglement: Learning Concepts by Interacting with\n               their Prototype Representations},\n  journal   = {CoRR},\n  year      = {2021},\n}\n\n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ml-research/XIConceptLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-03T10:05:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-14T09:28:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Explainable Interactive Concept Learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9444377612209472,
      "result": {
        "original_header": "Explanatory Interactive Concept Learning",
        "type": "Text_excerpt",
        "value": "This is the official repository of the article: [Interactive Disentanglement: Learning Concepts by Interacting with \ntheir Prototype Representations](https://arxiv.org/pdf/2112.02290.pdf) by Wolfgang Stammer, Marius Memmel, \nPatrick Schramowski, and Kristian Kersting, published at CVPR 2022. \nThis repository contains all source code required to reproduce the main experiments of the paper. \nIn this work, we show the advantages of prototype representations for understanding and revising the latent space of \nneural concept learners. For this purpose, we introduce interactive Concept Swapping Networks (iCSNs), a novel \nframework for learning concept-grounded representations via weak super-vision and implicit prototype representations. \niCSNs learn to bind conceptual information to specific prototype slots by swapping the latent representations of paired \nimages. This semantically grounded and discrete latent space facilitates human understanding and human-machine \ninteraction. We support this claim by conducting experiments on our novel data set \u201cElementary Concept Reasoning\u201d \n(ECR), focusing on visual concepts shared by geometric objects. \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9582796198301605,
      "result": {
        "original_header": "Elementary Concept Reasoning (ECR) Dataset",
        "type": "Text_excerpt",
        "value": "Please copy or link the downloaded data to ```Data/``` \n```ECR_Gen/``` contains the scripts for generating the different versions of the dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9401705597639222,
      "result": {
        "original_header": "iCSN experiments",
        "type": "Text_excerpt",
        "value": "We have moved a minimal example of the iCSN framework into the directory ```icsn/``` which shows how to train an \n[introvae](https://github.com/hhb072/IntroVAE)-based autoencoder within the framework. This code also shows how to \nhandle unsupervised pretraining and a more sophisticated temperature scheduling than used in the original paper. \nThe relevant source code for the iCSN experiments of the paper can be found in the ```experiments``` directory under \nBASH3*, with BASH4* and BASH5* containing \nthe main iscn training procedure and calls. This directory further contains scripts for interacting with the latent \nspace (BASH6*) and experiments on novel concepts \n(BASH7*).\n```experiments/BaseVAEs/``` contains the scripts for the baseline models. It contains an old version of the \n[disent repository](https://github.com/nmichlo/disent).\n \nFinally, ```experiments/analysis_scripts/``` contains jupyter notebooks for the linear probing analysis as well as the novel shape \nexperiments. \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ml-research/XIConceptLearning/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr_newshape.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr_newshape.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr_spot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/ecr_gen/gen_ecr_spot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/icsn/models/torch_truncnorm/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/icsn/models/torch_truncnorm/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/models/torch_truncnorm/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/models/torch_truncnorm/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_linear_probing_code_variance/linear_probing_code_variance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_linear_probing_code_variance/linear_probing_code_variance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/linear_probing_code_variance_new_shape.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/linear_probing_code_variance_new_shape.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/notebook_new_shape.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/notebook_new_shape.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/linear_probing_code_variance_new_category.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/analysis_scripts/scripts_novel_shape/linear_probing_code_variance_new_category.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ml-research/XIConceptLearning/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ml-research/XIConceptLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Explanatory Interactive Concept Learning"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/icsn/scripts/run_icsn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/icsn/scripts/run_unsup_introae.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/icsn/scripts/run_icsn_from_pretrained.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/BaseVAEs/scripts/betavae.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/BaseVAEs/scripts/adavae.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/BaseVAEs/scripts/adacatvae.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/BaseVAEs/scripts/adavae_orig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/scripts/run_icsn_spot.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/scripts/run_icsn_novelshape.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/scripts/run_icsn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/scripts/run_icsn_rr.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/scripts/run_icsn_nospot.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/./figures/icsn.png"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9131929498351875,
      "result": {
        "original_header": "Elementary Concept Reasoning (ECR) Dataset",
        "type": "Text_excerpt",
        "value": "The novel ECR dataset can be downloaded from [here](https://tudatalib.ulb.tu-darmstadt.de/handle/tudatalib/3426) or via:\n```wget https://tudatalib.ulb.tu-darmstadt.de/bitstream/handle/tudatalib/3426/ECR.zip```\n \n```unzip ECR.zip```  \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8877941026207893,
      "result": {
        "original_header": "iCSN experiments",
        "type": "Text_excerpt",
        "value": "To run any of the scripts call them as ```icsn/scripts/run_icsn.sh 0 1``` with 0 indicating the GPU ID and 1 the random \nseed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8980140188547453,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "We have attached a Dockerfile to make reproduction easier. We further recommend to build your own docker-compose file\nbased on the DockerFile. To run without a docker-compose file: \n1. ```cd docker/``` \n2. ```docker build -t proto-learn -f Dockerfile .``` \n3. ```docker run -it -v /pathtorepo:/workspace/repositories/XIConceptLearning --name proto-learn --entrypoint='/bin/bash' --runtime nvidia proto-learn```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8539499897967665,
      "result": {
        "original_header": "Elementary Concept Reasoning (ECR) Dataset",
        "type": "Text_excerpt",
        "value": "```unzip ECR.zip```  \n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ml-research/XIConceptLearning/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, Anton Obukhov\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/experiments/ProtoLearning/models/torch_truncnorm/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XIConceptLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ml-research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1081022,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 596435,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5769,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 379,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2112.02290.pdf"
      },
      "source": "https://raw.githubusercontent.com/ml-research/XIConceptLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:53:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ]
}