{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "[![DOI](https://zenodo.org/badge/265649968.svg)](https://zenodo.org/badge/latestdoi/265649968)\n\n\nIf you use this code, please cite our preprint:\n\nNolet C., Lal A., et al., (2022). [Accelerating single-cell genomic analysis with GPUs](https://www.biorxiv.org/content/10.1101/2022.05.26.493607v1). bioRxiv.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-20T18:14:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T18:07:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Examples of single-cell genomic analysis accelerated with RAPIDS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9928645323129127,
      "result": {
        "original_header": "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
        "type": "Text_excerpt",
        "value": "This repository contains example notebooks demonstrating how to use [RAPIDS](https://rapids.ai) for GPU-accelerated analysis of single-cell sequencing data. \nRAPIDS is a suite of open-source Python libraries that can speed up data science workflows using GPU acceleration.Starting from a single-cell count matrix, RAPIDS libraries can be used to perform data processing, dimensionality reduction, clustering, visualization, and comparison of cell clusters. \nSeveral of our examples are inspired by the [Scanpy tutorials](https://scanpy.readthedocs.io/en/stable/tutorials.html) and based upon the [AnnData](https://anndata.readthedocs.io/en/latest/index.html) format. Currently, we provide examples for scRNA-seq and scATAC-seq, and we have scaled up to 1 million cells. We also show how to create GPU-powered interactive, in-browser visualizations to explore single-cell datasets. \nDataset sizes for single-cell genomics studies are increasing, presently reaching millions of cells. With RAPIDS, it becomes easy to analyze large datasets interactively and in real time, enabling faster scientific discoveries.\n \n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9060976749891214,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "\nUnified Virtual Memory (UVM) can be used to [oversubscribe](https://developer.nvidia.com/blog/beyond-gpu-memory-limits-unified-memory-pascal/) your GPU memory so that chunks of data will be automatically offloaded to main memory when necessary. This is a great way to explore data without having to worry about out of memory errors, but it does degrade performance in proportion to the amount of oversubscription. UVM is enabled by default in these examples and can be enabled/disabled in any RAPIDS workflow with the following:\n```python\nimport cupy as cp\nimport rmm\nrmm.reinitialize(managed_memory=True)\ncp.cuda.set_allocator(rmm.rmm_cupy_allocator)\n``` \nRAPIDS provides a [GPU Dashboard](https://medium.com/rapids-ai/gpu-dashboards-in-jupyter-lab-757b17aae1d5), which contains useful tools to monitor GPU hardware right in Jupyter. \n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_gpu_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_gpu_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_gpu_analysis-visualization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_gpu_analysis-visualization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/dsci_bmmc_60k_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/dsci_bmmc_60k_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/dsci_bmmc_60k_cpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/dsci_bmmc_60k_cpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_cpu_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/hlca_lung_cpu_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/csv_to_h5ad.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/csv_to_h5ad.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/5k_pbmc_coverage_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/5k_pbmc_coverage_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_gpu_analysis_multigpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_gpu_analysis_multigpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_cpu_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_cpu_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_gpu_analysis_uvm.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/notebooks/1M_brain_gpu_analysis_uvm.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 68
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NVIDIA-Genomics-Research/rapids-single-cell-examples"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/265649968"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-parabricks/rapids-single-cell-examples/master/images/70k_lung.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-parabricks/rapids-single-cell-examples/master/images/1M_brain.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/images/viz3-2.gif"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-parabricks/rapids-single-cell-examples/master/images/60k_bmmc_dsciATAC.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/avantikalal/rapids-single-cell-examples/rilango/mem-fix/images/atacworks_notebook_img.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker container",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A container with all dependencies, notebooks and source code is available at https://hub.docker.com/r/claraparabricks/single-cell-examples_rapids_cuda11.0.\n\nPlease execute the following commands to start the notebook and follow the URL in the log to open Jupyter web application.\n\n```bash\ndocker pull claraparabricks/single-cell-examples_rapids_cuda11.0\n\ndocker run --gpus all --rm -v /mnt/data:/data claraparabricks/single-cell-examples_rapids_cuda11.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "conda",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "All dependencies for these examples can be installed with conda.\n\n```bash\nconda env create --name rapidgenomics -f conda/rapidgenomics_cuda11.5.yml\nconda activate rapidgenomics\npython -m ipykernel install --user --display-name \"Python (rapidgenomics)\"\n```\n\nAfter installing the necessary dependencies, you can just run `jupyter lab`. There are are a few different conda environment files which correspond to different notebooks. In addition to the one listed above, there is one for the CPU notebooks, one for the real-time visualization notebook, and one for the AtacSeq notebook.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rapids-single-cell-examples"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NVIDIA-Genomics-Research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 11244323,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 80774,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3337,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1195,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scanpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://anndata.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjnolet",
          "type": "User"
        },
        "date_created": "2023-01-24T18:19:35Z",
        "date_published": "2023-01-24T18:22:26Z",
        "description": "Updating notebooks to use RAPIDS version 22.12. Broke `atacworks` into a separate conda file since scikit-learn, numpy, and scipy dependencies have changed since version 22.08 of RAPIDS. ",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2022.12.0",
        "name": "v2022.12.0",
        "release_id": 90080675,
        "tag": "v2022.12.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2022.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/90080675",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/90080675",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2022.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjnolet",
          "type": "User"
        },
        "date_created": "2022-12-19T16:20:18Z",
        "date_published": "2023-01-12T19:28:59Z",
        "description": "This release updates the notebooks and conda environments to work with RAPIDS version 2022.08.\r\n\r\n",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2022.08.0",
        "name": "v2022.08.0",
        "release_id": 88773868,
        "tag": "v2022.08.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2022.08.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/88773868",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/88773868",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2022.08.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjnolet",
          "type": "User"
        },
        "date_created": "2022-05-23T21:14:31Z",
        "date_published": "2023-01-12T21:01:12Z",
        "description": "This release updates the notebooks and conda environments to work with RAPIDS version 2022.02.\r\n\r\nReverted back to single GPU for clustering and visualization steps in 1M cells multi-GPU notebook",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2022.02.0",
        "name": "v2022.02.0",
        "release_id": 88783014,
        "tag": "v2022.02.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2022.02.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/88783014",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/88783014",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2022.02.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjnolet",
          "type": "User"
        },
        "date_created": "2022-01-29T05:20:32Z",
        "date_published": "2022-01-29T23:52:55Z",
        "description": "This release updates the notebooks and conda environments to work with RAPIDS version 2021.12.\r\n\r\n1. The 70k lung cell and 1.3M neuron example notebooks no longer need to batch the PCA. \r\n2. 1.3M neuron multi-gpu example notebook now performs umap inference, kmeans, and PCA across multiple gpus. \r\n3. 1.3M neuron notebooks now contain differential gene expression analysis. ",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2021.12.0",
        "name": "v2021.12.0",
        "release_id": 58267701,
        "tag": "v2021.12.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2021.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/58267701",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/58267701",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2021.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rilango",
          "type": "User"
        },
        "date_created": "2021-08-20T19:16:48Z",
        "date_published": "2021-08-25T16:24:27Z",
        "description": "Changes in this release includes:\r\n- Upgrade to Rapids 21.06\r\n- Introduce batch processing in 'Single-cell RNA-seq of 1 Million Mouse Brain Cells' to enable processing 1.3 million cells.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2021.06.0",
        "name": "v2021.06.0",
        "release_id": 48201339,
        "tag": "v2021.06.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2021.06.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/48201339",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/48201339",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2021.06.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "avantikalal",
          "type": "User"
        },
        "date_created": "2021-03-25T22:49:56Z",
        "date_published": "2021-03-25T23:04:49Z",
        "description": "This release includes the following five example notebooks, covering single-cell RNA-seq and single-cell ATAC-seq analysis with RAPIDS.\r\n\r\nExample 1: Single-cell RNA-seq of 70,000 Human Lung Cells\r\nExample 2: Single-cell RNA-seq of 1 Million Mouse Brain Cells\r\nExample 3: GPU-based Interactive Visualization of 70,000 Human Lung Cells\r\nExample 4: Droplet Single-cell ATAC-seq of 60K Bone Marrow Cells\r\nExample 5: Visualizing Chromatin Accessibility in 5,000 PBMCs with RAPIDS and AtacWorks\r\n\r\nThe release includes many functions, which are demonstrated in the notebooks, to enable easy adaptation of RAPIDS for single-cell analysis.\r\nrapids_scanpy_funcs.py: preprocessing, clustering and differential analysis\r\ncoverage.py: functions to calculate coverage of a genomic region in single-cell ATAC-seq and integrate with AtacWorks for denoising and peak calling\r\nvisualize.py: functions to create interactive visualizations of single-cell data using RAPID and Plotly.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/tag/v2021.03.0",
        "name": "v2021.03.0",
        "release_id": 40447585,
        "tag": "v2021.03.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/tarball/v2021.03.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/40447585",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/releases/40447585",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/rapids-single-cell-examples/zipball/v2021.03.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:43:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 322
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1: Single-cell RNA-seq of 70,000 Human Lung Cells",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "<img align=\"left\" width=\"240\" height=\"200\" src=\"https://github.com/clara-parabricks/rapids-single-cell-examples/blob/master/images/70k_lung.png?raw=true\">\n\nWe use RAPIDS to accelerate the analysis of a ~70,000-cell single-cell RNA sequencing dataset from human lung cells. This example includes preprocessing, dimension reduction, clustering, visualization and gene ranking.\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Dataset",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Example 4: Droplet Single-cell ATAC-seq of 60K Bone Marrow Cells"
        ],
        "type": "Text_excerpt",
        "value": "The dataset is from [Travaglini et al. 2020](https://www.biorxiv.org/content/10.1101/742320v2). If you wish to run the example notebook using the same data, use the following command to download the count matrix for this dataset and store it in the `data` folder:\n\n```bash\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/krasnow_hlca_10x.sparse.h5ad\n```\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Code",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Example 5: Visualizing Chromatin Accessibility in 5,000 PBMCs with RAPIDS and AtacWorks (Beta version)"
        ],
        "type": "Text_excerpt",
        "value": "Follow this [Jupyter notebook](notebooks/hlca_lung_gpu_analysis.ipynb) for RAPIDS analysis of this dataset. In order for the notebook to run, the file [rapids_scanpy_funcs.py](notebooks/rapids_scanpy_funcs.py) needs to be in the same folder as the notebook.\n\nWe provide a second notebook with the CPU version of this analysis [here](notebooks/hlca_lung_cpu_analysis.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Acceleration",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Example 4: Droplet Single-cell ATAC-seq of 60K Bone Marrow Cells"
        ],
        "type": "Text_excerpt",
        "value": "We report the runtime of these notebooks on various GCP instances below. All runtimes are given in seconds. Acceleration is given in parentheses. Benchmarking was performed on Dec 16, 2020.\n\n| Step                         | CPU <br> n1-standard-16 <br> 16 vCPUs | GPU <br> n1-standard-16 <br> T4 16 GB GPU <br> (Acceleration)  | GPU <br> n1-highmem-8 <br> Tesla V100 16 GB GPU <br> (Acceleration) | GPU <br> a2-highgpu-1g <br> Tesla A100 40GB GPU <br> (Acceleration) |\n|------------------------------|--------------------------|---------------------------|---------------|----------------|\n| Preprocessing                |        70                |       92 (0.76x)          |  53  (1.3x)   |  59  (1.2x)    |\n| PCA                          |        10.6              |       5.0 (2.1x)          | 3.2  (3.3x)   |  2.7 (3.9x)    |\n| t-SNE                        |        220               |       2.8 (79x)           | 1.4  (157x)   |  2.2 (100x)    |\n| k-means (single iteration)   |         14.3             |      0.31 (46x)           | 0.12 (119x)   |  0.08 (179x)   |\n| KNN                          |         17.8             |      7.6 (2.3x)           | 6.8 (2.6x)    |  5.7 (3.1x)    |\n| UMAP                         |         97               |      1.1 (88x)            | 0.55 (176x)   |  0.53 (x)      |\n| Louvain clustering           |         13.9             |      0.24 (58x)           | 0.15 (93x)    |  0.11 (126x)   |\n| Leiden clustering            |         12.8             |      0.17 (75x)           | 0.09 (142x)   |  0.08 (160x)   |\n| Differential Gene Expression |        153               |      36 (4.3x)            | 7.5  (20.4x)  |  6.3 (24x)     |\n| Re-analysis of subgroup      |         29               |      7.6 (3.8x)           | 3.6  (8x)     |  3.5 (8x)      |\n| End-to-end notebook run      |        654               |       166                 |  93           |  96            |\n| Price ($/hr)                 |       0.760              | 1.110                     | 2.953         | 3.673          |\n| Total cost ($)               |       0.138              |    0.051                  |  0.076        |    0.098       |\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2: Single-cell RNA-seq of 1.3 Million Mouse Brain Cells",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "<img align=\"left\" width=\"240\" height=\"200\" src=\"https://github.com/clara-parabricks/rapids-single-cell-examples/blob/master/images/1M_brain.png?raw=true\">\n\nWe demonstrate the use of RAPIDS to accelerate the analysis of single-cell RNA-seq data from 1.3 million cells. This example includes preprocessing, dimension reduction, clustering and visualization.\n\nCompared to the previous example, here we make several adjustments to handle the larger dataset. We perform most of the preprocessing operations (e.g. filtering, normalization) while reading the dataset in batches. Further, we perform a batched PCA by training on a fraction of cells and transforming the data in batches.\n\nThis example relies heavily on UVM. While it should work on any GPU built on the Pascal architecture or newer, you will want to make sure there is enough main memory available. Oversubscribing a GPU by more than a factor of 2x can cause thrashing in UVM, which can ultimately lead to the notebook freezing.\n\n### Example Dataset\n\nThe dataset was made publicly available by 10X Genomics. Use the following command to download the count matrix for this dataset and store it in the `data` folder:\n\n```bash\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/1M_brain_cells_10X.sparse.h5ad\n```\n\n### Example Code\n\nFollow this [Jupyter notebook](notebooks/1M_brain_gpu_analysis_uvm.ipynb) for RAPIDS analysis of this dataset. In order for the notebook to run, the files [rapids_scanpy_funcs.py](notebooks/rapids_scanpy_funcs.py) and [utils.py](notebooks/utils.py) need to be in the same folder as the notebook.\n\nWe provide a second notebook with the CPU version of this analysis [here](notebooks/1M_brain_cpu_analysis.ipynb).\n\n### Acceleration\n\nWe report the runtime of these notebooks on various GCP instances below. All runtimes are given in seconds. Acceleration is given in parentheses. Benchmarking was performed on Dec 16, 2020. Note: this section is out of date and will be revised shortly.\n\n| Step                         | CPU <br> n1-highmem-64 <br> 64 vCPUs | GPU <br> n1-highmem-16 <br> T4 16 GB GPU <br> (Acceleration)  | GPU <br> n1-highmem-16 <br> Tesla V100 16 GB GPU <br> (Acceleration) | GPU <br> a2-highgpu-1g <br> Tesla A100 40GB GPU <br> (Acceleration) |\n|------------------------------|---------------------------|----------------------------|-------------------|--------------|\n| Data load + Preprocessing    |    1120                   |  1125 (1x)                 |  967 (1.2x)       |  475 (2.4x)    |\n| PCA                          |      44                   |   45 (1x)                  |   43 (1x)         |   17.8 (2.5x)  |\n| t-SNE                        |    6509                   |  196 (33x)                 |   50 (130x)       |   37  (176x)  |\n| k-means (single iteration)   |     148                   |  12.7 (12x)                |  2.6 (57x)        |    2 (74x)   |\n| KNN                          |     154                   |   141 (1.1x)               |   92 (1.7x)       |   62 (2.5x)    |\n| UMAP                         |    2571                   |   146 (18x)                |  32 (80x)         |   21 (122x)   |\n| Louvain clustering           |    1153                   |  6.1 (189x)                |  3.9 (296x)       |    2.4 (480x)  |\n| Leiden clustering            |    6345                   |   5.1 (1244x)              |  2.7 (2350x)      |    1.7 (3732x) |\n| Re-analysis of subgroup      |     255                   |  19.2 (13x)                |   15 (17x)        |   17.9 (14.2x)   |\n| End-to-end notebook run      |   18338                   |    1759                    |    1265           |   686       |\n| Price ($/hr)                 |   3.786                   | 1.296                      | 5.906             | 3.673         |\n| Total cost ($)               |    19.285                 |  0.633                     |    2.075           |   0.700      |\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 3: GPU-based Interactive Visualization of 70,000 Human Lung Cells (beta version)",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "![Interactive browser Demo](images/viz3-2.gif)\n\nWe demonstrate how to use RAPIDS, Scanpy and Plotly Dash to create an interactive dashboard where we visualize a single-cell RNA-sequencing dataset. Within the interactive dashboard, we can cluster, visualize, and compare any selected groups of cells.\n\n### Installation\n\nAdditional dependencies are needed for this example. Follow these instructions for conda installation:\n\n```bash\nconda env create --name rapidgenomics-viz -f conda/rapidgenomics_cuda11.0.viz.yml\nconda activate rapidgenomics-viz\npython -m ipykernel install --user --display-name \"Python (rapidgenomics-viz)\"\n```\n\nAfter installing the necessary dependencies, you can just run `jupyter lab`.\n\n### Example Dataset\n\nThe dataset used here is the same as in example 1.\n\n### Example Code\n\nFollow this [Jupyter notebook](notebooks/hlca_lung_gpu_analysis-visualization.ipynb) to create the interactive visualization. In order for the notebook to run, the files [rapids_scanpy_funcs.py](notebooks/rapids_scanpy_funcs.py) and [visualize.py](notebooks/visualize.py) need to be in the same folder as the notebook.\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 4: Droplet Single-cell ATAC-seq of 60K Bone Marrow Cells",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "<img align=\"left\" width=\"240\" height=\"200\" src=\"https://github.com/clara-parabricks/rapids-single-cell-examples/blob/master/images/60k_bmmc_dsciATAC.png?raw=true\">\n\nWe demonstrate the use of RAPIDS to accelerate the analysis of single-cell ATAC-seq data from 60,495 cells. We start with the peak-cell matrix, then perform peak selection, normalization, dimensionality reduction, clustering, and visualization. We also visualize regulatory activity at marker genes and compute differential peaks.\n\n### Example Dataset\n\nThe dataset is taken from [Lareau et al., Nat Biotech 2019](https://www.nature.com/articles/s41587-019-0147-6). We processed the dataset to include only cells in the 'Resting' condition and peaks with nonzero coverage. Use the following command to download (1) the processed peak-cell count matrix for this dataset (.h5ad), (2) the set of nonzero peak names (.npy), and (3) the cell metadata (.csv), and store them in the `data` folder:\n\n```bash\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/dsci_resting_nonzeropeaks.h5ad; \\\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/dsci_resting_peaknames_nonzero.npy; \\\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/dsci_resting_cell_metadata.csv\n```\n\n### Example Code\n\nFollow this [Jupyter notebook](notebooks/dsci_bmmc_60k_gpu.ipynb) for RAPIDS analysis of this dataset. In order for the notebook to run, the files [rapids_scanpy_funcs.py](notebooks/rapids_scanpy_funcs.py) and [utils.py](notebooks/utils.py) need to be in the same folder as the notebook.\n\nWe provide a second notebook with the CPU version of this analysis [here](notebooks/dsci_bmmc_60k_cpu.ipynb).\n\n### Acceleration\n\nWe report the runtime of these notebooks on various GCP instances below. All runtimes are given in seconds. Acceleration is given in parentheses. Benchmarking was performed on Dec 16, 2020.\n\n\n| Step                         | CPU <br> n1-standard-16 <br> 16 vCPUs | GPU <br> n1-standard-16 <br> T4 16 GB GPU <br> (Acceleration)  | GPU <br> n1-highmem-8 <br> Tesla V100 16 GB GPU <br> (Acceleration) | GPU <br> a2-highgpu-1g <br> Tesla A100 40GB GPU <br> (Acceleration) |\n|------------------------------|-------------------------|----------------------------|-------------------|-------------|\n| PCA                          | 149                     |  146 (1x)                  |  68  (2.2x)       |  54  (2.8x) |\n| KNN                          | 19.7                    | 19.3 (1x)                  | 5.8 (3.4x)        |  5.3 (3.7x) |\n| UMAP                         | 69                      |  1.1 (63x)                 | 0.71 (97x)        | 0.69 (100x) |\n| Louvain clustering           | 13.1                    | 0.13 (100x)                | 0.11 (119x)       | 0.11 (119x) |\n| Leiden clustering            | 15.7                    | 0.08 (196x)                | 0.07 (224x)       | 0.06 (262x) |\n| t-SNE                        | 258                     |  3.2 (81x)                 | 1.5  (172x)       |  2.2 (117x) |\n| Differential Peak Analysis   | 135                     |   59 (2.3x)                | 14.8 (9x)         | 10.4  (13x) |\n| End-to-end notebook run      | 682                     |    263                     | 107               |   92        |\n| Price ($/hr)                 | 0.760                   | 1.110                      | 2.953             | 3.673       |\n| Total cost ($)               | 0.144                   |  0.081                     | 0.110             |    0.094    |\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 5: Visualizing Chromatin Accessibility in 5,000 PBMCs with RAPIDS and AtacWorks (Beta version)",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "<img align=\"left\" width=\"240\" height=\"200\" src=\"https://github.com/avantikalal/rapids-single-cell-examples/blob/rilango/mem-fix/images/atacworks_notebook_img.png?raw=true\">\n\nWe analyze single-cell ATAC-seq data from 5000 PBMC cells as in example 4. Additionally, we use cuDF to calculate and visualize cluster-specific chromatin accessibility in selected marker regions. Finally, we use a deep learning model trained with [AtacWorks](https://github.com/clara-parabricks/AtacWorks), to improve the accuracy of the chromatin accessibility track and call peaks in individual clusters.\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Data",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Example 5: Visualizing Chromatin Accessibility in 5,000 PBMCs with RAPIDS and AtacWorks (Beta version)"
        ],
        "type": "Text_excerpt",
        "value": "The dataset was made publicly available by 10X Genomics. Use the following command to download the peak x cell count matrix and the fragment file for this dataset, and store both in the `data` folder:\n\n```bash\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/5k_pbmcs_10X.sparse.h5ad\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/5k_pbmcs_10X_fragments.tsv.gz\nwget -P <path to this repository>/data https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/5k_pbmcs_10X_fragments.tsv.gz.tbi\n```\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Model",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS",
          "Example 5: Visualizing Chromatin Accessibility in 5,000 PBMCs with RAPIDS and AtacWorks (Beta version)"
        ],
        "type": "Text_excerpt",
        "value": "We use a pre-trained deep learning model to denoise the chromatin accessibility track and call peaks. This model can be downloaded into the `models` folder:\n```bash\nwget -P <path to this repository>/models https://api.ngc.nvidia.com/v2/models/nvidia/atac_bulk_lowcov_5m_50m/versions/0.3/files/models/model.pth.tar\n```\n\n### Example Code\nFollow this [Jupyter notebook](notebooks/5k_pbmc_coverage_gpu.ipynb) for GPU analysis of this dataset. In order for the notebook to run, the files [utils.py](notebooks/utils.py), and [coverage.py](notebooks/coverage.py) need to be in the same folder as the notebook.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adapting these examples to another dataset",
        "parent_header": [
          "GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS"
        ],
        "type": "Text_excerpt",
        "value": "For our examples, we stored the count matrix in a sparse `.h5ad` format. To convert a different count matrix into this format, follow the instructions in [this notebook](notebooks/csv_to_h5ad.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/NVIDIA-Genomics-Research/rapids-single-cell-examples/master/README.md",
      "technique": "header_analysis"
    }
  ]
}