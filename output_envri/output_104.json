{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: Springtime\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Peter\n    family-names: Kalverla\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-5025-7862'\n  - given-names: Fakhereh\n    family-names: Alidoost\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0001-8407-6472'\n  - given-names: Stefan\n    family-names: Verhoeven\n    orcid: 'https://orcid.org/0000-0002-5821-2060'\n    affiliation: Netherlands eScience Center\n  - given-names: Mahdi\n    family-names: Khodadadzadeh\n    orcid: 'https://orcid.org/0000-0001-7899-738X'\n    affiliation: University of Twente\nrepository-code: 'https://github.com/phenology/springtime'\nurl: 'https://springtime.readthedocs.io/'\nabstract: >-\n  The Springtime Python package helps to streamline\n  workflows for doing machine learning with phenological\n  datasets.\nkeywords:\n  - phenology\n  - machine learning\n  - geospatial\nidentifiers:\n  - description: Latest version of software\n    type: doi\n    value: \"10.5281/zenodo.7835299\"\n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phenology/springtime"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-26T11:04:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-24T10:49:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Spatiotemporal phenology research with interpretable models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9882049561375121,
      "result": {
        "original_header": "Springtime",
        "type": "Text_excerpt",
        "value": "Springtime is both a project and a python packaged aimed at streamlining\nworkflows for doing machine learning with phenological datasets. \nPhenology is the scientific discipline in which we study the lifecycle of plants\nand animals. A common objective is to develop (Machine Learning) models that can\nexplain or predict the occurrence of phenological events, such as the blooming\nof plants. Since there is a variety of data sources and existing tools to\nretrieve and analyse phenology data, it is easy to get lost and disorganized. \nAt the heart of springtime is a data representation following the scikit-learn\nstandard structure. The springtime python package implements (down)loaders for\nvarious datasets that are able to convert the data to this same structure. Data\nloading specifications can be exported to yaml recipes for easy sharing. \nThe documentation has an extensive user guide that shows how each of the data\nloaders convert from the raw to the standardized data format. It also includes\nexamples of using various (combinations of) models. \nThe data structure proposed here is still not ideal, and should rather be seen\nas a first step in standardizing workflows in phenological modelling. We hope it\nwill serve as a basis for discussion and further developments.\n \n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8975497744667665,
      "result": {
        "type": "Text_excerpt",
        "value": "For detailed information and instruction, please refer to the \n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phenology/springtime/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://springtime.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phenology/springtime/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/intro.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/intro.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/phenocam.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/phenocam.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/pep725.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/pep725.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/adding_datasets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/adding_datasets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/npn.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/npn.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/daymet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/daymet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/ppo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/ppo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/modis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/modis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/eobs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/eobs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/combining_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/datasets/combining_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/modelling/adding_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/modelling/adding_models.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/modelling/intro.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/modelling/intro.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/examples/use_case_1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/examples/use_case_1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/examples/use_case_2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/user_guide/examples/use_case_2.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phenology/springtime/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phenology/springtime"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Springtime"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7835299"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/docs/illustration.png"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Getting started\n\nSpringtime is a Python library, but it relies on R packages for some of the data\ndownloads. Depending on your situation, the options below may be applicable:\n\n1. You want to [create a new (conda/mamba)\n   environment](#create-a-new-condamamba-environment) that contains both R and\n   python, and [install springtime](#install-springtime) and [the relevant R\n   packages](#install-r-dependencies) inside it.\n2. You want to [install springtime](#install-springtime) and [its R\n   dependencies](#install-r-dependencies) in an existing environment where R and\n   Python are already available\n3. You want to [use a docker container](#use-springtime-through-docker) where\n   everything is already pre-installed.\n4. You want to [install springtime in an isolated environment on\n   CRIB](#install-on-crib-or-other-managed-jupyterhub-service) or a similar\n   JupyterHub service.\n\n## Create a new (conda/mamba) environment\n\nYou need to have mamba/conda available on your system. To create a new environment\nand activate it, run\n\n```bash\nmamba create --name springtime python=\"3.10\"\nmamba activate springtime\n```\n\n### Install R and add pre-compiled R dependencies\n\nIn the next step, we will install the R dependencies. However, these can take a long time to compile. Alternatively, most of the dependencies are available as pre-compiled binaries via conda. You may choose to install these in your new environment by using the environment shipped with springtime.\n\n```shell\ncurl -o environment.yml https://raw.githubusercontent.com/phenology/springtime/main/environment.yml\nmamba env update -n springtime -f environment.yml\n```\n\nNote that this step is only meant to speed up installation of some of the dependencies, and it does not replace any of the steps below. Also note that this only works for some operating systems and architectures for which pre-compiled libraries are available. Thus, if the command above fails, you can still [download and install R](https://cran.r-project.org), then follow [the step below](#install-r-dependencies) to build the required R dependencies on your system.\n\n## Install springtime\n\nSpringtime is available on PyPI and can be installed with pip:\n\n```bash\npip install springtime\n```\n\nThis only installs the bare package. We provide an 'extras' option that additionally installs some ML models, ipykernel for working in notebooks. To install these extras along with springtime, run\n\n```bash\npip install springtime[extras]\n```\n\n## Install R dependencies\n\nR dependencies can be installed with the following:\n\n```bash\nRscript -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\")'\nRscript -e 'devtools::install_github(\"bluegreen-labs/phenor\", upgrade=\"never\")'\nRscript -e 'devtools::install_github(\"ropensci/rppo\", upgrade=\"never\")'\nRscript -e 'install.packages(c(\"daymetr\", \"MODISTools\", \"phenocamr\", \"rnpn\"), repos = \"http://cran.us.r-project.org\")'\n```\n\n## Use springtime through docker\n\nAn alternative way to use springtime is via docker. We have prepared a docker\nimage that can be found\n[here](https://github.com/phenology/springtime/pkgs/container/springtime). This\nimage is based on [the official jupyter docker\nstack](https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#jupyter-r-notebook)\nwith R already installed. On top of that, we have already installed springtime\nwith all its dependencies.\n\nTo use it, you need to have docker installed on your system.\n\nOfficial instructions for installing docker desktop can be found\n[here](https://docs.docker.com/engine/install/). Alternatively, many third-party\ninstructions can be found online to install docker without docker\ndesktop, for example in WSL.\n\nOnce you have docker, you can pull the springtime image using\n\n```bash\ndocker pull ghcr.io/phenology/springtime:latest\n```\n\nAfter the download completes, the image should be listed when you type `docker images`.\n\n### Using the docker image\n\nYou can use the docker image in two ways. The following command will start a\njupyter lab instance in which the springtime environment is installed:\n\n```bash\ndocker run --rm -it -p 8888:8888 -v \"${PWD}\":/home/jovyan/work ghcr.io/phenology/springtime:latest\n```\n\nAlternatively, you can use the docker image to use the springtime command on\nyour terminal:\n\n```bash\ndocker run --rm ghcr.io/phenology/springtime:latest springtime --help\n```\n\nYou could also set an alias like so:\n\n```bash\n# By setting this alias\nalias springtime=\"docker run --rm ghcr.io/phenology/springtime:latest springtime\"\n\n# you can now run\nspringtime --help\n\n# which will effectively execute\ndocker run --rm ghcr.io/phenology/springtime:latest springtime --help\n```\n\nAs such, you can effectively use the docker version of springtime exactly like\nyou would use a local installation.\n\n### Customizing the docker command to your needs\n\nEssentially, the commands above can be split into a few parts:\n\n```bash\ndocker run <OPTIONS> ghcr.io/phenology/springtime:latest <COMMAND>\n```\n\nThe core command `docker run ghcr.io/phenology/springtime:latest` starts a container based on the\n`springtime` image you just pulled. The `--rm` option makes sure it is deleted\nagain after it is done executing `<COMMAND>`. The default command is to start a\njupyter lab instance, so that's what happens if you don't specify `<COMMAND>`.\nAbove, we executed the command `springtime --help`.\n\nThe `-v \"${PWD}\":/home/jovyan/work` tells docker to make your current working\ndirectory (on your own system) available to the docker container. Inside the\ncontainer this directory will be available as `/home/jovyan/work`, i.e. the\n`work` folder you see by default in jupyter lab. Changes inside this folder will\nremain available on your host system. Changes in any other directory will be\nlost when the container is destroyed. Note that you can mount multiple\ndirectories in this way.\n\nThe `-it` makes it possible to interact with the running program, intead of\nsimply executing and exiting. Thus container will terminate once you terminate\nyour jupyter lab session.\n\nAdditional options may be added to the docker command as well. For example, to\nrun on a macbook, we had to add `--platform linux/amd64`:\n\n```\ndocker run --rm --platform linux/amd64 ghcr.io/phenology/springtime springtime --help\n```\n\nBe aware that docker containers can consume significant resources on your\nsystem. Make sure that they're always properly removed when you're ready. You\ncan run `docker ps -a` to see all containers lingering around on your system,\nand you can remove them with `docker rm <ID OR NAME>`.\n\n### Note: tmp/data\n\nBy default, currently, springtime stores any data or output in /tmp/data. That\nmeans it will be lost when the docker container is destroyed. To persist it, for\nnow, move it to the work folder. We are planning to add additional configuration\nthat should make specification of the output or data directories more flexible.\n\n## Install mamba on CRIB\n\nSelect one of the CRIB Intel x86_64 machines. Then open a terminal and run the code below:\n\n```bash\ncurl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\nbash Mambaforge-Linux-x86_64.sh\n```\nYou may reply yes to this question:\n\n```bash\nDo you wish the installer to initialize Mambaforge\nby running conda init? [yes|no]\n[no] >>> yes\n```\n\n## Install on CRIB or other managed JupyterHub service\n\nSometimes the existing environment may clash with your springtime environment,\nor you don't have complete control over the default environment. In that case,\nit may be possible to create a custom kernel for springtime.\n\nThis worked for us on CRIB:\n\n```bash\n# 0. Start Intel x86_64 machine\n\n# 1. Make sure you have mamba\nwhich mamba  # should return a path\n\n# If not install mambaforge and activate it\n# Make sure to append x86_64 to installation location.\n\n# 2. Clone springtime repo\ngit clone https://github.com/phenology/springtime.git\ncd springtime\n\n# 2. Create new environment\nmamba env create --file environment.yml --name springtime_x86\n\n# 3. Activate the environment\nmamba activate springtime_x86\n\n# 4. Developer installation\npip install -e .\n\n# 5. Add Jupyter kernel\n# See the instructions here: https://github.com/ESMValGroup/ESMValTool-JupyterLab#using-a-custom-kernel-script\npip install ipykernel kernda\npython -m ipykernel install --user --name springtime_x86 --display-name=\"Springtime x86\" --env R_LIBS_USER $CONDA_PREFIX/lib/R/library\nkernda -o ~/.local/share/jupyter/kernels/springtime_x86/kernel.json -o\n\n# 6. Install direct R dependencies\nunset R_LIBS_USER\nRscript -e 'devtools::install_github(\"bluegreen-labs/phenor\", upgrade=\"never\")'\nRscript -e 'devtools::install_github(\"ropensci/rppo\", upgrade=\"never\")'\nRscript -e 'install.packages(\"daymetr\", repos = \"http://cran.us.r-project.org\")'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/docs/installation.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phenology/springtime/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "machine-learning, phenology, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "springtime"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phenology"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 148852,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1056,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phenology/springtime/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2024-05-24T09:41:25Z",
        "date_published": "2024-05-24T09:46:01Z",
        "description": "Bug-fix release, mostly fixing the data loader for Daymet point data \r\n\r\n### Added\r\n\r\n- Automated publishing to PyPI upon release. PyPI is now a trusted publisher. Now you don't\r\n  need to be a maintainer on PyPI anymore to publish a release.\r\n\r\n### Fixed\r\n\r\n- Fixed issue with loading data got from the Daymet point dowloader.\r\n- Fixed issue with GitHub action to push Docker image to GHCR.\r\n\r\n\r\n**Full Changelog**: https://github.com/phenology/springtime/compare/v0.2.1...v0.2.2",
        "html_url": "https://github.com/phenology/springtime/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 157317390,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/phenology/springtime/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phenology/springtime/releases/157317390",
        "value": "https://api.github.com/repos/phenology/springtime/releases/157317390",
        "zipball_url": "https://api.github.com/repos/phenology/springtime/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2024-03-02T22:08:48Z",
        "date_published": "2024-03-02T22:17:11Z",
        "description": "The Docker image is updated, minor fixes are included in documentation and docstrings.\r\n\r\n### Added\r\n\r\n- GitHub Action to build and push Docker image\r\n\r\n### Changed\r\n\r\n- Small fixes in documentation and docstrings\r\n- Dockerfile includes extra packages\r\n\r\n\r\n**Full Changelog**: https://github.com/phenology/springtime/compare/v0.2.0...v0.2.1",
        "html_url": "https://github.com/phenology/springtime/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 144513935,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/phenology/springtime/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phenology/springtime/releases/144513935",
        "value": "https://api.github.com/repos/phenology/springtime/releases/144513935",
        "zipball_url": "https://api.github.com/repos/phenology/springtime/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2024-02-02T15:59:03Z",
        "date_published": "2024-02-02T16:01:54Z",
        "description": "Substantial update of the package with more standardization. \r\n\r\n### Added\r\n\r\n- User guide\r\n- Download data through Appeears\r\n- Dockerfile\r\n\r\n### Changed\r\n\r\n- More standardization of data classes\r\n- R scripts run through command line call, no longer direct dependencies\r\n- Simplified license\r\n- Updated structure of documentation\r\n\r\n### Removed\r\n\r\n- Direct R calls through Rpy2\r\n- Executing models no longer part of workflow / package\r\n\r\n**Full Changelog**: https://github.com/phenology/springtime/compare/v0.1.0...v0.2.0",
        "html_url": "https://github.com/phenology/springtime/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 139694696,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/phenology/springtime/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phenology/springtime/releases/139694696",
        "value": "https://api.github.com/repos/phenology/springtime/releases/139694696",
        "zipball_url": "https://api.github.com/repos/phenology/springtime/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2023-04-17T08:09:58Z",
        "date_published": "2023-04-17T08:13:28Z",
        "description": "The Springtime Python package helps to streamline workflows for doing machine learning with phenological datasets.\r\n\r\nPhenology is the scientific discipline in which we study the lifecycle of plants and animals. A common objective is to develop (Machine Learning) models that can explain or predict the occurrence of phenological events, such as the blooming of plants. Since there is a variety of data sources and existing tools to retrieve and analyse phenology data, it is easy to get lost and disorganized.\r\n\r\nWith Springtime, we aim to provide a more streamlined workflow for working with a variety of datasets and (ML) models. You can run Springtime as a command line tool in a terminal or use it as a Python library e.g. in a Jupyter notebook.",
        "html_url": "https://github.com/phenology/springtime/releases/tag/v0.1.0",
        "name": "Initial release",
        "release_id": 99708532,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/phenology/springtime/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phenology/springtime/releases/99708532",
        "value": "https://api.github.com/repos/phenology/springtime/releases/99708532",
        "zipball_url": "https://api.github.com/repos/phenology/springtime/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:15:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example task",
        "parent_header": [
          "Springtime"
        ],
        "type": "Text_excerpt",
        "value": "Predict the day of first bloom of the common lilac given indirect observations\n(e.g. satellite data) and/or other indicators (e.g. sunshine and temperature).\n\n![illustration_example_use_case](docs/illustration.png)\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/phenology/springtime/main/README.md",
      "technique": "header_analysis"
    }
  ]
}