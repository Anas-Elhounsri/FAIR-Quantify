{
  "application_domain": [
    {
      "confidence": 13.39,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "Maintainer and moderator: Agbeli Ameko\n\nResearchers and Developers: Eliott Faust,'Joba Adisa, Reid Olson, Keith Maull, Lily Kailyn, AJ Lauer\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NCAR/pi-wrf"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Two Options: Clone and Contribute Changes or Run an Instance",
        "parent_header": [
          "Section 1: Installing and Running the App (Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "A)To run an instance download a Docker image and create a container that holds the WRF app. Note that this runs the piwrf notebook in a non-persistant state (any changes to the notebook will not be saved) This is done by by typing the following (all in one line):<br/>\n             `docker run -p 8888:8888 ncar/pi-wrf`\n\n\nB)**RECOMMENDED**: Clone or copy to run the notebook so any of your potential changes are saved. You will need to clone NCAR's Pi-WRF repo: [Pi-WRF](https://github.com/NCAR/pi-wrf \"Pi-WRF\"). Then, instead of option \"A\" above, Type `docker run -p 8888:8888 -v ~/pi-wrf/envs/smpar_gui/notebooks:/pi-wrf/src/notebooks ncar/pi-wrf`. The path after -v will need to be modified depending on where you clone the Pi-WRF repo in your file system. Most likely this will be in your default home directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-18T02:04:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T18:25:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository hosts a Jupyter notebook based application of the Weather Research and Forecasting Model (WRF) on a Raspberry Pi (version 3 or higher)."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.812174293347587,
      "result": {
        "original_header": "Section 2: Using the App",
        "type": "Text_excerpt",
        "value": "After the Docker container starts, there will be a URL in the terminal the user can copy and paste into their browser. This will open a locally hosted instance of Jupyter Notebook. The user should select the Pi-WRF.ipynb notebook which will open in a new tab. The notebook provides instructions for selecting the domain and the datetime range for the model. In order to use the application, the raspberry Pi must be connected to the internet. :<br/> \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8225881077299664,
      "result": {
        "original_header": "Section 3: Uninstalling Docker",
        "type": "Text_excerpt",
        "value": "If you no longer wish to have the app or Docker installed on your Raspberry Pi you can remove all components without affected your Pi. To uninstall Docker and remove all containers you must enter the following commands into your terminal.:<br/>\n1) Remove all containers:<br/>\n`sudo docker system prune -a`:<br/>\n2) Remove all images:<br/>\n`sudo docker rmi $(docker images -a -q)`:<br/> \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8849605696872106,
      "result": {
        "original_header": "Section 4: Build from Source (advanced users only)",
        "type": "Text_excerpt",
        "value": "This section is for users who have modified the WRF source code. Make your changes to the source code and then run the following commands to build a new Docker Image. Warning: This may take a few hours to complete. \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9033108147406537,
      "result": {
        "original_header": "Section 5: Miscellaneous Commands and Troubleshooting",
        "type": "Text_excerpt",
        "value": "4) I receive a segmentation error when running a simulation near the equator\nAt the equator, large towering cumulus clouds that arise due to deep convection are prevalent throughout the year. These clouds are associated with very strong updrafts or quickly moving rising air. The air moves so fast within the model, that the air can skip a vertical grid cell. The model does not know how to handle blank grid cells, so it produces an error. This is resolved be reducing the time step so the air will not travel as far in a shorter amount of time.  \n5) Dates do not work \nUsers are limited to a few days before the current date. Times prior to this are considered archived simulations and a collection of archive simulations will be included at a later version of the Pi-WRF application.  \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NCAR/pi-wrf/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/Pi-WRF.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/Pi-WRF.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/.ipynb_checkpoints/Pi-WRF-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/.ipynb_checkpoints/Pi-WRF-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/envs/smpar_gui/notebooks/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NCAR/pi-wrf/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NCAR/pi-wrf"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: Installing and Running the App (Raspberry Pi)",
        "type": "Text_excerpt",
        "value": "The Pi-WRF application requires an internet connection, and the container platform [Docker](https://www.docker.com/products/docker-desktop \"Docker.com\") to run. In short, Docker is a is a platform that creates containers, which simulates the software of a different computer, all within your own computer. If you are familiar with the term virtual machine, then containers are light-weight forms of virtual machines. The containers Docker creates are self-contained, and code/programs within the container do no affect any of the files or security on your host system. \n\nIn order to run the Pi-WRF application, you will need to download and install Docker. Once this is completed, you will then download a Docker image and create a container which houses the Pi-WRF application. After the container is created you will run the program. The following instructions will inform you of how to download and install docker, create a container, and run the app.\n\n1) Open a terminal by clicking on the following icon in the upper left of your screen. If you do not see the icon, you may press the following keys:<br/>\n`Control` + `Alt` + `t` \n\n2) Download and install Docker (this may take upwards of 10 minutes) by typing the following in the terminal. This step only needs to be done once. Subsequent use of the app will not require this step.:<br/>\n`curl -sSL https://get.docker.com | sh`:<br/>\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9868022597490413,
      "result": {
        "original_header": "Section 3: Uninstalling Docker",
        "type": "Text_excerpt",
        "value": "If you no longer wish to have the app or Docker installed on your Raspberry Pi you can remove all components without affected your Pi. To uninstall Docker and remove all containers you must enter the following commands into your terminal.:<br/>\n1) Remove all containers:<br/>\n`sudo docker system prune -a`:<br/>\n2) Remove all images:<br/>\n`sudo docker rmi $(docker images -a -q)`:<br/> \n\n3) Remove Docker:<br/>\n`Sudo apt remove docker-ce`:<br/>\n \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860605119386874,
      "result": {
        "original_header": "Section 4: Build from Source (advanced users only)",
        "type": "Text_excerpt",
        "value": "This section is for users who have modified the WRF source code. Make your changes to the source code and then run the following commands to build a new Docker Image. Warning: This may take a few hours to complete. \n2) Build the image with the command :<br/>\n`docker build -f envs/smpar_gui/dockerfile .`\n \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9870871359591926,
      "result": {
        "original_header": "Section 5: Miscellaneous Commands and Troubleshooting",
        "type": "Text_excerpt",
        "value": "1) App is not exiting\nTo force the app to quit press the following keys: \n`Control` + `c`  \n2) Not responsive at start\nAt startup, the app loads. You will need to wait a few seconds once you see the home screen buttons. Once they highlight when you hover your mouse cursor over them, you may begin to use the app.  \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9986569304691957,
      "result": {
        "type": "Text_excerpt",
        "value": "This repository hosts a Jupyter Notebook application of the Weather Research and Forecasting Model (WRF) on a Raspberry Pi (version 3 or higher). The following text can be summarized into a few instructions to install and run the application. :\n1) Open a terminal\n2) Type `curl -sSL https://get.docker.com | sh`\n3) Type `docker run -p 8888:8888 ncar/pi-wrf`\n4) **RECOMMENDED**: these instructions runs the pi-wrf notebook in a non-persistant state (any changes to the notebook will not be saved). To run the notebook so your changes or contributions are saved, you will need to clone NCAR's Pi-WRF repo: . Then, instead of step #3 above, Type `docker run -p 8888:8888 -v ~/pi-wrf/envs/smpar_gui/notebooks:/pi-wrf/src/notebooks ncar/pi-wrf`. The path after  **-v** will need to be modified depending on where you clone the Pi-WRF repo in your file system. \n**GUI VERSION**: To run the Pi-WRF program without an interactive Jupyter notebook front end using a point-and-click Graphical User Interface (GUI) please check out https://github.com/NCAR/pi-wrf-gui \n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NCAR/pi-wrf/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2019, National Center for Atmospheric Research\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pi-wrf"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NCAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1100396,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 58444,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "NCL",
        "size": 45440,
        "type": "Programming_language",
        "value": "NCL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6691,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wefoust",
          "type": "User"
        },
        "date_created": "2020-03-20T17:28:03Z",
        "date_published": "2020-03-20T17:54:01Z",
        "html_url": "https://github.com/NCAR/pi-wrf/releases/tag/v1.0.0",
        "name": "Version 1.0.0",
        "release_id": 24720092,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/NCAR/pi-wrf/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NCAR/pi-wrf/releases/24720092",
        "value": "https://api.github.com/repos/NCAR/pi-wrf/releases/24720092",
        "zipball_url": "https://api.github.com/repos/NCAR/pi-wrf/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wefoust",
          "type": "User"
        },
        "date_created": "2019-12-23T21:30:41Z",
        "date_published": "2019-12-23T21:41:17Z",
        "description": "Beta-Version of the app. V2 fixes overhauls the time/date page and fixes associated bugs. ",
        "html_url": "https://github.com/NCAR/pi-wrf/releases/tag/V2",
        "name": "Beta-Release-v2",
        "release_id": 22436871,
        "tag": "V2",
        "tarball_url": "https://api.github.com/repos/NCAR/pi-wrf/tarball/V2",
        "type": "Release",
        "url": "https://api.github.com/repos/NCAR/pi-wrf/releases/22436871",
        "value": "https://api.github.com/repos/NCAR/pi-wrf/releases/22436871",
        "zipball_url": "https://api.github.com/repos/NCAR/pi-wrf/zipball/V2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wefoust",
          "type": "User"
        },
        "date_created": "2019-12-18T02:11:07Z",
        "date_published": "2019-12-18T02:22:35Z",
        "html_url": "https://github.com/NCAR/pi-wrf/releases/tag/1.0.0-beta",
        "name": "Beta-Release-v1",
        "release_id": 22308571,
        "tag": "1.0.0-beta",
        "tarball_url": "https://api.github.com/repos/NCAR/pi-wrf/tarball/1.0.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/NCAR/pi-wrf/releases/22308571",
        "value": "https://api.github.com/repos/NCAR/pi-wrf/releases/22308571",
        "zipball_url": "https://api.github.com/repos/NCAR/pi-wrf/zipball/1.0.0-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: Installing and Running the App (Raspberry Pi)",
        "type": "Text_excerpt",
        "value": "The Pi-WRF application requires an internet connection, and the container platform [Docker](https://www.docker.com/products/docker-desktop \"Docker.com\") to run. In short, Docker is a is a platform that creates containers, which simulates the software of a different computer, all within your own computer. If you are familiar with the term virtual machine, then containers are light-weight forms of virtual machines. The containers Docker creates are self-contained, and code/programs within the container do no affect any of the files or security on your host system. \n\nIn order to run the Pi-WRF application, you will need to download and install Docker. Once this is completed, you will then download a Docker image and create a container which houses the Pi-WRF application. After the container is created you will run the program. The following instructions will inform you of how to download and install docker, create a container, and run the app.\n\n1) Open a terminal by clicking on the following icon in the upper left of your screen. If you do not see the icon, you may press the following keys:<br/>\n`Control` + `Alt` + `t` \n\n2) Download and install Docker (this may take upwards of 10 minutes) by typing the following in the terminal. This step only needs to be done once. Subsequent use of the app will not require this step.:<br/>\n`curl -sSL https://get.docker.com | sh`:<br/>\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Two Options: Clone and Contribute Changes or Run an Instance",
        "parent_header": [
          "Section 1: Installing and Running the App (Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "A)To run an instance download a Docker image and create a container that holds the WRF app. Note that this runs the piwrf notebook in a non-persistant state (any changes to the notebook will not be saved) This is done by by typing the following (all in one line):<br/>\n             `docker run -p 8888:8888 ncar/pi-wrf`\n\n\nB)**RECOMMENDED**: Clone or copy to run the notebook so any of your potential changes are saved. You will need to clone NCAR's Pi-WRF repo: [Pi-WRF](https://github.com/NCAR/pi-wrf \"Pi-WRF\"). Then, instead of option \"A\" above, Type `docker run -p 8888:8888 -v ~/pi-wrf/envs/smpar_gui/notebooks:/pi-wrf/src/notebooks ncar/pi-wrf`. The path after -v will need to be modified depending on where you clone the Pi-WRF repo in your file system. Most likely this will be in your default home directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:43:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Two Options: Clone and Contribute Changes or Run an Instance",
        "parent_header": [
          "Section 1: Installing and Running the App (Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "A)To run an instance download a Docker image and create a container that holds the WRF app. Note that this runs the piwrf notebook in a non-persistant state (any changes to the notebook will not be saved) This is done by by typing the following (all in one line):<br/>\n             `docker run -p 8888:8888 ncar/pi-wrf`\n\n\nB)**RECOMMENDED**: Clone or copy to run the notebook so any of your potential changes are saved. You will need to clone NCAR's Pi-WRF repo: [Pi-WRF](https://github.com/NCAR/pi-wrf \"Pi-WRF\"). Then, instead of option \"A\" above, Type `docker run -p 8888:8888 -v ~/pi-wrf/envs/smpar_gui/notebooks:/pi-wrf/src/notebooks ncar/pi-wrf`. The path after -v will need to be modified depending on where you clone the Pi-WRF repo in your file system. Most likely this will be in your default home directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NCAR/pi-wrf/master/README.md",
      "technique": "header_analysis"
    }
  ]
}