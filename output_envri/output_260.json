{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "1. Enger M, Skjaker SA, Nordsletten L, et al. Sports-related acute shoulder injuries in an urban population. BMJ Open Sport Exerc Med. 2019;5(1):e000551. Published 2019 Aug 12. doi:10.1136/bmjsem-2019-000551\n\n2. Gibbs DB, Lynch TS, Nuber ED, Nuber GW. Common Shoulder Injuries in American Football Athletes. Curr Sports Med Rep. 2015 Sep-Oct;14(5):413-9. doi: 10.1249/JSR.0000000000000190. PMID: 26359844.\n\n3. Hunter, J D. Matplotlib: A 2D Graphics Environment. Computing in Science & Engineering. 2007. 9, 90-95. \n\n4. Kaplan LD, Flanigan DC, Norwig J, Jost P, Bradley J. Am J Sports Med. 2005 Aug; 33(8):1142-6.\n\n5. Katz S, Burke B. How is Total QBR calculated? We explain our quarterback rating [Internet]. ESPN. 2016 [cited 2021May11]. Available from: https://www.espn.com/blog/statsinfo/post/_/id/123701/how-is-total-qbr-calculated-we-explain-our-quarterback-rating \n\n6. Kelly BT, Barnes RP, Powell JW, Warren RF. Am J Sports Med. 2004 Mar; 32(2):328-31.\n\n7. Knapp, Thomas R. and Schafer, William D. (2009) \"From Gain Score t to ANCOVA F (and vice versa),\" Practical Assessment, Research, and Evaluation: Vol. 14 , Article 6. DOI: https://doi.org/10.7275/yke1-k937 \n\n8. Lanzi JT Jr, Chandler PJ, Cameron KL, Bader JM, Owens BD. Epidemiology of Posterior Glenohumeral Instability in a Young Athletic Population. Am J Sports Med. 2017 Dec;45(14):3315-3321. doi: 10.1177/0363546517725067. Epub 2017 Sep 25. PMID: 28945456.\n\n9. Monica J, Vredenburgh Z, Korsh J, Gatt C. Acute Shoulder Injuries in Adults. Am Fam Physician. 2016 Jul 15;94(2):119-27. PMID: 27419328.\n\n10. Morgan, C J. Use of proper statistical techniques for research studies with small samples. Am J Physiol Lung Cell Mol Physiol. Oct 2017. 313, 873-877. \n\n11. NCAA and NFL Passing Efficiency computation [Internet]. Stassen.com. [cited 2021May11]. Available from: http://football.stassen.com/pass-eff/ \n\n12. NFL Passer Rating Calculator [Internet]. ProFootballReference.com. Sports Reference LLC; [cited 2021May11]. Available from: https://www.pro-football-reference.com/about/qb-rating.htm \n\n13. NFL Passer Rating Career Leaders [Internet]. Pro-Football-Reference.com. Sports Reference LLC; [cited 2021May11]. Available from: https://www.pro-football-reference.com/leaders/pass_rating_career.html\n\n14. NFL's Passer Rating [Internet]. Pro Football Hall of Fame Official Site. 2005 [cited 2021May11]. Available from: https://www.profootballhof.com/news/nfl-s-passer-rating/ \n\n15. NFL Quarterback Rating Formula [Internet]. QB Rating Calc - Help. NFL.com; 2011 [cited 2021May11]. Available from: https://web.archive.org/web/20110814052052/http://www.nfl.com/help/quarterbackratingformula \n\n16. Pallis M, Cameron KL, Svoboda SJ, Owens BD. Epidemiology of acromioclavicular joint injury in young athletes. Am J Sports Med. 2012 Sep;40(9):2072-7. doi: 10.1177/0363546512450162. Epub 2012 Jun 15. PMID: 22707749.\n\n17. Siwoff, S., & Zimmer, J. (2010). Inside the Numbers. In The Official National Football League Record and Fact Book 2010 (Vol. 91st Season, p. 312). Reference Book, National Football League. \n\n18. Virtanen P, et al. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. Nature Methods. 2020; 17(3), 261-272. \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ggdurrant/nfl-qb-shoulder-injuries"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-10T21:59:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-17T03:01:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Research project exploring performance changes in NFL quarterbacks following shoulder surgery"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Performance Outcomes in NFL Quarterbacks Following Shoulder Injury"
        ],
        "type": "Text_excerpt",
        "value": "Shoulder injuries are among the most common types of upper extremity injuries in both contact and noncontact sports. They are a significant source of morbidity for athletes, accounting for almost one third of all sports-related injuries (Enger). As a result of these factors, shoulder injuries and their post healing metrics are an important area for research in orthopaedics.\n\nShoulder injuries most commonly result from direct trauma or a fall onto the ipsilateral shoulder, making athletes especially prone to these types of injuries (Monica).  Some of the most common injuries in this population include anterior and posterior glenohumeral instability, acromioclavicular pathology (including separation, osteolysis, and osteoarthritis) and rotator cuff tears (Gibbs). Acromioclavicular joint injuries are the most common among the athletic population with an overall incidence rate of 9.2 per 1000 person-years and an average time of 18.4 days lost per athlete (Pallis) followed by Glenohumeral instability at  at 2.79 per 1000 person-years (Lanzi).\n\nWith American football being a high contact sport played at high speeds, the potential for shoulder injuries from minor sprains to career ending tears is significant. Nearly half of players at the NFL combined have reported a history of shoulder injury, with 34% requiring operative intervention (Kaplan). Quarterbacks are particularly affected by shoulder injuries due to their playing position being targeted by the opposing team on every play, and the associated throwing mechanics with their playing actions. Of all QB injuries reported, shoulder injuries are the 2nd most common at 15.2% (Kelly). \n\nThe purpose of this study was to determine (1) the general impact on performance metrics among NFL quarterbacks following shoulder injury and (2) the impact of surgical interventions to repair these injuries had on career outcomes using measures such as passer rating, yards ran, and successful passes. We hypothesized that quarterbacks in the national football league who injure their dominant shoulder will 1) have decreased performance metrics after surgery 2) those that get surgery will have better performance metrics compared to those that do not get surgery.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.846943994418464,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "50 quarterbacks were found to have long-term shoulder injuries, and a subset of these were selected who had first-time shoulder surgery on their dominant, throwing arm. Manual searches were performed to verify the nature of the injury and determine dates of surgery. Age-matched controls were selected with the following criteria:\n - same years of experience \n - same number of career seasons +/- 5\n - same year of NFL play +/- 10\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9570908777173942,
      "result": {
        "original_header": "Detailed",
        "type": "Text_excerpt",
        "value": "Quarterbacks (QBs) who suffered a shoulder injury necessitating placement on the Injured Reserve (IR) list were identified. Placement on the IR indicates a long-term injury rendering players unable to play in the remainder of the season. Pro Sports Transactions IR data from 1980 to 2019 was extracted and entries were filtered for injuries using keywords \"shoulder\", \"labrum\", \"rotator cuff\", \u201cdislocation\u201d, and \u201cAC joint\u201d. An additional manual search of news articles from the NFL, official team websites, and reputable news sources was performed to confirm surgery types and dates and obtain information about players who were placed on the IR without a description of their injury. 65 relevant injuries were found. Of these injuries, 14 were repeat injuries for the same player and 17 were injuries to the non-throwing arm, all of which were excluded. The remaining entries were excluded if the shoulder injury was characterized as a \"bruise\" or a \"strain\", and therefore not serious enough injuries to evaluate. Clavicle injuries were also excluded. Players who did not return to play in more than 1 regular season game were excluded for the performance analysis. A total of 19 QBs who received surgery and 11 QBs who suffered a severe shoulder injury but did not receive surgery were included.  \nQB performance statistics were extracted from Pro Football Reference, which includes statistics by game for players' entire careers. 269 QBs from 1980 to 2020 were found and used as the entire NFL population of QBs. Included performance statistics were selected to be passer rating, passing yards, pass attempts, pass completions, pass completion percentage, passing touchdowns, interceptions, sacks, yards lost to sacks, yards per pass attempt, adjusted yards per pass attempt. Performance statistics were included only if the player attempted more than 1 pass in a game, and statistics were averaged for each game.  \nUnique age and experience matched controls were selected for each QB who underwent surgery. Controls were matched for experience by finding the set of QBs who started in the NFL at the same age. Using surgery dates and birth dates, a surgery age was calculated for each case QB, which was then used as an index age for possible controls. Pre-injury performance was measured by averaging the Passer Rating per game prior to injury, and finding the control QBs with the closest averaged Passer Rating prior to the index age. Passer Rating was selected as the primary performance statistic due to aggregating other important quarterback statistics and its prevalent usage (NFL Quarterback, NFL Passer Career, Katz, NCAA, Siwoff) in comparing quarterbacks since 1973 (NFL\u2019s, Siwoff). Controls were also selected to have played their first NFL game +/- 10 years from the first NFL game played by the case QB. The list of age, experience, performance, and season matched controls were then selected by those with similar career lengths and 3+ games played previous and post index age. Surgical QB performance vs Surgical Control QB performance was then also visually compared by plotting performance statistics over career length to confirm appropriate controls. The same control matching process was used to find unique controls for QBs who did not receive surgical intervention, with an injury date used as the index, to produce the Non-Surgical QBs and the Non-Surgical Control QBs.  \nNormality of performance statistics in the entire population of NFL QBs, as well as in the case and control groups were assessed visually with Q-Q and histogram plots, to establish significance in any deviation from the mean in statistical analyses (Morgan). Performance statistics were compared previous and post surgery or injury for the case QBs. Performance statistics were then compared for Surgical and Non-Surgical QBs and their respective controls, prior to surgery, injury, or index age. A gain score analysis (Knapp) on the change in performance pre- and post-injury or index was performed on the case QBs vs control QBs.  \nTwo sample t-tests were performed for each of these sets of statistics, with a paired t-test on the case QBs pre- and post-surgery or injury, and unpaired t-tests for comparisons between case and control QBs. The t-tests were calculated using the Stats package of SciPy 1.6.0 (Virtanen). The null hypothesis for all tests was that the means of compared populations were not significantly different. An alpha of 0.05 was selected, requiring p-values to be below this threshold to reject the null hypothesis. Plots were created using Matplotlib 3.4.2 (Hunter).  \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8320029822283392,
      "result": {
        "original_header": "Exploratory Data Analysis",
        "type": "Text_excerpt",
        "value": "Here is the EDA, built using scraped data from publicly available NFL performance metrics and Jupyter Notebook. Data was cleaned and loaded into individual CSV files for every available qualifying quarterback, prior to this step of the EDA. \n```python\nimport numpy as np\nimport pandas as pd\nimport math\nfrom math import pi\nfrom datetime import time, datetime\nfrom os import path\nfrom scipy import stats\nfrom scipy.stats import shapiro\nfrom statsmodels.stats.power import TTestIndPower\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8957117504960797,
      "result": {
        "original_header": "Load Data",
        "type": "Text_excerpt",
        "value": "First we load our list of QBs, that we have downloaded and selected in the other notebook: \nMethods to access our CSV files of performance statistics: \nMethods to select QB games by date, selecting all games or # of games before or after the date: \nNow we can get our case qbs and their controls average stats before and after their surgery age, or respective index age: \nLets split them up into individual DataFrames for now: \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8497530050325836,
      "result": {
        "original_header": "Output QB Tables",
        "type": "Text_excerpt",
        "value": "\n```python\nsurg_qbs.to_csv('qb-data/surg_qb_table.csv')\nnonsurg_qbs.to_csv('qb-data/nonsurg_qb_table.csv')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9364614381161993,
      "result": {
        "original_header": "Verify Normal Distribution",
        "type": "Text_excerpt",
        "value": "Lets take the whole population of NFL QBs - 269 in total, and look at the distribution of statistics: \n\n```python\ndef get_all_qb_career_stats(caseslist, controlslist):\n    all_qbs = get_qb_stats('Alex Smith', average=True)\n    all_qbs = all_qbs.to_frame().T\n    for i, row in caseslist.iterrows():\n        qb_stats = get_qb_stats(row.Name, average=True)\n        if i != 0:\n            all_qbs = all_qbs.append(qb_stats, ignore_index=True)\n    for i, row in controlslist.iterrows():\n        qb_stats = get_qb_stats(row.Name, average=True)\n        if stats is not None:\n            all_qbs = all_qbs.append(qb_stats, ignore_index=True)\n    return all_qbs\n``` \nWe can see that the average Passer Rating for the entire population of NFL QBs follows a normal distribution quite well: \n\nWe can plug in other performance statistics we capture to check those too, let's try pass attempts: \n\nWe can also check the distribution of our samples, the case and control QBs. We can do this using a Q-Q plot, which plots two sets of quantiles together so we can visually check if the dependent variable fits a normal distribution. This is important to verify so that we can make claims of statistically significant changes when performances deviate.  \n\nAnd all of our QBs: \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9393655651050925,
      "result": {
        "original_header": "QB Performance Statistics",
        "type": "Text_excerpt",
        "value": "Now lets take a closer look at the performance statistics of QBs. We are looking at passing statistics that are consistently recorded for all of our QBs going back to 1980, these are: Passer Rating (Rate), Completion Percentage (Cmp%), Passing Yards (Yds), Completions (Cmp), Attempts (Att), Yards per Pass Attempt (Y/A), Adjusted Yards per Pass Attempt (AY/A), Passing Touchdowns (TD), Interceptions (Int), Sacks (Sk), and Yards Lost to Sacks (Yds.1).  \nPasser Rating and Adjusted Yards per Attempt are calculations of several aggregated statistics.  \nPasser Rating is calculated as follows: \nAdjusted Yards per Pass Attempt is calculated as follows: \nWe can find an easier way to look at a QB's statistics than numbers on a chart, with a radial plot. Since statistics have very different ranges though, such as passing yards in the hundreds and interceptions per game less than 5, we have to look at these as percentages. Let's calculate a QB's statistics as a percentage of the population average.  \n    c:\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py:4308: SettingWithCopyWarning: \n    A value is trying to be set on a copy of a slice from a DataFrame\n    \n    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n      return super().drop(\n     \nLets plot Alex Smith's statistics before and after his surgery, as a percentage of the average NFL QB statistics. \n\nAnd now lets look at Alex Smith and his control, Michael Vick, for their previous and post surgery/index performances. \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8945316968516016,
      "result": {
        "original_header": "Case QBs Pre and Post Surgery",
        "type": "Text_excerpt",
        "value": "The next step is to examine the performance statistics of our case QBs before and after their surgeries. We can look at the cohort as a whole.  \n\nCompare that with the decline in performance seen in quarterbacks who did not have surgical intervention. \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9320430585974879,
      "result": {
        "original_header": "Statistical Analysis",
        "type": "Text_excerpt",
        "value": "We can output statistics by comparing cohorts using t-tests to identify statistically significant changes. The limiting factor of this data exploration is the small sample sizes. The NFL has very few quarterbacks playing substantial amounts of games at any given time, and fewer suffer serious shoulder injuries. Small sample sizes mean any comparison may not be appropriately powered to draw meaningful conclusions, so performing t-tests on individual statistics between cohorts should let us know if those conclusions are statistically significant.  \nWe can use a paired t-test to examine the effects of a shoulder injury and subsequent surgical or non-surgical intervention, since we are looking at the same related group at 2 different time points.  \nFor example, we can see the p-values for each performance statistic we are looking at. For the case control quarterbacks, it looks like none of the values range from ~0.41 to ~0.92, which are well above the chosen threshold of 0.05 to achieve statistical significance. However, given that none of these quarterbacks suffered an injury, their respective timepoints are arbitrary and so their previous and post performances understandably do not show a correlation.  \nNow we can see the p-values for the case group are much lower, and are under the 0.05 threshold for achieving statistical significance for the following: Passer Rating, Completions, Pass Attempts, Completion Percentage, Passing Yards, Touchdowns, Interceptions, Yards Lost to Sacks, and Adjusted Yards per Pass Attempt. \nNext, rather than comparing one group at 2 timepoints, or 2 groups together at the same timepoint, we can attempt to compare the *change* in performance between groups. We can do so using a Gain Score Analysis, which takes the gain over the timepoint, or how much a group improved or declined, and compare that with the gain of another group. Here we can compare the *change* in performance for our case quarterbacks after surgery vs the *change* in performance of our control quarterbacks who were not injured.  \n\n```python\nfor var in var_list:\n    ttest_ind_gsa(case_prev, case_post, ctrl_prev, ctrl_post, var)\n``` \n\n```python\nfor var in var_list:\n    ttest_ind_gsa(case_prev, case_post, inj_prev, inj_post, var)\n``` \nWe can see that there is a statistically significant difference in Passer Rating, Completions, Completion Percentage, Passing Yards, Touchdowns, Yards per Pass Attempt, and Adjusted Yards per Pass Attempt. This indicates there is a potential positive effect on quarterbacks who have surgical intervention following a shoulder injury vs those who are treated non-surgically.  \nBelow is a table showing the average peformance metric +/- 1 SD for the cohort of quarterbacks who were injured and had surgery and those who were injured and did not have surgery. There is a p-value for each cohort's previous and post performance, as well as the raw numbers of the gain score analysis and p-values associated with those.  \nWe can also calculate the power of this study. Statistical power is ideally greater than 0.80 for robust studies, but in small sample size studies it decreases. With a small sample size of NFL quarterbacks, it is expectedly underpowered, but it still allows for conclusions to be drawn. Comparing the case and control groups show the power of this t-test would be 0.5962. Comparable articles in the sports science literature have to use small sample sizes, for example Busfield et al. (https://www.arthroscopyjournal.org/article/S0749-8063(09)00193-5/fulltext).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9626505152965456,
      "result": {
        "original_header": "Conclusion",
        "type": "Text_excerpt",
        "value": "Despite small sample sizes, detailed performance metrics of NFL quarterbacks have allowed use to analyze performances with regards to shoulder injury and surgery. We can draw preliminary conclusions from the data that quarterbacks who suffer severe shoulder injuries who are treated surgically, tend to have statistically significant improvements in performances upon their return, when compared to their prior performance, and the performance of quarterbacks who were similarly injured but treated non-surgically.  \nFurther research may include examining greater sample sizes such as collegiate football quarterbacks, a wider range of performance metrics such as pass lengths, and stratification of cohorts based on specific shoulder injury.  \nThere are many limitations to this exploratory analysis. Primarily, the sample size is small, and therefore the power of these statistical tests is smaller. This means that the effects of surgical and non-surgical intervention on quarterback performance should be looked into further, as the data is tending towards surgical intervention improving outcomes but at a very low sample size.  \nThere are also only a few selected statistics used to draw conclusions here, which will no doubt increase in the future as tracking these performance metrics becomes more common and detailed. There will be opportunities in the future to take advantage of these metrics, or even increase the sample size by looking at college football for example.  \nThe data outputted from this exploratory data analysis has been used in the posters and pre-papers of \"Performance Following Surgical and Non-surgical\nManagement of Shoulder Injury in NFL Quarterbacks\" by Frederick Durrant B.S., George Durrant M.Eng., Martinus Megalla B.A., Teja Makkapati B.A., Nareena Imam B.A., Rocco Bassora M.D., and Frank Alberta M.D., in conjunction with Hackensack Meridian School of Medicine and the Rothman Orthopedic Institute. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.949669147616068,
      "result": {
        "original_header": "Appendix",
        "type": "Text_excerpt",
        "value": "Assorted graphs indicating NFL QB performance over time vs controls of the population of all NFL QBs in the dataset. \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ggdurrant/nfl-qb-shoulder-injuries/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Injury%20Stratified.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Injury%20Stratified.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Manuscript.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Manuscript.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL_QB_Markdown.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL_QB_Markdown.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Graphs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Graphs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Publish.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/NFL%20QB%20Publish.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ggdurrant/nfl-qb-shoulder-injuries/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ggdurrant/nfl-qb-shoulder-injuries"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Performance Outcomes in NFL Quarterbacks Following Shoulder Injury"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/favicon.ico"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_40_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_42_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_46_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_48_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_49_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_60_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_63_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_65_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_69_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_71_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_73_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_75_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_78_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_79_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_82_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_83_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_84_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/nfl-qb-stats.PNG"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_113_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_114_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_115_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_116_0.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main//images/NFL_QB_Markdown_117_15.png"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.999975310422256,
      "result": {
        "original_header": "QB Performance Statistics",
        "type": "Text_excerpt",
        "value": "    c:\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py:4308: SettingWithCopyWarning: \n    A value is trying to be set on a copy of a slice from a DataFrame\n    \n    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n      return super().drop(\n     \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9727654536666548,
      "result": {
        "original_header": "Statistical Analysis",
        "type": "Text_excerpt",
        "value": "    Rate 0.461702\n    Previous: 78.9109    Post: 80.6392    Difference: +1.7282\n           n: 19      t-value: -0.7521       p-value: 0.4617\n    Cmp 0.916577\n    Previous: 16.7589    Post: 16.6298    Difference: -0.1292\n           n: 19      t-value: 0.1062       p-value: 0.9166\n    Att 0.599649\n    Previous: 28.7980    Post: 27.7740    Difference: -1.0240\n           n: 19      t-value: 0.5343       p-value: 0.5996\n    Cmp% 0.768927\n    Previous: 57.5311    Post: 57.9723    Difference: +0.4411\n           n: 19      t-value: -0.2983       p-value: 0.7689\n    Yds 0.727577\n    Previous: 198.5172    Post: 193.2015    Difference: -5.3158\n           n: 19      t-value: 0.3538       p-value: 0.7276\n    TD 0.698892\n    Previous: 1.2078    Post: 1.1704    Difference: -0.0374\n           n: 19      t-value: 0.3931       p-value: 0.6989\n    Int 0.727993\n    Previous: 0.9671    Post: 0.9202    Difference: -0.0469\n           n: 19      t-value: 0.3533       p-value: 0.7280\n    Sk 0.439128\n    Previous: 2.0988    Post: 1.9381    Difference: -0.1607\n           n: 19      t-value: 0.7912       p-value: 0.4391\n    Yds.1 0.414806\n    Previous: 13.8526    Post: 12.6836    Difference: -1.1690\n           n: 19      t-value: 0.8347       p-value: 0.4148\n    Y/A 0.700472\n    Previous: 6.8588    Post: 6.7502    Difference: -0.1086\n           n: 19      t-value: 0.3909       p-value: 0.7005\n    AY/A 0.811582\n    Previous: 6.1730    Post: 6.0977    Difference: -0.0753\n           n: 19      t-value: 0.2419       p-value: 0.8116\n     \n    Rate 0.001764\n    Previous: 74.7038    Post: 84.3321    Difference: +9.6283\n           n: 19      t-value: -3.6670       p-value: 0.0018\n    Cmp 0.000914\n    Previous: 16.1113    Post: 18.7180    Difference: +2.6067\n           n: 19      t-value: -3.9620       p-value: 0.0009\n    Att 0.042101\n    Previous: 27.9853    Post: 29.8854    Difference: +1.9000\n           n: 19      t-value: -2.1880       p-value: 0.0421\n    Cmp% 0.000009\n    Previous: 56.6555    Post: 61.5307    Difference: +4.8753\n           n: 19      t-value: -6.0958       p-value: 0.0000\n    Yds 0.029363\n    Previous: 185.4761    Post: 207.8934    Difference: +22.4174\n           n: 19      t-value: -2.3667       p-value: 0.0294\n    TD 0.019184\n    Previous: 1.0627    Post: 1.2850    Difference: +0.2222\n           n: 19      t-value: -2.5723       p-value: 0.0192\n    Int 0.009196\n    Previous: 1.0079    Post: 0.8136    Difference: -0.1943\n           n: 19      t-value: 2.9173       p-value: 0.0092\n    Sk 0.314115\n    Previous: 2.1218    Post: 1.9864    Difference: -0.1354\n           n: 19      t-value: 1.0356       p-value: 0.3141\n    Yds.1 0.048746\n    Previous: 14.2028    Post: 12.5181    Difference: -1.6847\n           n: 19      t-value: 2.1139       p-value: 0.0487\n    Y/A 0.234517\n    Previous: 6.6000    Post: 6.8320    Difference: +0.2320\n           n: 19      t-value: -1.2300       p-value: 0.2345\n    AY/A 0.023223\n    Previous: 5.5597    Post: 6.4094    Difference: +0.8496\n           n: 19      t-value: -2.4806       p-value: 0.0232\n     \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8988280513469421,
      "result": {
        "original_header": "Exploratory Data Analysis",
        "type": "Text_excerpt",
        "value": "Here is the EDA, built using scraped data from publicly available NFL performance metrics and Jupyter Notebook. Data was cleaned and loaded into individual CSV files for every available qualifying quarterback, prior to this step of the EDA. \n```python\nimport numpy as np\nimport pandas as pd\nimport math\nfrom math import pi\nfrom datetime import time, datetime\nfrom os import path\nfrom scipy import stats\nfrom scipy.stats import shapiro\nfrom statsmodels.stats.power import TTestIndPower\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8001273193922284,
      "result": {
        "original_header": "Load Data",
        "type": "Text_excerpt",
        "value": "\n```python\ndef get_qb_stats_by_age(name, age, all_games=True, n_games=0, before=False, after=False):\n    stats = get_qb_stats(name)\n    if stats is None:\n        return\n    for a in stats['Age']:\n        if a>age:\n            qb_age = a\n            break\n    if age>a:\n        return\n    qb_date = stats[stats['Age']==qb_age]['Date'].to_string(index=False)[:] \n    if all_games:\n        if after:\n            result = get_qb_games(name, qb_date, all_games=True, average=True, after=True)\n        else:\n            result = get_qb_games(name, qb_date, all_games=True, average=True, before=True)\n    else:\n        if after:\n            result = get_qb_games(name, qb_date, games=n_games, average=False, after=True)\n        else:\n            result = get_qb_games(name, qb_date, games=n_games, average=True, before=True)\n    return result\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.888556209882768,
      "result": {
        "original_header": "Output QB Tables",
        "type": "Text_excerpt",
        "value": "\n```python\nsurg_qbs.to_csv('qb-data/surg_qb_table.csv')\nnonsurg_qbs.to_csv('qb-data/nonsurg_qb_table.csv')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8950675095349236,
      "result": {
        "original_header": "Verify Normal Distribution",
        "type": "Text_excerpt",
        "value": "\n```python\ndef plot_hist_by_var(all_qbs, var):\n    plt.figure(figsize=(10,6))\n    mu, sigma = all_qbs[var].mean(), all_qbs[var].std()\n    n, bins, patches = plt.hist(all_qbs[var], 30, density=True, alpha=0.75, color=blue)\n    x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)\n    plt.plot(x, stats.norm.pdf(x, mu, sigma), color=red)\n    plt.xlabel(stat_names[var])\n    plt.ylabel('Frequency')\n    plt.title('Distribution of QB {}'.format(stat_names[var]))\n    plt.show()\n``` \n\n```python\ndef probplot_by_var(qb_stats, var):\n    fig = plt.figure(figsize=(10,6))\n    ax = fig.add_subplot(111)\n    stats.probplot(qb_stats[var], plot=plt)\n    ax.get_lines()[0].set_markerfacecolor(blue)\n    ax.get_lines()[1].set_color(red)\n    plt.title('Probability Plot of {}'.format(stat_names[var]))\n    plt.show()\n``` \n\n```python\ncohorts = [case_prev, case_post, ctrl_prev, ctrl_post]\ncohort_names = ['Surgical: Previous', 'Surgical: Post', 'Surgical Control: Previous', 'Surgical Control: Post']\nfig = plt.figure(figsize=(12,8))\nfor i in range(4):\n    ax = fig.add_subplot(2,2,i+1)\n    stats.probplot(cohorts[i]['Rate'], plot=plt)\n    ax.get_lines()[0].set_markerfacecolor(blue)\n    ax.get_lines()[1].set_color(red)\n    ax.set_title(cohort_names[i])\n    \nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.suptitle('Surgical QB Probability Plots: Passer Rating')\nplt.show()\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8576487133888961,
      "result": {
        "original_header": "QB Performance Statistics",
        "type": "Text_excerpt",
        "value": "\n```python\ndef get_player_percent(player, df, all_qbs):\n    res = df[df['Name']==player]\n    res.set_index('Name', drop=True, inplace=True)\n    res.drop(columns=['Age', 'Games'], inplace=True)\n    res = res[['Rate', 'Cmp%', 'Yds', 'Cmp', 'Att', 'Y/A', 'AY/A', 'TD', 'Int', 'Sk', 'Yds.1']]\n    for var in res.columns:\n        avgvar = all_qbs[var].mean()\n        res[var] = res[var]/avgvar\n    return res\n``` \n\n```python\ndef radar_plot(df1, df2, df3=None, df4=None, prevpost=False, max_val=1.5):    \n    label1 = df1.index[0]+' (Previous)' if prevpost else df1.index[0]\n    label2 = df2.index[0]+' (Post)' if prevpost else df2.index[0]\n    if df3 is not None and df4 is not None:\n        plt.figure(figsize=(18,18))\n        ax = plt.subplot(121, polar=True)\n    else: \n        plt.figure(figsize=(14,8))\n        ax = plt.subplot(111, polar=True)\n        plt.title('{} vs {}: % of NFL Average'.format(label1, label2))\n\n    categories=list(df1)\n    N = len(categories)\n    angles = [n / float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n    plt.xticks(angles[:-1], categories, color='black', size=12)\n    ax.set_rlabel_position(0)\n    yticks = [max_val*i/6 for i in range(1,6)]\n    plt.yticks(yticks, [str(e) for e in yticks], color='grey', size=14)\n    plt.ylim(0,max_val)\n    colors = ['blue','red']\n    \n    values1 = df1.values.flatten().tolist()\n    values1 += values1[:1]\n    ax.plot(angles, values1, linewidth=1, linestyle='solid', color=colors[0], label=label1)\n    ax.fill(angles, values1, color=colors[0], alpha=0.1)\n    values2 = df2.values.flatten().tolist()\n    values2 += values2[:1]\n    ax.plot(angles, values2, linewidth=1, linestyle='solid', color=colors[1], label=label2)\n    ax.fill(angles, values2, color=colors[1], alpha=0.1)\n    plt.legend(loc=0, bbox_to_anchor=(0.1, 0.1), prop={'size': 13})\n    \n    if df3 is not None and df4 is not None:\n        plt.title('{} vs {}: Previous, % of NFL Average'.format(label1, label2))\n        ax = plt.subplot(122, polar=True)\n        plt.xticks(angles[:-1], categories, color='black', size=12)\n        ax.set_rlabel_position(0)\n        yticks = [max_val*i/6 for i in range(1,6)]\n        plt.yticks(yticks, [str(e) for e in yticks], color='grey', size=14)\n        plt.ylim(0,max_val)\n        values1 = df3.values.flatten().tolist()\n        values1 += values1[:1]\n        ax.plot(angles, values1, linewidth=1, linestyle='solid', color=colors[0], label=df3.index[0])\n        ax.fill(angles, values1, color=colors[0], alpha=0.1)\n        values2 = df4.values.flatten().tolist()\n        values2 += values2[:1]\n        ax.plot(angles, values2, linewidth=1, linestyle='solid', color=colors[1], label=df4.index[0])\n        ax.fill(angles, values2, color=colors[1], alpha=0.1)\n        plt.legend(loc=0, bbox_to_anchor=(0.1, 0.1), prop={'size': 13})\n        plt.title('{} vs {}: Post, % of NFL Average'.format(df3.index[0], df4.index[0]))\n    plt.show()\n``` \n\n```python\nradar_plot(smith_prev, smith_post, prevpost=True)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8566733637617795,
      "result": {
        "original_header": "Case QBs Pre and Post Surgery",
        "type": "Text_excerpt",
        "value": "\n```python\ndef plot_pre_post(case_prev, case_post, var):\n    var_conv = {'Rate': 9, 'Games': 1, 'Cmp': 3, 'Att': 4, 'Cmp%': 5, 'Yds': 6, 'TD': 7, 'Int': 8, 'Sk': 10, 'Yds.1': 11, 'Y/A': 12, 'AY/A': 13}\n    var_name = var\n    var = var_conv[var]\n    fig, (ax1, ax2) = plt.subplots(1,2,figsize=(10,6))\n    for i in range(len(case_prev)):\n        ax1.scatter(i/36, case_prev.iloc[i,var], color=blue, alpha=0.75)\n        ax1.scatter(1+i/36, case_post.iloc[i,var], color=red, alpha=0.75)\n    ax1.plot([0,0.5], [case_prev.iloc[:,var].mean(), case_prev.iloc[:,var].mean()], color=blue, linewidth=3)\n    ax1.plot([1,1.5], [case_post.iloc[:,var].mean(), case_post.iloc[:,var].mean()], color=red, linewidth=3)\n    \n    ax1.set_xlim(-0.5,2)\n    ax1.set_xticks([.25,1.25])\n    ax1.set_xticklabels(['Previous', 'Post'])\n    ax1.set_ylabel(stat_names[var_name])\n\n    for i in range(len(case_prev)):\n        ax2.scatter(1, case_prev.iloc[i,var], color=blue, alpha=0.75)\n        ax2.scatter(2, case_post.iloc[i,var], color=red, alpha=0.75)\n        if case_post.iloc[i,var] - case_prev.iloc[i,var] > 0:\n            c = 'green'\n        else:\n            c = 'red'\n        ax2.plot([1, 2], [case_prev.iloc[i,var], case_post.iloc[i,var]], color=c, linewidth=0.5, alpha=0.5)\n    ax2.set_xlim(0.5,2.5)\n    ax2.set_xticks([1,2])\n    ax2.set_xticklabels(['Previous', 'Post'])\n\n    return ax1, ax2\n``` \n\n```python\nplot_pre_post(case_prev, case_post, 'Rate')\nplt.suptitle('Surgical QB Passer Rating')\nplt.show()\n``` \n\n```python\nplot_pre_post(ctrl_prev, ctrl_post, 'Rate')\nplt.suptitle('Surgical Control QB Passer Rating')\nplt.show()\n``` \n\n```python\nplot_pre_post(inj_prev, inj_post, 'Rate')\nplt.suptitle('Non-Surgical QB Passer Rating')\nplt.show()\n``` \n\n```python\nplot_pre_post(inj_ctrl_prev, inj_ctrl_post, 'Rate')\nplt.suptitle('Non-Surgical Control QB Passer Rating')\nplt.show()\n``` \n\n```python\ndef plot_case_control(case_prev, case_post, ctrl_prev, ctrl_post, var):\n    var_conv = {'Rate': 9, 'Games': 1, 'Cmp': 3, 'Att': 4, 'Cmp%': 5, 'Yds': 6, 'TD': 7, 'Int': 8, 'Sk': 10, 'Yds.1': 11, 'Y/A': 12, 'AY/A': 13}\n    var_name = var\n    var = var_conv[var]\n    length = len(case_prev)\n    fig, ax = plt.subplots(figsize=(10,6))\n    if len(case_prev)!=len(ctrl_prev):\n        for i in range(len(case_prev)):\n            ax.scatter(1.5+i/length, case_prev.iloc[i,var], color=red, alpha=0.75)\n            ax.scatter(6+i/length, case_post.iloc[i,var], color=red, marker='^', alpha=0.75)\n        for j in range(len(ctrl_prev)):\n            ax.scatter(3+j/length, ctrl_prev.iloc[j,var], color=blue, alpha=0.75)\n            ax.scatter(7.5+j/length, ctrl_post.iloc[j,var], color=blue, marker='^', alpha=0.75)\n    else:\n        for i in range(len(case_prev)):\n            ax.scatter(1.5+i/length, case_prev.iloc[i,var], color=red, alpha=0.75)\n            ax.scatter(3+i/length, ctrl_prev.iloc[i,var], color=blue, alpha=0.75)\n            ax.scatter(6+i/length, case_post.iloc[i,var], color=red, marker='^', alpha=0.75)\n            ax.scatter(7.5+i/length, ctrl_post.iloc[i,var], color=blue, marker='^', alpha=0.75)\n    ax.plot([1.5,2.5], [case_prev.iloc[:,var].mean(), case_prev.iloc[:,var].mean()], color=red, linewidth=3)\n    ax.plot([3,4], [ctrl_prev.iloc[:,var].mean(), ctrl_prev.iloc[:,var].mean()], color=blue, linewidth=3)\n    ax.plot([6,7], [case_post.iloc[:,var].mean(), case_post.iloc[:,var].mean()], color=red, linestyle=':',linewidth=3)\n    ax.plot([7.5,8.5], [ctrl_post.iloc[:,var].mean(), ctrl_post.iloc[:,var].mean()], color=blue, linestyle=':',linewidth=3)\n    ax.set_xlim(0,10)\n    ax.set_xticks([2.75, 7.25])\n    ax.set_xticklabels(['Previous', 'Post'])\n    ax.set_ylabel('{}'.format(stat_names[var_name]))\n    return ax\n``` \n\n```python\ndef plot_pre_post_two_cohorts(case_prev, case_post, ctrl_prev, ctrl_post, var):\n    var_conv = {'Rate': 9, 'Games': 1, 'Cmp': 3, 'Att': 4, 'Cmp%': 5, 'Yds': 6, 'TD': 7, 'Int': 8, 'Sk': 10, 'Yds.1': 11, 'Y/A': 12, 'AY/A': 13}\n    var_name = var\n    var = var_conv[var]\n    fig, (ax1, ax2) = plt.subplots(1,2,figsize=(10,6))\n    for i in range(len(case_prev)):\n        ax1.scatter(i/36, case_prev.iloc[i,var], color=blue, alpha=0.75)\n        ax1.scatter(1+i/36, case_post.iloc[i,var], color=red, alpha=0.75)\n    ax1.plot([0,0.5], [case_prev.iloc[:,var].mean(), case_prev.iloc[:,var].mean()], color=blue, linewidth=3)\n    ax1.plot([1,1.5], [case_post.iloc[:,var].mean(), case_post.iloc[:,var].mean()], color=red, linewidth=3)\n    \n    ax1.set_xlim(-0.5,2)\n    ax1.set_ylim(20,110)\n    ax1.set_xticks([.25,1.25])\n    ax1.set_xticklabels(['Previous', 'Post'])\n    ax1.set_ylabel(stat_names[var_name])\n\n    for i in range(len(ctrl_prev)):\n        ax2.scatter(i/36, ctrl_prev.iloc[i,var], color=blue, alpha=0.75)\n        ax2.scatter(1+i/36, ctrl_post.iloc[i,var], color=red, alpha=0.75)\n    ax2.plot([0,0.5], [ctrl_prev.iloc[:,var].mean(), ctrl_prev.iloc[:,var].mean()], color=blue, linewidth=3)\n    ax2.plot([1,1.5], [ctrl_post.iloc[:,var].mean(), ctrl_post.iloc[:,var].mean()], color=red, linewidth=3)\n    \n    ax2.set_xlim(-0.5,2)\n    ax2.set_ylim(20,110)\n    ax2.set_xticks([.25,1.25])\n    ax2.set_xticklabels(['Previous', 'Post'])\n\n    return ax1, ax2\n``` \n\n```python\nax1, ax2 = plot_pre_post_two_cohorts(case_prev, case_post, ctrl_prev, ctrl_post, 'Rate')\nax1.set_title('Surgical')\nax2.set_title('Surgical Control')\nplt.show()\n``` \n```python\nax1, ax2 = plot_pre_post_two_cohorts(case_prev, case_post, inj_prev, inj_post, 'Rate')\nax1.set_title('Surgical')\nax2.set_title('Non-Surgical')\nplt.show()\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8755458417511242,
      "result": {
        "original_header": "Statistical Analysis",
        "type": "Text_excerpt",
        "value": "\n```python\ndef ttest_ind_gsa(case_prev, case_post, ctrl_prev, ctrl_post, var):\n    n = len(case_prev)\n    case_diff = case_post[var]-case_prev[var]\n    ctrl_diff = ctrl_post[var]-ctrl_prev[var]\n    diff = case_diff.mean()-ctrl_diff.mean()\n    sign = '+' if diff>0 else ''\n    ttest = stats.ttest_ind(case_diff, ctrl_diff);\n    print(var+' %1.6f'%ttest[1])\n    print('Case: %1.4f'%case_diff.mean()+'    Control: %1.4f'%ctrl_diff.mean()+'    Gain Score: '+sign+'%1.4f'%diff)\n    print('   n: %1d'%n+'        t-value: %1.4f'%ttest[0]+'       p-value: %1.6f'%ttest[1])\n    return(case_diff.mean()-ctrl_diff.mean(), ttest[1])\n\ndef ttest_rel_by_var(prev, post, var):\n    n = len(prev)\n    prev_mean = prev[var].mean()\n    post_mean = post[var].mean()\n    diff = post_mean-prev_mean\n    sign='+' if diff>0 else ''\n    ttest = stats.ttest_rel(prev[var], post[var])\n    print(var+' %1.6f'%ttest[1])\n    print('Previous: %1.4f'%prev_mean+'    Post: %1.4f'%post_mean+'    Difference: '+sign+'%1.4f'%diff)\n    print('       n: %1d'%n+'      t-value: %1.4f'%ttest[0]+'       p-value: %1.4f'%ttest[1])\n    return diff, ttest[1]\n\ndef ttest_ind_by_var(case, ctrl, var):\n    n = len(case)\n    case_mean = case[var].mean()\n    ctrl_mean = ctrl[var].mean()\n    diff = case_mean-ctrl_mean\n    sign = '+' if diff>0 else ''\n    ttest = stats.ttest_ind(case[var], ctrl[var])\n    print(var+' %1.6f'%ttest[1])\n    print('Case: %1.4f'%case_mean+'    Control: %1.4f'%ctrl_mean+'    Difference: '+sign+'%1.4f'%diff)\n    print('   n: %1d'%n+'         t-value: %1.4f'%ttest[0]+'       p-value: %1.4f'%ttest[1])\n    return diff, ttest[1]\n\ndef pooled_standard_deviation(sample1,sample2):\n    n1, n2 = len(sample1), len(sample2)\n    var1, var2 = np.var(sample1, ddof=1), np.var(sample2, ddof=1)\n    numerator = ((n1-1) * var1) + ((n2-1) * var2)\n    denominator = n1+n2-2\n    return np.sqrt(numerator/denominator)\n\ndef Cohens_d(sample1, sample2):\n    u1, u2 = np.mean(sample1), np.mean(sample2)\n    s_pooled = pooled_standard_deviation(sample1, sample2)\n    return ((u1 - u2) / s_pooled)\n\ndef calc_power(case_prev, case_post, ctrl_prev, ctrl_post, var='Rate', alpha=0.05, ratio=1):\n    case_diff = case_post[var]-case_prev[var]\n    ctrl_diff = ctrl_post[var]-ctrl_prev[var]\n    effect_size = Cohens_d(case_diff, ctrl_diff)\n    analysis = TTestIndPower()\n    power = analysis.solve_power(effect_size, power=None, nobs1=len(case_diff), ratio=ratio, alpha=alpha)\n    return power\n\nvar_list = ['Rate', 'Cmp', 'Att', 'Cmp%', 'Yds', 'TD', 'Int', 'Sk', 'Yds.1', 'Y/A', 'AY/A']\n``` \n\n```python\nfor var in var_list:\n    d, t = ttest_rel_by_var(ctrl_prev, ctrl_post, var)\n    # print(var, '%0.6f'%t)\n``` \n\n```python\n\nfor var in var_list:\n    d, t = ttest_rel_by_var(case_prev, case_post, var)\n    # print(var, '%0.6f'%t)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8540639851192996,
      "result": {
        "original_header": "Appendix",
        "type": "Text_excerpt",
        "value": "\n```python\n%matplotlib inline\nsns.set()\nred = (255/255,103/255,103/255)\n# red = (.9, 0.4, 0.4)\nblue = (52/255,128/255,255/255, 1)\n# red = np.array([.9, .4, .4])\nblue = np.array([.2, .4, .9])\nred = np.array(red)\n``` \n\n```python\ndef plot_case_control_by_year(cases, controls, var):\n    plt.figure(figsize=(12,76))\n    for i, row in cases.iterrows():\n        plt.subplot(len(cases),1,i+1)\n        ctrl = controls[row.Name]\n        case_stats = get_qb_yearly_stats(row.Name)\n        ctrl_stats = get_qb_yearly_stats(ctrl)\n        case_prev = case_stats[case_stats['Age'] < row.SurgeryAge]\n        case_post = case_stats[case_stats['Age'] > row.SurgeryAge]\n        ctrl_prev = ctrl_stats[ctrl_stats['Age'] < row.SurgeryAge]\n        ctrl_post = ctrl_stats[ctrl_stats['Age'] > row.SurgeryAge]\n        labels= ['Case: Previous', 'Case: Post', 'Control: Previous', 'Control: Post', 'Surgery']\n\n        print(case_prev.Age.shape)\n\n        plt.scatter(case_prev.Age, case_prev['{}'.format(var)], c=red)\n        plt.plot(case_prev.Age, case_prev['{}'.format(var)], c=red, linewidth=0.5)\n        plt.scatter(case_post.Age, case_post['{}'.format(var)], c=red, marker='^')\n        plt.plot(case_post.Age, case_post['{}'.format(var)], c=red, linestyle='-.', linewidth=1)\n        plt.scatter(ctrl_prev.Age, ctrl_prev['{}'.format(var)], c=blue)\n        plt.plot(ctrl_prev.Age, ctrl_prev['{}'.format(var)], c=blue, linewidth=0.5)\n        plt.scatter(ctrl_post.Age, ctrl_post['{}'.format(var)], c=blue, marker='^')\n        plt.plot(ctrl_post.Age, ctrl_post['{}'.format(var)], c=blue, linestyle='-.', linewidth=1)\n        plt.axvline(x=row.SurgeryAge, color='green') \n        plt.plot([ctrl_prev.Age.values[-1],ctrl_post.Age.values[0]], [ctrl_prev['{}'.format(var)].values[-1],ctrl_post['{}'.format(var)].values[0]], color=blue, linestyle='-.',linewidth=0.5)\n        plt.legend(labels, fontsize='medium', loc='lower right')\n        plt.title('Case: {} vs Control: {}, for {} over Age'.format(row.Name, ctrl, var))\n        plt.ylabel('{}'.format(var))\n        plt.xlabel('Age')\n    plt.tight_layout()\n    plt.show()\n\ndef plot_case_pop_by_year(cases, all_controls, var):\n    plt.figure(figsize=(12,76))\n    for i, row in cases.iterrows():\n        plt.subplot(len(cases),1,i+1)\n        case_stats = get_qb_yearly_stats(row.Name)\n        ctrl_stats = all_controls\n        firstage = case_stats.iloc[0, 0]\n        lastage = case_stats.iloc[-1, 0]\n        case_prev = case_stats[case_stats['Age'] < row.SurgeryAge]\n        case_post = case_stats[case_stats['Age'] > row.SurgeryAge]\n        ctrl_prev = ctrl_stats[(ctrl_stats['Age'] < row.SurgeryAge) & (ctrl_stats['Age'] > firstage-1)]\n        ctrl_post = ctrl_stats[(ctrl_stats['Age'] > row.SurgeryAge) & (ctrl_stats['Age'] < lastage+1)]\n        labels= ['Case: Previous', 'Case: Post', 'Control: Previous', 'Control: Post', 'Surgery']\n\n        plt.scatter(case_prev.Age, case_prev['{}'.format(var)], color=red)\n        plt.plot(case_prev.Age, case_prev['{}'.format(var)], color=red, linewidth=0.5)\n        plt.scatter(case_post.Age, case_post['{}'.format(var)], color=red, marker='^')\n        plt.plot(case_post.Age, case_post['{}'.format(var)], color=red, linestyle='-.', linewidth=0.5)\n        plt.scatter(ctrl_prev.Age, ctrl_prev['{}'.format(var)], color=blue)\n        plt.plot(ctrl_prev.Age, ctrl_prev['{}'.format(var)], color=blue, linewidth=0.5)\n        plt.scatter(ctrl_post.Age, ctrl_post['{}'.format(var)], color=blue, marker='^')\n        plt.plot(ctrl_post.Age, ctrl_post['{}'.format(var)], color=blue, linestyle='-.', linewidth=0.5)\n        plt.plot([ctrl_prev.Age.values[-1],ctrl_post.Age.values[0]], [ctrl_prev['{}'.format(var)].values[-1],ctrl_post['{}'.format(var)].values[0]], color=blue, linestyle='-.', linewidth=0.5)\n        plt.axvline(x=row.SurgeryAge, color='green') \n        plt.legend(labels, fontsize='medium', loc='lower right')\n        plt.title('{} vs All Controls, for {} over Age'.format(row.Name, var))\n        plt.ylabel('{}'.format(var))\n        plt.xlabel('Age')\n    plt.tight_layout()\n    plt.show()\n    \ndef plot_avg_var_by_year(df, var):\n    plt.figure(figsize=(18,6))\n    plt.scatter(df.Age, df['{}'.format(var)], c=df.Count, cmap='coolwarm')\n    plt.title('Average {} vs Age'.format(var))\n    plt.xlabel('Age')\n    plt.ylabel('{}'.format(var))\n    plt.colorbar()\n    if var=='Rate':\n        plt.ylim(50, 120)\n    plt.show()\n    \ndef plot_case_ctrl_pop(case, ctrl, pop, var):\n    plt.figure(figsize=(16,6))\n    plt.scatter(case.Age, case['{}'.format(var)], color=red)\n    plt.plot(case.Age, case['{}'.format(var)], color=red, linewidth=0.5)\n    plt.scatter(ctrl.Age, ctrl['{}'.format(var)], color=blue, marker='^')\n    plt.plot(ctrl.Age, ctrl['{}'.format(var)], color=blue, linewidth=0.5)\n    plt.plot(pop.Age, pop['{}'.format(var)], color='green')\n    plt.fill_between(pop.Age, pop['{}'.format(var)]+pop['Std{}'.format(var)], pop['{}'.format(var)]-pop['Std{}'.format(var)], color='grey', alpha=0.10)\n    plt.title('Average {} vs Age'.format(var))\n    plt.ylabel('{}'.format(var))\n    plt.xlabel('Age')\n    plt.legend(['Case', 'Control', 'Population'])\n#     plt.legend(['Surgery', 'Non-Surgery', 'Population'])\n\ndef get_qb_yearly_stats(name):\n    result = pd.DataFrame()\n    stats = get_qb_stats(name)\n    if stats is None:\n        return\n    curr_age = math.floor(stats['Age'][0])    \n    first = 0\n    for i, row in stats.iterrows():\n        if math.floor(row.Age) == curr_age+1:\n            year = stats.iloc[first:i, :].mean()\n            year['Age'] = math.floor(year['Age'])\n            year['Games'] = i-first\n            result = result.append(year, ignore_index=True)\n            curr_age = math.floor(row.Age)\n            first = i   \n        \n        elif math.floor(row.Age) > curr_age+1:\n            year = stats.iloc[first:i, :].mean()\n            year['Age'] = math.floor(year['Age'])\n            year['Games'] = i-first\n            result = result.append(year, ignore_index=True)\n            blank = pd.Series(dtype='float64');\n            blank['Age'] = curr_age + 1\n            blank['Games'] = 0\n            result = result.append(blank, ignore_index=True)\n            curr_age = math.floor(row.Age)\n            first = i\n            \n        if i==len(stats)-1:\n            year = stats.iloc[first:i+1, :].mean()\n            year['Age'] = math.floor(year['Age'])\n            year['Games'] = i+1-first\n            result = result.append(year, ignore_index=True)\n                            \n    result['Games'] = pd.to_numeric(result['Games'], downcast='integer')\n    result['Age'] = pd.to_numeric(result['Age'], downcast='integer')\n    return result[['Age', 'Games', 'Cmp', 'Att', 'Cmp%', 'Yds', 'TD', 'Int', 'Rate', 'Sk', 'Yds.1', 'Y/A', 'AY/A']]\n\ndef get_avg_stats_by_age(qblist):\n    age_stats = {}\n    for i, row in qblist.iterrows():\n        stats = get_qb_yearly_stats(row.Name) \n        if stats is not None:\n            for j in range(20, 45):\n                if j in list(stats['Age']):\n                    if j in age_stats:\n                        age_stats[j].append(stats[stats['Age']==j])\n                    else:\n                        age_stats[j] = [stats[stats['Age']==j]]\n                        \n    all_ages = pd.DataFrame()\n    for age in age_stats.keys():\n        age_df = pd.DataFrame()\n        for entry in age_stats[age]:\n            # if played more than 1 game at this age\n            if entry.reset_index(drop=True).Games[0] > 1:    \n                age_df = age_df.append(entry)\n\n        curr_age = age_df.mean()\n        for var in age_df.columns:\n            if var != 'Age' and var != 'Games':\n                curr_age['Std{}'.format(var)] = age_df['{}'.format(var)].std()\n        \n        curr_age['Count'] = len(age_df)\n        all_ages = all_ages.append(curr_age, ignore_index=True)\n        \n    all_ages['Age'] = pd.to_numeric(all_ages['Age'], downcast='integer')\n    all_ages['Count'] = pd.to_numeric(all_ages['Count'], downcast='integer')\n    all_ages.sort_values(by=['Age'], inplace=True)\n    all_ages.reset_index(drop=True, inplace=True)\n    return all_ages[['Age','Count','Games','Cmp','StdCmp','Att','StdAtt','Cmp%','StdCmp%','Yds','StdYds','TD','StdTD','Int','StdInt','Rate','StdRate','Sk','StdSk','Yds.1','StdYds.1','Y/A','StdY/A','AY/A','StdAY/A']]\n``` \n\n```python\ncase_avg = get_avg_stats_by_age(case_qbs)\nctrl_avg = get_avg_stats_by_age(pd.DataFrame(columns=['Name'],data=select_ctrls.values()))\npop_avg = get_avg_stats_by_age(ctrl_qbs)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ggdurrant/nfl-qb-shoulder-injuries/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nfl-qb-shoulder-injuries"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ggdurrant"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 8047393,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggdurrant/nfl-qb-shoulder-injuries/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:50:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}