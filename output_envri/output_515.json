{
  "application_domain": [
    {
      "confidence": 23.75,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 21.13,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MengchuanFu/Suspecious-Apps-Detection"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-04-07T17:47:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-31T10:40:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "With the rapid adoption of smartphones, tablets, and mobile apps, they are increasingly becoming part of children\u2019s daily life for amusement and education. According to MarketingProfs, 75% of American children under 8 have access to a smartphone or tablet [1]. According to a survey conducted by PBS KIDS [2] 90% parents with kids between the ages of 2 and 10 state that they believe that educational apps will play an important role in children\u2019s learning in the future. Among smartphone and tablet operating systems, Android and Apple\u2019s iOS dominate the U.S. smartphone market by 53.2 and 41.3 percent, respectively [3]. The growth rate of Apps added to both platform accelerates every year. In 2012, there were a total of 567,322 apps on Google Play platform [4], 723,750 apps on iOS App store [5]. By 2014, the number of apps has doubled, with 1.43 million Apps on Google Play and 1.21 million Apps on iOS [6]. How do parents choose appropriate apps for their kids? PBS\u2019s survey [2] showed that when selecting games and apps for their children, 56% of parents base their decisions on age recommendations. Such decision strategy is far from perfect. There is a rising concern among parents who have experienced unreliable content maturity ratings for mobile apps that result in inappropriate risk exposure for children. In order to help parents determine age-appropriate mobile apps for their children, both Android and iOS apps come with maturity ratings that are similar to the movie and video game industry. Such maturity ratings examine the existence and intensity of mature themes such as mature content, violence, offensive language, sexual content, and drug usage within each app. However, movie and video game industries have official rating organizations such as the Motion Picture Association of America (MPAA) and Entertainment Software Rating Board (ESRB), which set standards for film rating systems \u2013 mobile apps do not. Instead of having standard rating rules across platforms, each mobile platform establishes or adopts its own rating policy and rating strategy. iOS\u2019s policy provides four different maturity-rating levels based on the suitable age of audience: \u201c4+,\u201d \u201c9+,\u201d \u201c12+,\u201d and \u201c17+.\u201d In the past, Android rating contained four maturityrating levels: \u201cEveryone,\u201d \u201cLow Maturity,\u201d \u201cMedium Maturity,\u201d and \u201cHigh Maturity.\u201d Both rating systems classify types of objectionable content into four maturity levels, and their classification rules for each level were similar but still with minor differences. For instance, apps with intense usage of offensive language are rated as \u201cLow Maturity\u201d (maturity level 2) on Android platform, but they are \u201c12+\u201d (maturity level 3) on iOS. Such inconsistency in maturity rating raises much concerns. This inconsistency issue is more challenging now with Android switched to ESRB\u2019s 5 level maturity rating policy with \u201cEveryone,\u201d \u201cEveryone 10+,\u201d \u201cTeen,\u201d \u201cMature,\u201d and \u201cAdults Only\u201d in May 2015. The inconsistency problem not only lies in policy content, but also is reflected in implementation of maturity rating policy. The main difference between iOS and Android platforms is who determines or reports the actual ratings. iOS rates each app submitted according to its own policies. The maturity ratings for Android apps are purely a result of app developers\u2019 self-report. Developers are required to choose one from the four maturity levels before publishing their apps. After submitting to the Google Play Store, an app is available for download in just a few hours. Google does not verify each app\u2019s maturity rating unless there are a number of user complaints. The public may raise concerns about the authenticity of the maturity ratings of Android apps, but this requires diligent policing on the part of the end user community. In contrast, iOS has a more strict review process for newly released apps. Apple first requires developers to select from a list of objectionable content and indicate the intensity of the content to generate the maturity rating. According to Apple\u2019s \u201cApp Store Review Guidelines,\u201d Apple examines the contents of apps and adjusts any inappropriate ratings during a review process before the app becomes available to users [7]. Due to the laxity of Android\u2019s maturity rating policy and the lack of objective judgment of apps\u2019 maturity levels provided by developers, many news articles have recognized the drawbacks of Android\u2019s rating system. They claim that the Android rating policy is unclear, and it is difficult for developers to understand the difference between the four maturity-rating levels [8]. In addition, according to the Washington Post [9] and recent reports from Federal Trade Commission [10, 11], there is a rising concern among parents who have experienced that the maturity ratings of the apps are unreliable. A more critical risk resides in in-app advertisement. Many apps, especially the free ones, are connected to third party advertisements. Neither mobile platforms nor advertising networks apply these maturity policies to restrict the contents of in-app advertisements. As a result, children may still be able to view high  maturity contents from in-app advertisements within those apps rated with low maturity. For example, as a 4+ app on iOS platform, Angry Birds should \u201ccontain no objectionable materials\u201d as shown in Figure 1. However, it allows a full-screen advertisement (Figure 2) with bloody scenes from a high maturity app appearing inside the app (the source of this bloody scene comes from the 9+ app Blood Brothers containing \u201cInfrequent/Mild Cartoon or Fantasy Violence\u201d). Further, Angry Birds also allows sexual banner advertisements shown on the up-right corner of the screen (Figure 3). As pointed out by the Washington Post, \u201cthere have been complaints that violent and sexual ads pop up in some apps aimed at children\u201d [8]. Parents have noticed this issue and are concerned with the objectionable contents of in-app advertisements. However, currently there are no standard rating policy applied to advertisement content and little research investigating this problem. According to our best knowledge, little systematic research has conducted to analyze the problems with apps\u2019 maturity rating policy and their implementation for children\u2019s protection. Thus, the risks associated with content inappropriateness is unknown [12]. This project develops mechanisms to compare, analyze and verify the maturity ratings of mobile apps and in-app advertisements, and investigates the possible reasons behind the inaccurate ratings."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9744988269761634,
      "result": {
        "original_header": "Suspecious-Apps-Detection",
        "type": "Text_excerpt",
        "value": "With the rapid adoption of smartphones, tablets, and mobile apps, they are increasingly becoming part of children\u2019s daily life for amusement and education. In order to help parents determine age-appropriate mobile apps for their children, iOS apps come with maturity ratings that are similar to the movie and video game industry. Such maturity ratings examine the existence and intensity of mature themes such as mature content, violence, offensive language, sexual content, and drug usage within each app. However, movie and video game industries have official rating organizations such as the Motion Picture Association of America (MPAA) and Entertainment Software Rating Board (ESRB), which set standards for film rating systems \u2013 mobile apps do not. Instead of having standard rating rules across platforms, each mobile platform establishes or adopts its own rating policy and rating strategy. iOS\u2019s policy provides four different maturity-rating levels based on the suitable age of audience: \u201c4+,\u201d \u201c9+,\u201d \u201c12+,\u201d and \u201c17+.\u201d The rating systems classify types of objectionable content into four maturity levels. According to our best knowledge, little systematic research has conducted to analyze the problems with apps\u2019 maturity rating policy and their implementation for children\u2019s protection. Thus, the risks associated with content inappropriateness is unknown. This project develops mechanisms to compare, analyze and verify the maturity ratings of mobile apps and in-app advertisements, and investigates the possible reasons behind the inaccurate ratings.\n<br /><br />Dataset Overview:<br />\n44840 Apps data with titile, description and maturity rating<br />\nCrawled from Apple App Store \n<br /><br />10 Nearest Neighbor Approach.ipynb verified the possibility of using k-nn method in the maturity rating research and found suspicious apps for the use of future Mturk survey \n1. Import the data, examine the shape and distribution\n2. Data preprocessing: regular expression, lowercase, remove stop words\n3. Randomly selection\n4. Count the amount of overlapes words on descriptions for each pair of Apps among our selected dataset\n5. For each app, select top 10 apps that have max overlaps words on description\n6. Predict true maturity rating for each app by \"top 10 apps\" ratings (Majority Voting)\n7. Further analysis \n<br /><br />Machine Learning and Token Analysis.ipynb monitor age rating on iOS and spy on the suspicious apps on iOS that are largely prone to mis-rated \n\n1. Import the data, examine the shape and distribution\n2. Randomly split data into training and testing sets\n3. Data vectorization: include only 1-gram and 2-grams; ignore terms that apear in more than 50% of the documents; only keep terms that appear in at least 2 documents\n4. Generate document-term matrix\n5. Build and evaluat models (Naive Bayes and Logestic Regression)\n6. Examine Tokens (Ratio based)\n \n"
      },
      "source": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MengchuanFu/Suspecious-Apps-Detection/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/Suspecious%20Apps%20Detection%20-%2010%20Nearest%20Neighbor%20Approach.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/Suspecious%20Apps%20Detection%20-%2010%20Nearest%20Neighbor%20Approach.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/Suspecious%20Apps%20Detection%20-%20Machine%20Learning%20and%20Token%20Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/Suspecious%20Apps%20Detection%20-%20Machine%20Learning%20and%20Token%20Analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MengchuanFu/Suspecious-Apps-Detection/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MengchuanFu/Suspecious-Apps-Detection"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Suspecious-Apps-Detection"
      },
      "source": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MengchuanFu/Suspecious-Apps-Detection/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Suspecious-Apps-Detection"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MengchuanFu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 79391,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MengchuanFu/Suspecious-Apps-Detection/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:07:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}