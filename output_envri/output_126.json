{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/mood-board-search"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How can I send feedback or get in contact with you?",
        "parent_header": [
          "Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "You have a few options:\n\n- Email cav-experiments-support@google.com\n- Submit your project to the [Experiments with Google] page\n\n[Experiments with Google]: https://experiments.withgoogle.com/submit\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code Reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows [Google's Open Source Community\nGuidelines](https://opensource.google/conduct/).\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/contributing.md",
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "This is not an officially supported Google product, but an experiment that was a collaborative effort by friends from Nord Projects and Google Brain, Mural, and PAIR teams at Google.\n\n- [Nord Projects](https://github.com/nordprojects)\n- [Been Kim](https://github.com/BeenKim)\n- [Emily Reif](https://github.com/EmilyReif)\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-06T18:51:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-17T10:06:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9738856630150037,
      "result": {
        "original_header": "What is Mood Board Search?",
        "type": "Text_excerpt",
        "value": "Mood Board Search is an A.I. Experiment that lets you train a computer to recognize visual concepts using mood boards and machine learning. It\u2019s a playful way to explore and analyze image collections using mood boards as your search query. \nFor this release, we're making Mood Board Search available as a HTML/JS frontend app (\u201cCAVstudio\u201d)  that works with a local Python backend.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9768977582702764,
      "result": {
        "original_header": "Who is it for?",
        "type": "Text_excerpt",
        "value": "Artists, photographers, image researchers, curators, educators \u2013 really, anyone who wants to work with images in more expressive and subjective ways.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.962645706416419,
      "result": {
        "original_header": "What is this repository for?",
        "type": "Text_excerpt",
        "value": "This repository contains two components related to Mood Board Search: \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9526158054166945,
      "result": {
        "original_header": "How does Mood Board Search work?",
        "type": "Text_excerpt",
        "value": "Mood Board Search works by training a model to recognize a visual concept using an open-source ML method called [concept activation vectors (CAVs)]. Once you\u2019ve trained your CAV, you can use it to search image collections to show you the closest matches, according to your CAV. You can review the results, fine-tune the things it likes, and inspect each result to understand what it's drawn to. Once you\u2019re finished training a CAV, you can deploy it into a Python application using only a few lines of code. \n\nCAVstudio works by creating a concept activation vector (CAV) from your training images, and then using it to search a set of images to show you the closest matches according to the CAV. You can review the results, fine tune the things it likes, and inspect each result to understand what it's drawn to. \nOnce you're happy, you can export the CAV file for use in [CAV Camera](https://play.google.com/store/apps/details?id=co.nordprojects.cavcam), or use it in your own projects with [CAVlib]. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9461945074881177,
      "result": {
        "original_header": "A closer look at CAVs",
        "type": "Text_excerpt",
        "value": "CAVs are a direction in 'embedding space' - a vector. It works like this: if you take a layer of a neural network ML model and extract all the values in the neurons at that point (the 'activations'), you can treat these values as a point in embedding space. Every different input image is mapped to a different location, with similar images close together, and different images far apart. \n<center><small><i>'Embedding space' is a high-dimensional space - perhaps thousands of dimensions. <a href=\"https://projector.tensorflow.org/\">Embedding projector</a> is a visual way to explore embedding spaces, by projecting each point to 3 dimensions using clever mathematical techniques like UMAP and T-SNE.</i></small></center> \nCAVs can be used as a lightweight way to train neural network ML models to recognise new visual concepts.  By taking existing pretrained models, CAVs can expose hidden understanding of inner layers of the model by finding the direction (a.k.a 'vector') of a concept in the high-dimensional embedding space. This is a simple form of transfer learning that produces surprisingly good results with tiny amounts of training data. We've had success training CAVs using as few as 10-30 images. The resulting CAV is very lightweight - around 250kB - and can be deployed into a Python application using only a few lines of code. \nTo create a CAV, you need positive and negative training images. Positive images show the concept you're trying to express, and negative ones do not (or even better, show the opposite). \nFor example, if you were trying to create a CAV to illustrate a concept 'roundness', your positive training images would be pictures of round things, and the negative images would be not-round things, or just random images. \nCAVs are created by finding a direction in this high dimensional space that differentiates the positive from the negative training images. You can train (and download) a CAV from Mood Board Search, or train it directly in CAVlib using the cavlib.train_cav function. \nOnce formed, the CAV can be compared with any new image, by looking at the angle between the CAV and the new image's activations, a technique known as cosine similarity. We call the resulting number the 'CAV score' - in our example, a measure of 'roundness' - as a number from -1 to 1. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850193287294113,
      "result": {
        "original_header": "Final thoughts",
        "type": "Text_excerpt",
        "value": "We encourage open sourcing projects as a way of learning from each other. Please respect our and other creators\u2019 rights, including copyright and trademark rights when present, when sharing these works and creating derivative work. \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/mood-board-search/tree/main/cavlib/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google-research/mood-board-search/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/mood-board-search/main/cavlib/examples/examples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/cavlib/examples/examples.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/mood-board-search/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "google-research/mood-board-search"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mood Board Search"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/1244307/140734553-0f812a63-0857-4039-a9dd-0094dab62a65.jpg"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/1244307/140048774-974b455a-0a29-4e78-a1ed-5a42960f40df.png"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/1244307/140049984-eb640d03-a2e8-44b3-9ec4-b337e03524a7.png"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/1244307/140050379-d98bff8a-15b0-4b36-ac83-e6a5bd3efc13.png"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "Mood Board Search",
          "How to use Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "First, clone this repository.\n\nThere are two servers that make Mood Board Search. The backend Python server manages the data store and runs the ML algorithms. The frontend server builds and hosts the browser-based user interface.\n\nTo set up the backend:\n\n    cd backend\n\n    python3.8 -m venv env\n    source env/bin/activate\n    pip install -U pip\n    pip install -r requirements.txt\n\nFinally, download a sample set of images to work from. This script downloads two files:\n\n1. A sample set that contains 2700 photos (.jpgs and .pngs) of everyday things\u2014from household objects to plants and animals to local monuments and landmarks\u2014taken by people from a Google design team. Photos were taken by a phone camera. EXIF data were removed from all images and all images are shared under [the Creative Commons CC-BY-4.0 license](https://creativecommons.org/licenses/by/4.0/). Please note: These images were collected specifically to demonstrate the functionality of the Mood Board Search tool. The Mood Board Search tool selects images from this gallery based on a set of inputs. We do not expect people to use the images for any other purpose. This gallery of images was not constructed for the purposes of training machine learning models. Therefore, no scientific tests were conducted on this gallery of images. The Mood Board tool is based on [technology](https://github.com/tensorflow/tcav) developed by Google Researchers (Been Kim and colleagues). See [paper](https://arxiv.org/abs/1711.11279) for details. This will download 1.1GB of data onto your device, taking around 10-15 mins (depending on your connection & compute speeds).\n\n2. Sample visual concepts by Alex Etchells, Tom Hatton, and Rachel Maggart. The images contained within the visual concepts are made publicly available for use in Mood Board Search (\u201cCAVstudio\u201d) only. The owners of the images retain copyright.\n\n```\npython bin/download_data.py\n```\n\nThe backend is now ready to go.\n\n    cd ..\n\nNext, set up the frontend:\n\n    cd frontend\n    npm ci\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9859550496105675,
      "result": {
        "original_header": "What is Mood Board Search?",
        "type": "Text_excerpt",
        "value": "For this release, we're making Mood Board Search available as a HTML/JS frontend app (\u201cCAVstudio\u201d)  that works with a local Python backend.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8210836417903309,
      "result": {
        "original_header": "How does Mood Board Search work?",
        "type": "Text_excerpt",
        "value": "Once you're happy, you can export the CAV file for use in [CAV Camera](https://play.google.com/store/apps/details?id=co.nordprojects.cavcam), or use it in your own projects with [CAVlib]. \n[concept activation vectors (CAVs)]: https://arxiv.org/abs/1711.11279\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8510872723577301,
      "result": {
        "original_header": "Final thoughts",
        "type": "Text_excerpt",
        "value": "If you want more info on Google's policy, you can find that [here](https://policies.google.com/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google-research/mood-board-search/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "Copyright 2022 Google LLC.\n\nLicensed under the Apache License, Version 2.0 (the \u201cLicense\u201d); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\", either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mood-board-search"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "google-research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 175456,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Vue",
        "size": 146704,
        "type": "Programming_language",
        "value": "Vue"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 104536,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TypeScript",
        "size": 62924,
        "type": "Programming_language",
        "value": "TypeScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 5389,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2098,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 1871,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 1399,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 864,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1711.11279\n\n## A closer look at CAVs\n\n\n\nCAVs are a direction in 'embedding space' - a vector. It works like this: if you take a layer of a neural network ML model and extract all the values in the neurons at that point (the 'activations'"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1711.11279"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "Mood Board Search",
          "How to use Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "Once you're all set up, you can start the two servers to use CAVstudio.\n\nTo run the backend, open one terminal window and do:\n\n    cd backend\n    env/bin/python3.8 manage.py runserver\n\nIn another terminal window, run the frontend server:\n\n    cd frontend\n    npm run serve\n\nThen go to http://localhost:8080 in a browser to use CAVstudio.\n\nExplore three preloaded concepts, or create a new concept using images from your computer.\n\nTo create a new concept:\n\n1. Gather and upload images that evoke a certain style, mood, or \u201cfeel\u201d of an idea. We recommend using 50 square-ratio  images, but we\u2019ve had success using as few as 15 images.\n2. Select an image set to search.\n3. Train your Concept Activation Vector (CAV) and explore the results to see how well the model expresses your concept.\n4. Inspect your results using Focus mode to see which parts of the image match your mood board best \u2013 or AI crop mode, to crop in directly to uncover new compositions.\n5. You can retrain your CAV as many times as you like by upweighting, downweighting, deleting, or adding new images to your mood board.\n6. Once you're happy with how the model expresses your visual concept, you can download your CAV file for use in [CAVcamera], an experimental camera app we made that lets you take photos using CAVs as your real-time guide.\n\n[CAVcamera]: https://play.google.com/store/apps/details?id=co.nordprojects.cavcam\n\nWant to use Mood Board Search in your own website creations? We\u2019ve made a library called [CAVlib] that lets you do just that.\n\n[CAVlib]: ./cavlib\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:23:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 142
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use Mood Board Search",
        "parent_header": [
          "Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "This release of Mood Board Search is available as a HTML/JS frontend app (\u201cCAVstudio\u201d) that works with a local Python backend.\n\nTo run CAVstudio, you'll need on your machine:\n- Python 3.8. You can download it from [Python.org](https://www.python.org/downloads/).\n- node v15+. Download it from [nodejs.org](https://nodejs.org/en/download/). We used node v15, but newer versions should also work.\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How can I send feedback or get in contact with you?",
        "parent_header": [
          "Mood Board Search"
        ],
        "type": "Text_excerpt",
        "value": "You have a few options:\n\n- Email cav-experiments-support@google.com\n- Submit your project to the [Experiments with Google] page\n\n[Experiments with Google]: https://experiments.withgoogle.com/submit\n"
      },
      "source": "https://raw.githubusercontent.com/google-research/mood-board-search/main/README.md",
      "technique": "header_analysis"
    }
  ]
}