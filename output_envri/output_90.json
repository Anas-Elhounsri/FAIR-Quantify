{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tanyhb1/YNC-Ecological-Modelling"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-03T11:44:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-03T11:46:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Research Assistant for Ecological Modelling"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9581738752059391,
      "result": {
        "original_header": "BACKGROUND:",
        "type": "Text_excerpt",
        "value": "Successional patterns and dynamics of tropical forests are extensively studied using chronosequences and, more recently, longitudinal studies. These empirical studies generally focus on local factors and processes, even though landscape-scale processes may play an equally important role. Most theoretical models of succession are largely verbal and hypotheses derived from these models often are not very specific.  \n*As a consequence, it is not always clear what patterns to expect under a given hypothesis*. Here we describe a basic simulation model with simple assumptions and rules that operationalize specific hypotheses and explore how this model can generate predictions on how successional patterns differ within and across different landscapes.  \n**METHODS:** We developed a simple rule-based simulation model in which fixed numbers of trees are added and removed from a plot at each time step. Trees are randomly selected from a local species pool (recruitment) and from the plot (mortality), based on their species identity and the age-dependent recruitment and mortality probabilities per species (group). Simulations are run for 35 years and for 50 plots at the time, and a range of alpha and beta diversity indices are calculated for each time step based on the generated data.  \n*Refer to METHODS.md for more details on our methodology* \n**RESULTS:** We show how different (combinations of) assumptions and rules related to  \n1. size of and similarity among local species pools; and \n2. variation in the age-dependent recruitment and mortality rates of species affect the \n\t+ sign, direction and shape of successional patterns in alpha and beta diversities as well as \n\t+ how and how fast the species composition of local communities and the metacommunity changes over time.  \n*Refer to RESULTS.md for more details on the results you can obtain and a way to interpret them* \n**DISCUSSION:** A crucial element of most models of succession is the variation in how species are adapted to the changing conditions along a successional gradient and how that drives successional species turnover. Dispersal limited is a key driver of succession but not always explicitly included in succession models. Our simple modelling exercise provides insight in how both can affect successional patterns, and highlights *the need to study successional patterns on both local and landscape scale*. To test prediction from the model \u2013 and explore the role and relative importance of different ecological processes along major environmental and land-use gradients \u2013 we need studies with replicated plots per age class, replicated along land use gradient. \n1. Resampling: Incorporate relative recruitment and mortality rates for 3 groups of species into sampling function.\n    + Each species has a certain proportion in the global species pool - Affects sampling from global to local\n    + Group recruitment and mortality rates - Affects sampling from local to plot\n2. Result: Want 3 separate groups for d0, d1 and d2 diversities as well as pairwise diversities\n \n"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tanyhb1/YNC-Ecological-Modelling/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/ecological_simulation_graphing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/ecological_simulation_graphing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/ecological_simulation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/ecological_simulation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/.ipynb_checkpoints/ecological_simulation-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/.ipynb_checkpoints/ecological_simulation-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/.ipynb_checkpoints/ecological_simulation_graphing-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/.ipynb_checkpoints/ecological_simulation_graphing-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tanyhb1/YNC-Ecological-Modelling/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tanyhb1/YNC-Ecological-Modelling"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ecologicalmodelling"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tanyhb1/YNC-Ecological-Modelling/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YNC-Ecological-Modelling"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tanyhb1"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 7634227,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 33435,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 12976,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7040,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "SYSTEM REQUIREMENTS:",
        "parent_header": [
          "ecologicalmodelling"
        ],
        "type": "Text_excerpt",
        "value": "1. Python 3.5 or later\n2. Numpy v1.12.0\n3. Matplotlib v2.0.0\n"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommendations:",
        "parent_header": [
          "ecologicalmodelling",
          "SYSTEM REQUIREMENTS:"
        ],
        "type": "Text_excerpt",
        "value": "1. Download with Anaconda for best results.\n2. Installation for Anaconda: https://www.continuum.io/downloads\n3. Download Pycharm for best performance. Known to not work on Spyder.\n\n"
      },
      "source": "https://raw.githubusercontent.com/tanyhb1/YNC-Ecological-Modelling/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:12:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}