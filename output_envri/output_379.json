{
  "application_domain": [
    {
      "confidence": 15.86,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 133.8,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing this project",
        "type": "Text_excerpt",
        "value": "```bibtex\n@misc{msft:cyberbattlesim,\n  Author = {Microsoft Defender Research Team.}\n  Note = {Created by Christian Seifert, Michael\u00a0Betser, William\u00a0Blum,\u00a0James\u00a0Bono,\u00a0Kate\u00a0Farris,\u00a0Emily\u00a0Goren,\u00a0Justin\u00a0Grana,\u00a0Kristian\u00a0Holsheimer, Brandon\u00a0Marken,\u00a0Joshua\u00a0Neil, Nicole\u00a0Nichols, Jugal\u00a0Parikh, Haoran\u00a0Wei.},\n  Publisher = {GitHub},\n  Howpublished = {\\url{https://github.com/microsoft/cyberbattlesim}},\n  Title = {CyberBattleSim},\n  Year = {2021}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/microsoft/CyberBattleSim"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "This project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ideas for contributions",
        "parent_header": [
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "Here are some ideas on how to contribute: enhance the simulation (event-based, refined the simulation, \u2026), train an RL algorithm on the existing simulation,\nimplement benchmark to evaluate and compare novelty of agents, add more network generative modes to train RL-agent on, contribute to the doc, fix bugs.\n\nSee also the [wiki for more ideas](https://github.com/microsoft/CyberBattleGym/wiki/Possible-contributions).\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-17T23:18:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T09:50:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An experimentation and research platform to investigate the interaction of automated agents in an abstract simulated network environments."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9857588328706655,
      "result": {
        "original_header": "Project goals",
        "type": "Text_excerpt",
        "value": "We view this project as an experimentation platform to conduct research on the interaction of automated agents in abstract simulated network environments. By open-sourcing it, we hope to encourage the research community to investigate how cyber-agents interact and evolve in such network environments. \nThe simulation we provide is admittedly simplistic, but this has advantages. Its highly abstract nature prohibits direct application to real-world systems thus providing a safeguard against potential nefarious use of automated agents trained with it.\nAt the same time, its simplicity allows us to focus on specific security aspects we aim to study and quickly experiment with recent machine learning and AI algorithms. \nFor instance, the current implementation focuses on\nthe lateral movement cyber-attacks techniques, with the hope of understanding how network topology and configuration affects them. With this goal in mind, we felt that modeling actual network traffic was not necessary. This is just one example of a significant limitation in our system that future contributions might want to address. \nOn the algorithmic side, we provide some basic agents as starting points, but we\nwould be curious to find out how state-of-the-art reinforcement learning algorithms compare to them. We found that the large action space\nintrinsic to any computer system is a particular challenge for\nReinforcement Learning, in contrast to other applications such as video games or robot control. Training agents that can store and retrieve credentials is another challenge faced when applying RL techniques\nwhere agents typically do not feature internal memory.\nThese are other areas of research where the simulation could be used for benchmarking purposes. \nOther areas of interest include the responsible and ethical use of autonomous\ncyber-security systems: How to design an enterprise network that gives an intrinsic\nadvantage to defender agents? How to conduct safe research aimed at defending enterprises against autonomous cyber-attacks while preventing nefarious use of such technology?\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8225503010605696,
      "result": {
        "original_header": "Build status",
        "type": "Text_excerpt",
        "value": "| Type | Branch | Status |\n| ---  | ------ | ------ |\n| CI   | master | ![.github/workflows/ci.yml](https://github.com/microsoft/CyberBattleSim/workflows/.github/workflows/ci.yml/badge.svg) |\n| Docker image | master | ![.github/workflows/build-container.yml](https://github.com/microsoft/CyberBattleSim/workflows/.github/workflows/build-container.yml/badge.svg) |\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8767960157338446,
      "result": {
        "original_header": "Jupyter notebooks",
        "type": "Text_excerpt",
        "value": "To quickly get familiar with the project, you can open one of the provided Jupyter notebooks to play interactively with the gymnasium environments. \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9094014997192443,
      "result": {
        "original_header": "How to instantiate the Gym environments?",
        "type": "Text_excerpt",
        "value": "The following code shows how to create an instance of the OpenAI Gym environment `CyberBattleChain-v0`, an environment based on a [chain-like network structure](cyberbattle/samples/chainpattern/chainpattern.py), with 10 nodes (`size=10`) where the agent's goal is to either gain full ownership of the network (`own_atleast_percent=1.0`) or\nbreak the 80% network availability SLA (`maintain_sla=0.80`), while the network is being monitored and protected by the basic probalistically-modelled defender (`defender_agent=ScanAndReimageCompromisedMachines`):\n```python\nimport cyberbattle._env.cyberbattle_env\n\ncyberbattlechain_defender =\n  gym.make('CyberBattleChain-v0',\n      size=10,\n      attacker_goal=AttackerGoal(\n          own_atleast=0,\n          own_atleast_percent=1.0\n      ),\n      defender_constraint=DefenderConstraint(\n          maintain_sla=0.80\n      ),\n      defender_agent=ScanAndReimageCompromisedMachines(\n          probability=0.6,\n          scan_capacity=2,\n          scan_frequency=5))\n```\n \nTo try other network topologies, take example on [chainpattern.py](cyberbattle/samples/chainpattern/chainpattern.py) to define your own set of machines and vulnerabilities, then add an entry in [the module initializer](cyberbattle/__init__.py) to declare and register the Gym environment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9619192677737566,
      "result": {
        "original_header": "Note on privacy",
        "type": "Text_excerpt",
        "value": "This project does not include any customer data.\nThe provided models and network topologies are purely fictitious.\nUsers of the provided code provide all the input to the simulation\nand must have the necessary permissions to use any provided data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9950343468172725,
      "result": {
        "original_header": "Trademarks",
        "type": "Text_excerpt",
        "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft\ntrademarks or logos is subject to and must follow\n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9597858402589982,
      "result": {
        "type": "Text_excerpt",
        "value": "CyberBattleSim is an experimentation research platform to investigate the interaction\nof automated agents operating in a simulated abstract enterprise network environment.\nThe simulation provides a high-level abstraction of computer networks\nand cyber security concepts.\nIts Python-based Open AI Gym interface allows for the training of\nautomated agents using reinforcement learning algorithms. \nThe simulation environment is parameterized by a fixed network topology\nand a set of vulnerabilities that agents can utilize\nto move laterally in the network.\nThe goal of the attacker is to take ownership of a portion of the network by exploiting\nvulnerabilities that are planted in the computer nodes.\nWhile the attacker attempts to spread throughout the network,\na defender agent watches the network activity and tries to detect\nany attack taking place and mitigate the impact on the system\nby evicting the attacker. We provide a basic stochastic defender that detects\nand mitigates ongoing attacks based on pre-defined probabilities of success.\nWe implement mitigation by re-imaging the infected nodes, a process\nabstractly modeled as an operation spanning over multiple simulation steps. \nTo compare the performance of the agents we look at two metrics: the number of simulation steps taken to\nattain their goal and the cumulative rewards over simulation steps across training epochs. \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/microsoft/CyberBattleSim/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "Read the [Quick introduction](/docs/quickintro.md) to the project.\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/microsoft/CyberBattleGym/wiki/Possible-contributions"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/microsoft/CyberBattleSim/wiki"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/microsoft/CyberBattleSim/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/toyctf-solved.ipynb"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/toyctf-solved.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/toyctf-blank.ipynb"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/toyctf-blank.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 260
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/microsoft/CyberBattleSim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "microsoft/CyberBattleSim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/createstubs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/init.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/install-conda.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/run_quick.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/run_benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/notebooks/publish_benchmarks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/docs/gendoc.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up a dev environment",
        "type": "Text_excerpt",
        "value": "It is strongly recommended to work under a Linux environment, either directly or via WSL on Windows.\nRunning Python on Windows directly should work but is not supported anymore.\n\nStart by checking out the repository:\n\n   ```bash\n   git clone https://github.com/microsoft/CyberBattleSim.git\n   ```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "OS components",
        "parent_header": [
          "Setting up a dev environment"
        ],
        "type": "Text_excerpt",
        "value": "If you get the following error when running the papermill on the notebooks\n(or alternatively when running `orca --help`)\n```\n/home/wiblum/miniconda3/envs/cybersim/lib/orca_app/orca: error while loading shared libraries: libXss.so.1: cannot open shared object file: No such file or directory\n```\nor other share libraries like `libgdk_pixbuf-2.0.so.0`,\nThen run the following command:\n```\nsudo apt install libnss3-dev libgtk-3-0 libxss1 libasound2-dev libgtk2.0-0 libgconf-2-4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "On Linux or WSL",
        "parent_header": [
          "Setting up a dev environment"
        ],
        "type": "Text_excerpt",
        "value": "The instructions were tested on a Linux Ubuntu distribution (both native and via WSL).\n\nIf conda is not installed already, you need to install it by running the `install_conda.sh` script.\n\n```bash\nbash install-conda.sh\n```\n\nOnce this is done, open a new terminal and run the initialization script:\n```bash\nbash init.sh\n```\nThis will create a conda environmen named `cybersim` with all the required OS and python dependencies.\n\nTo activate the environment run:\n\n```bash\nconda activate cybersim\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows Subsystem for Linux",
        "parent_header": [
          "Setting up a dev environment",
          "On Linux or WSL"
        ],
        "type": "Text_excerpt",
        "value": "The supported dev environment on Windows is via WSL.\nYou first need to install an Ubuntu WSL distribution on your Windows machine,\nand then proceed with the Linux instructions (next section).\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Git authentication from WSL",
        "parent_header": [
          "Setting up a dev environment",
          "On Linux or WSL"
        ],
        "type": "Text_excerpt",
        "value": "To authenticate with Git, you can either use SSH-based authentication or\nalternatively use the credential-helper trick to automatically generate a\nPAT token. The latter can be done by running the following command under WSL\n([more info here](https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-git)):\n\n```ps\ngit config --global credential.helper \"/mnt/c/Program\\ Files/Git/mingw64/libexec/git-core/git-credential-manager.exe\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker on WSL",
        "parent_header": [
          "Setting up a dev environment",
          "On Linux or WSL"
        ],
        "type": "Text_excerpt",
        "value": "To run your environment within a docker container, we recommend running `docker` via Windows Subsystem on Linux (WSL) using the following instructions:\n[Installing Docker on Windows under WSL](https://docs.docker.com/docker-for-windows/wsl-tech-preview/)).\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows (unsupported)",
        "parent_header": [
          "Setting up a dev environment"
        ],
        "type": "Text_excerpt",
        "value": "This method is not maintained anymore, please prefer instead running under\na WSL subsystem Linux environment.\nBut if you insist you want to start by installing [Python 3.9](https://www.python.org/downloads/windows/) then in a Powershell prompt run the `./init.ps1` script.\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9957784951159098,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "See [Benchmark documentation](/docs/benchmark.md).\nJupyter notebooks with the latest runs are checked-in under a dedicated tag at [/notebooks/benchmarks (latest_benchmark)](https://github.com/microsoft/CyberBattleSim/tree/latest_benchmark/notebooks/benchmarks).\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9788354759495468,
      "result": {
        "original_header": "Jupyter notebooks",
        "type": "Text_excerpt",
        "value": "To quickly get familiar with the project, you can open one of the provided Jupyter notebooks to play interactively with the gymnasium environments. \n> Notes on the `.py` notebooks:\n> - Our notebooks are checked-in in Git as `.py` files. Those can be opened and run directly  in VSCode or in Jupyter using the [Jupytext extension](https://jupytext.readthedocs.io/en/latest/install.html).\n> - The output `.ipynb` files can also be automatically regenerated using [papermill](https://pypi.org/project/papermill/) by running the bash script [run_benchmark.sh](/notebooks/run_benchmark.sh).\n> - We also publish a snapshot of the corresponding `.ipynb`-notebooks with the entire output and plots in a separate git tag.\nThe latest snapshot of the Jupyter notebooks output, including the benchmarks, are\naccessible from the following git tag: [/notebooks/benchmarks (latest_benchmark)](https://github.com/microsoft/CyberBattleSim/tree/latest_benchmark/notebooks/benchmarks). \n- 'Capture The Flag' toy environment notebooks:\n  - [Random agent](notebooks/toyctf-random.py)\n  - [Interactive session for a human player](notebooks/toyctf-blank.py)\n  - [Interactive session - fully solved](notebooks/toyctf-solved.py) \n- Chain environment notebooks:\n  - [Random agent](notebooks/chainnetwork-random.py) \nThe latest snapshot of the Jupyter notebooks output, including the benchmarks, are\naccessible from the following git tag: [/notebooks/benchmarks (latest_benchmark)](https://github.com/microsoft/CyberBattleSim/tree/latest_benchmark/notebooks/benchmarks). \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9988852287322683,
      "result": {
        "original_header": "Trademarks",
        "type": "Text_excerpt",
        "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft\ntrademarks or logos is subject to and must follow\n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8123632969531493,
      "result": {
        "type": "Text_excerpt",
        "value": "> April 8th, 2021: See the  on the Microsoft Security Blog. \n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/microsoft/CyberBattleSim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CyberBattleSim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "microsoft"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 837955,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 418707,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6877,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 858,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 832,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://jupytext.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running from Docker registry",
        "parent_header": [
          "Getting started quickly using Docker"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ncommit=7c1f8c80bc53353937e3c69b0f5f799ebb2b03ee\ndocker login spinshot.azurecr.io\ndocker pull spinshot.azurecr.io/cyberbattle:$commit\ndocker run -it spinshot.azurecr.io/cyberbattle:$commit python -m cyberbattle.agents.baseline.run\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:34:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1656
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started quickly using Docker",
        "type": "Text_excerpt",
        "value": "The quickest method to get up and running is via the Docker container.\n\n> NOTE: For licensing reasons, we do not publicly redistribute any\n> build artifact. In particular, the docker registry `spinshot.azurecr.io` referred to\n> in the commands below is kept private to the\n> project maintainers only.\n>\n> As a workaround, you can recreate the docker image yourself using the provided `Dockerfile`, publish the resulting image to your own docker registry and replace the registry name in the commands below.\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recreating the Docker image",
        "parent_header": [
          "Getting started quickly using Docker"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ndocker build -t cyberbattle:1.1 .\ndocker run -it -v \"$(pwd)\":/source --rm cyberbattle:1.1 python -m cyberbattle.agents.baseline.run\n```\n"
      },
      "source": "https://raw.githubusercontent.com/microsoft/CyberBattleSim/main/README.md",
      "technique": "header_analysis"
    }
  ]
}