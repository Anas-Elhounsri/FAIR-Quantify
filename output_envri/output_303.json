{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework"
        ],
        "type": "Text_excerpt",
        "value": "Please cite __FedLab__ in your publications if it helps your research:\n\n```bibtex\n@article{JMLR:v24:22-0440,\n  author  = {Dun Zeng and Siqi Liang and Xiangjing Hu and Hui Wang and Zenglin Xu},\n  title   = {FedLab: A Flexible Federated Learning Framework},\n  journal = {Journal of Machine Learning Research},\n  year    = {2023},\n  volume  = {24},\n  number  = {100},\n  pages   = {1--7},\n  url     = {http://jmlr.org/papers/v24/22-0440.html}\n}\n```\nor\n```\n@article{zeng2021fedlab,\n  title={Fedlab: A flexible federated learning framework},\n  author={Zeng, Dun and Liang, Siqi and Hu, Xiangjing and Wang, Hui and Xu, Zenglin},\n  journal={arXiv preprint arXiv:2107.11621},\n  year={2021}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework"
        ],
        "type": "Text_excerpt",
        "value": "<a id=\"1\">[1]</a> Li, Q., Diao, Y., Chen, Q., & He, B. (2022, May). Federated learning on non-iid data silos: An experimental study. In *2022 IEEE 38th International Conference on Data Engineering (ICDE)* (pp. 965-978). IEEE.\n\n<a id=\"2\">[2]</a> Caldas, S., Duddu, S. M. K., Wu, P., Li, T., Kone\u010dn\u00fd, J., McMahan, H. B., ... & Talwalkar, A. (2018). Leaf: A benchmark for federated settings. *arXiv preprint arXiv:1812.01097*.\n\n<a id=\"3\">[3]</a> Yurochkin, M., Agarwal, M., Ghosh, S., Greenewald, K., Hoang, N., & Khazaeni, Y. (2019, May). Bayesian nonparametric federated learning of neural networks. In *International Conference on Machine Learning* (pp. 7252-7261). PMLR.\n\n<a id=\"4\">[4]</a> McMahan, B., Moore, E., Ramage, D., Hampson, S., & y Arcas, B. A. (2017, April). Communication-efficient learning of deep networks from decentralized data. In *Artificial intelligence and statistics* (pp. 1273-1282). PMLR.\n\n<a id=\"5\">[5]</a> Acar, D. A. E., Zhao, Y., Navarro, R. M., Mattina, M., Whatmough, P. N., & Saligrama, V. (2021). Federated learning based on dynamic regularization. *arXiv preprint arXiv:2111.04263*.\n\n<a id=\"6\">[6]</a> Wang, H., Yurochkin, M., Sun, Y., Papailiopoulos, D., & Khazaeni, Y. (2020). Federated learning with matched averaging. *arXiv preprint arXiv:2002.06440*.\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Dun Zeng and Siqi Liang and Xiangjing Hu and Hui Wang and Zenglin Xu",
        "format": "bibtex",
        "title": "FedLab: A Flexible Federated Learning Framework",
        "type": "Text_excerpt",
        "url": "http://jmlr.org/papers/v24/22-0440.html",
        "value": "@article{JMLR:v24:22-0440,\n    url = {http://jmlr.org/papers/v24/22-0440.html},\n    pages = {1--7},\n    number = {100},\n    volume = {24},\n    year = {2023},\n    journal = {Journal of Machine Learning Research},\n    title = {FedLab: A Flexible Federated Learning Framework},\n    author = {Dun Zeng and Siqi Liang and Xiangjing Hu and Hui Wang and Zenglin Xu},\n}"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Zeng, Dun and Liang, Siqi and Hu, Xiangjing and Wang, Hui and Xu, Zenglin",
        "format": "bibtex",
        "title": "Fedlab: A flexible federated learning framework",
        "type": "Text_excerpt",
        "value": "@article{zeng2021fedlab,\n    year = {2021},\n    journal = {arXiv preprint arXiv:2107.11621},\n    author = {Zeng, Dun and Liang, Siqi and Hu, Xiangjing and Wang, Hui and Xu, Zenglin},\n    title = {Fedlab: A flexible federated learning framework},\n}"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SMILELab-FL/FedLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework"
        ],
        "type": "Text_excerpt",
        "value": "Project Investigator: [Prof. Zenglin Xu](https://scholar.google.com/citations?user=gF0H9nEAAAAJ&hl=en) (xuzenglin@hit.edu.cn).\n\nFor technical issues related to __FedLab__ development, please contact our development team through Github issues or email:\n\n- [Dun Zeng](https://scholar.google.com/citations?user=CuNFd3EAAAAJ&hl=en): zengdun@foxmail.com\n- [Siqi Liang](https://scholar.google.com/citations?user=LIjv5BsAAAAJ&hl=en): zszxlsq@gmail.com\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-10T02:27:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T13:20:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A flexible Federated Learning Framework based on PyTorch, simplifying your Federated Learning research."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9949738070897418,
      "result": {
        "original_header": "FedLab: A Flexible Federated Learning Framework",
        "type": "Text_excerpt",
        "value": "\nFederated learning (FL), proposed by Google at the very beginning, is recently a burgeoning research area of machine learning, which aims to protect individual data privacy in the distributed machine learning processes, especially in \ufb01nance, smart healthcare, and edge computing. Different from traditional data-centered distributed machine learning, participants in the FL setting utilize localized data to train local models, then leverages speci\ufb01c strategies with other participants to acquire the \ufb01nal model collaboratively, avoiding direct data-sharing behavior. \nTo relieve the burden of researchers in implementing FL algorithms and emancipate FL scientists from the repetitive implementation of basic FL settings, we introduce a highly customizable framework __FedLab__ in this work. __FedLab__ provides the necessary modules for FL simulation, including ***communication***, ***compression***, ***model optimization***, ***data partition*** and other ***functional modules***. Users can build an FL simulation environment with custom modules like playing with LEGO bricks. For better understanding and easy usage, the FL baseline algorithms implemented via __FedLab__ are also presented. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8293743022997767,
      "result": {
        "original_header": "Architecture",
        "type": "Text_excerpt",
        "value": "Files architecture of FedLab. These contents may be helpful for users to understand our repo.\n```\n\u251c\u2500\u2500 fedlab\n\u2502   \u251c\u2500\u2500 contrib\n\u2502   \u251c\u2500\u2500 core\n\u2502   \u251c\u2500\u2500 models\n\u2502   \u2514\u2500\u2500 utils\n\u251c\u2500\u2500 datasets\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 examples\n\u2502   \u251c\u2500\u2500 asynchronous-cross-process-mnist\n\u2502   \u251c\u2500\u2500 cross-process-mnist\n\u2502   \u251c\u2500\u2500 hierarchical-hybrid-mnist\n\u2502   \u251c\u2500\u2500 network-connection-checker\n\u2502   \u251c\u2500\u2500 scale-mnist\n\u2502   \u2514\u2500\u2500 standalone-mnist\n\u2514\u2500\u2500 tutorials\n    \u251c\u2500\u2500 communication_tutorial.ipynb\n    \u251c\u2500\u2500 customize_tutorial.ipynb\n    \u251c\u2500\u2500 pipeline_tutorial.ipynb\n    \u2514\u2500\u2500 ...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9199635739469814,
      "result": {
        "original_header": "Baselines",
        "type": "Text_excerpt",
        "value": "We provide the reproduction of baseline federated algorthms for users in this repo. \n| Method              | Type   | Paper                                                        | Publication  | Official code                                        |\n| ------------------- | ------ | ------------------------------------------------------------ | ------------ | ---------------------------------------------------- |\n| FedAvg              | Optim. | [Communication-Efficient Learning of Deep Networks from Decentralized Data](http://proceedings.mlr.press/v54/mcmahan17a/mcmahan17a.pdf) | AISTATS'2017 |                                                      |\n| FedProx             | Optim. | [Federated Optimization in Heterogeneous Networks](https://arxiv.org/abs/1812.06127) | MLSys' 2020  | [Code](https://github.com/litian96/FedProx)          |\n| FedDyn              | Optim. | [Federated Learning Based on Dynamic Regularization](https://openreview.net/forum?id=B7v4QMR6Z9w) | ICLR' 2021   | [Code](https://github.com/alpemreacar/FedDyn)        |\n| q-FFL               | Optim. | [Fair Resource Allocation in Federated Learning](https://arxiv.org/abs/1905.10497) | ICLR' 2020   | [Code](https://github.com/litian96/fair_flearn)      |\n| FedNova             | Optim. | [Tackling the Objective Inconsistency Problem in Heterogeneous Federated Optimization](https://proceedings.neurips.cc/paper/2020/hash/564127c03caab942e503ee6f810f54fd-Abstract.html) | NeurIPS'2020 | [Code](https://github.com/JYWa/FedNova)              |\n| IFCA                | Optim. | [An Efficient Framework for Clustered Federated Learning](https://proceedings.neurips.cc/paper/2020/hash/e32cc80bf07915058ce90722ee17bb71-Abstract.html) | NeurIPS'2020 | [Code](https://github.com/jichan3751/ifca)           |\n| Ditto               | Optim. | [Ditto: Fair and Robust Federated Learning Through Personalization]() | ICML'2021    | [Code](https://github.com/litian96/ditto)            |\n| SCAFFOLD            | Optim. | [SCAFFOLD: Stochastic Controlled Averaging for Federated Learning]() | ICML'2020    ||\n| Personalized-FedAvg | Optim. | [Improving Federated Learning Personalization via Model Agnostic Meta Learning](https://arxiv.org/pdf/1909.12488.pdf) |    Pre-print      |                                                      |\n| CFL                 | Optim.  | [Clustered Federated Learning: Model-Agnostic Distributed Multi-Task Optimization under Privacy Constraints](https://arxiv.org/abs/1910.01991) | IEEE'2020    | [Code](https://github.com/felisat/clustered-federated-learning#clustered-federated-learning-model-agnostic-distributed-multi-task-optimization-under-privacy-constraints)        |\n| Power-of-choice     |  Misc. | [Client Selection in Federated Learning: Convergence Analysis and Power-of-Choice Selection Strategies](https://arxiv.org/abs/2010.01243) | AISTATS'2021    |                                                      |\n| QSGD                | Com.   | [QSGD: Communication-Efficient SGD via Gradient Quantization and Encoding](https://proceedings.neurips.cc/paper/2017/hash/6c340f25839e6acdc73414517203f5f0-Abstract.html) | NeurIPS'2017 |                                                      |\n| NIID-Bench          | Data.  | [Federated Learning on Non-IID Data Silos: An Experimental Study](https://arxiv.org/abs/2102.02079) | ICDE' 2022 | [Code](https://github.com/Xtra-Computing/NIID-Bench) |\n| LEAF                | Data.  | [LEAF: A Benchmark for Federated Settings](http://arxiv.org/abs/1812.01097) | Pre-print    | [Code](https://github.com/TalwalkarLab/leaf/)        |\n| ...                |   |  |     |      | \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989208714452782,
      "result": {
        "original_header": "Datasets &amp; Data Partition",
        "type": "Text_excerpt",
        "value": "Sophisticated in the real world, FL needs to handle various kind of data distribution scenarios, including iid and non-iid scenarios. Though there already exists some datasets and partition schemes for published data benchmark, it still can be very messy and hard for researchers to partition datasets according to their specific research problems, and maintain partition results during simulation. __FedLab__ provides [`fedlab.utils.dataset.partition.DataPartitioner`](https://fedlab.readthedocs.io/en/master/autoapi/fedlab/utils/dataset/partition/index.html#fedlab.utils.dataset.partition.DataPartitioner) that allows you to use pre-partitioned datasets as well as your own data. `DataPartitioner` stores sample indices for each client given a data partition scheme. Also, FedLab provides some extra datasets that are used in current FL researches while not provided by official PyTorch `torchvision.datasets` yet.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988367121548221,
      "result": {
        "original_header": "Data Partition",
        "type": "Text_excerpt",
        "value": "We provide multiple data partition schemes used in recent FL papers[[1]](#1)[[2]](#2)[[3]](#3). Here we show the data partition visualization of several common used datasets as the examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8540390266331942,
      "result": {
        "original_header": "1. Balanced IID partition",
        "type": "Text_excerpt",
        "value": "Each client has same number of samples, and same distribution for all class samples.  \nGiven 100 clients and CIFAR10, the data samples assigned to the first 10 clients could be: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9934351073799366,
      "result": {
        "original_header": "2. Unbalanced IID partition",
        "type": "Text_excerpt",
        "value": "Given $\\sigma=0.3$, 100 clients and CIFAR10, the data samples assigned to the first 10 clients is showed left below. And distribution of sample number for clients is showed right below. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9940819420853705,
      "result": {
        "original_header": "3. Hetero Dirichlet partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[3]](#3) and [[6]](#6). Number of data points and class proportions are unbalanced. Samples will be partitioned into $J$ clients by sampling $p_k\u223c\\text{Dir}_J(\\alpha)$ and allocating a $p_{k,j}$ proportion of the samples of class $k$ to local client $j$. \nGiven 100 clients, $\\alpha=0.3$ and CIFAR10, the data samples assigned to the first 10 clients is showed left below. And distribution of sample number for clients is showed right below. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8259250773151737,
      "result": {
        "original_header": "4. Shards partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition based on shards, used in [[4]](#4). \nGiven `shard_number=200`, 100 clients and CIFAR10, the data samples assigned to the first 10 clients could be: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8215775811447503,
      "result": {
        "original_header": "5. Balanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[5]](#5). Each client has same number of samples, while class distribution in each client follows Dirichlet distribution $\\text{Dir}{(\\alpha)}$. \nGiven $\\alpha=0.3$, 100 clients and CIFAR10, the data samples assigned to the first 10 clients could be: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9211153213694567,
      "result": {
        "original_header": "6. Unbalanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[5]](#5). Sample numbers of clients are drawn from Log-normal distribution $\\text{Log-N}(0, \\sigma^2)$, while class distribution in each client follows Dirichlet distribution $\\text{Dir}{(\\alpha)}$. \nGiven $\\sigma=0.3$, $\\alpha=0.3$, 100 clients and CIFAR10, the data samples assigned to the first 10 clients is showed left below. And distribution of sample number for clients is showed right below. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.92376307924833,
      "result": {
        "original_header": "7. Quantity-based Label Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[1]](#1). Each client has only specific number of sample class. \nGiven class number for each client as $3$, 10 clients and FashionMNIST, the data samples assigned to each client could be: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9534503903768692,
      "result": {
        "original_header": "8. Noise-based Feature Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[1]](#1). Different client's sample feature has different levels of Gaussian noise. Data example for 10 clients could be: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9574839393765071,
      "result": {
        "original_header": "9. FCUBE Synthetic partition",
        "type": "Text_excerpt",
        "value": "Non-iid partition used in [[1]](#1). Data example for 4 clients could be shown as: \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.940327048243413,
      "result": {
        "original_header": "Partition Visualization",
        "type": "Text_excerpt",
        "value": "For data distribution visualization in data partition, we provide `fedlab.utils.dataset.functional.feddata_scatterplot()` for users' convenience. \n\nVisualization result for CIFAR-10 Dirichlet Non-IID with $\\alpha=0.6$ on 5 clients:\n<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/train_vis-noniid-labeldir.png\" height=\"300\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974175298673107,
      "result": {
        "original_header": "Performance &amp; Insights",
        "type": "Text_excerpt",
        "value": "We provide the performance report of several reproduced federated learning algorithms to illustrate the correctness of FedLab in simulation. Furthermore, we describe several insights FedLab could provide for federated learning research. Without loss of generality, this section's experiments are conducted on partitioned MNIST datasets. The conclusions and observations in this section should still be valid in other data sets and scenarios.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.938234877563341,
      "result": {
        "original_header": "Federated Optimization on Non-IID Data",
        "type": "Text_excerpt",
        "value": "We choose $\\alpha = [0.1, 0.3, 0.5, 0.7]$ in label Dirichlet partitioned MNIST with 100 clients. We run 200 rounds of FedAvg with 5 local batches with full batch, learning rate 0.1, and sample ratio 0.1 (10 clients for each FL round). The test accuracy over the communication round is shown below. The results reveal the most vital challenge in federated learning.  \nWe use the same partitioned MNIST dataset in FedAvg[[4]](#4) to evaluate the corectness of FedLab. The rounds for FedAvg to achieve 97% test accuracy on MNIST using 2NN with E=5 reported in [[4]](#4)  /  FedLab:\n<table>\n   <tr>\n      <td rowspan=\"2\">Sample ratio</td>\n      <td colspan=\"2\">IID</td>\n      <td colspan=\"2\">Non-IID</td>\n   </tr>\n   <tr>\n      <td>B=FULL</td>\n      <td>B=10</td>\n      <td>B=FULL</td>\n      <td>B=10</td>\n   </tr>\n   <tr>\n      <td>0.0</td>\n      <td>1455  /  1293</td>\n      <td>316  /  77 </td>\n      <td>4278  /  1815</td>\n      <td>3275  /  1056</td>\n   </tr>\n   <tr>\n      <td>0.1       </td>\n      <td>1474  /  1230</td>\n      <td>87  /  43 </td>\n      <td>1796  /  2778</td>\n      <td>664  /  439</td>\n   </tr>\n   <tr>\n      <td>0.2</td>\n      <td>1658  / 1234</td>\n      <td>77  /  37 </td>\n      <td>1528  /  2805</td>\n      <td>619  / 427  </td>\n   </tr>\n   <tr>\n      <td>0.5</td>\n      <td>--  /  1229</td>\n      <td>75  /  36 </td>\n      <td>--  /  3034</td>\n      <td>443  / 474</td>\n   </tr> \n   <tr>\n      <td>1.0</td>\n      <td>--  /  1284</td>\n      <td>70  /  35 </td>\n      <td>--  /  3154</td>\n      <td>380  /  507</td>\n   </tr>\n</table> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9040908131926548,
      "result": {
        "original_header": "Simulation Efficiency",
        "type": "Text_excerpt",
        "value": "Time cost in 100 rounds (50 clients are sampled per round) under different acceleration settings. 1M-10P stands for the simulation runs on 1 machine with 4 GPUs and 10 processes. 2M-10P stands for the simulation runs on 2 machines with 4 GPUs and 10 processes (5 processes on each machine).  \nThe results are obtained by running the [tutorial](https://github.com/SMILELab-FL/FedLab/blob/master/tutorials/readme_exp.ipynb) and an example of cross-process scenario. Besides, the results reveal the simulation efficiency of FedLab under different simulation modes. Cross-process with 2 machines could be slower in this setting due to communication bottleneck. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957018174131419,
      "result": {
        "original_header": "Communication Efficiency",
        "type": "Text_excerpt",
        "value": "We provide a few performance baselines in communication-efficient federated learning including QSGD and top-k. In the experiment setting, we choose $\\alpha = 0.5$ in the label Dirichlet partitioned MNIST with 100 clients. We run 200 rounds with a sample ratio of 0.1 (10 clients for each FL round) of FedAvg, where each client performs 5 local epochs of SGD with a full batch and learning rate of 0.1. We report the top-1 test accuracy and its communication volume during the training. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://fedlab.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SMILELab-FL/FedLab/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/examples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/examples.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/customize_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/customize_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/pipeline_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/pipeline_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/readme_exp.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/readme_exp.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/communication_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/communication_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/adult_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/adult_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/svhn_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/svhn_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/cifar10_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/cifar10_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/fcube_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/fcube_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/rcv1_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/rcv1_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/covtype_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/covtype_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/fmnist_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/fmnist_tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/cifar100_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/tutorials/Datasets-DataPartitioner-tutorials/cifar100_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 125
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SMILELab-FL/FedLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FedLab: A Flexible Federated Learning Framework"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/gen_pickle_dataset.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/shakespeare/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/shakespeare/stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/shakespeare/preprocess/get_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/shakespeare/preprocess/data_to_json.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/nlp_utils/download_glove.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/celeba/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/celeba/stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/synthetic/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/synthetic/stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/reddit/source/run_reddit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/femnist/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/femnist/stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/femnist/preprocess/get_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/femnist/preprocess/data_to_json.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/sent140/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/sent140/stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/sent140/preprocess/get_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/sent140/preprocess/data_to_json.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/datasets/utils/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/standalone-mnist-board/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/asynchronous-cross-process-mnist/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/cross-process-mnist/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/hierarchical-hybrid-mnist/launch_cgroup1_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/hierarchical-hybrid-mnist/launch_cgroup2_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/hierarchical-hybrid-mnist/launch_topserver_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/hierarchical-hybrid-mnist/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/scale-mnist/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/standalone-mnist/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/scale-mnist-board/launch_eg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/examples/scale-mnist-board/stop_eg.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_iid_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients_dist.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients_dist.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_shards_200_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_dir_alpha_0.3_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients_dist.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_noniid-label_3_clients_10.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_feature_skew_vis.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/fcube_synthetic_part.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/feddata-scatterplot-vis.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./tutorials/Datasets-DataPartitioner-tutorials/imgs/train_vis-noniid-labeldir.png"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./examples/imgs/non_iid_impacts_on_fedavg.jpg"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "- Install the latest version from source code:\n```\n$ git clone git@github.com:SMILELab-FL/FedLab.git\n$ cd FedLab\n$ pip install -r requirements.txt\n```\n\n- Install the stable version (old version) via pip:\n```\n# assign the version fedlab==1.3.0\n$ pip install fedlab \n```\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8940197257051385,
      "result": {
        "original_header": "Baselines",
        "type": "Text_excerpt",
        "value": "We provide the reproduction of baseline federated algorthms for users in this repo. \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "1. Balanced IID partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_iid_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9854431742594438,
      "result": {
        "original_header": "2. Unbalanced IID partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients_dist.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9854431742594438,
      "result": {
        "original_header": "3. Hetero Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients_dist.png\" height=\"200\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "4. Shards partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_shards_200_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "5. Balanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_dir_alpha_0.3_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9854431742594438,
      "result": {
        "original_header": "6. Unbalanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients_dist.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "7. Quantity-based Label Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_noniid-label_3_clients_10.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "8. Noise-based Feature Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_feature_skew_vis.png\" height=\"400\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8786430691551735,
      "result": {
        "original_header": "9. FCUBE Synthetic partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fcube_synthetic_part.png\" height=\"600\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9915661887592429,
      "result": {
        "original_header": "Simulation Efficiency",
        "type": "Text_excerpt",
        "value": "| Standalone  | Cross-process 1M-10P | Cross-process 2M-10P |\n| ----------  | ------------------------- | --------------------------- |\n|  45.6 Min   |     2.9 Min               |              4.23 Min       | \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8048035194397627,
      "result": {
        "original_header": "1. Balanced IID partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_iid_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8168389843999396,
      "result": {
        "original_header": "2. Unbalanced IID partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_iid_unbalance_sgm_0.3_100clients_dist.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8168389843999396,
      "result": {
        "original_header": "3. Hetero Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_hetero_dir_0.3_100clients_dist.png\" height=\"200\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8048035194397627,
      "result": {
        "original_header": "4. Shards partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_shards_200_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8048035194397627,
      "result": {
        "original_header": "5. Balanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_balance_dir_alpha_0.3_100clients.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8168389843999396,
      "result": {
        "original_header": "6. Unbalanced Dirichlet partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients.png\" height=\"200\">&nbsp;&nbsp;&nbsp;<img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/cifar10_unbalance_dir_alpha_0.3_unbalance_sgm_0.3_100clients_dist.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8048035194397627,
      "result": {
        "original_header": "7. Quantity-based Label Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_noniid-label_3_clients_10.png\" height=\"200\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8233724296506277,
      "result": {
        "original_header": "8. Noise-based Feature Distribution Skew partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fmnist_feature_skew_vis.png\" height=\"400\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8048035194397627,
      "result": {
        "original_header": "9. FCUBE Synthetic partition",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/fcube_synthetic_part.png\" height=\"600\"></p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9031022556941897,
      "result": {
        "original_header": "Partition Visualization",
        "type": "Text_excerpt",
        "value": "Visualization for synthetic partition code below:\n```python\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom fedlab.utils.dataset.functional import feddata_scatterplot\n\nsample_num = 15\nclass_num = 4\nclients_num = 3\nnum_per_client = int(sample_num/clients_num)\nlabels = np.random.randint(class_num, size=sample_num)  # generate 15 labels, each label is 0 to 3\nrand_per = np.random.permutation(sample_num)\n# partition synthetic data into 3 clients\ndata_indices = {0: rand_per[0:num_per_client],\n                1: rand_per[num_per_client:num_per_client*2],\n                2: rand_per[num_per_client*2:num_per_client*3]}\ntitle = 'Data Distribution over Clients for Each Class'\nfig = feddata_scatterplot(labels.tolist(),\n                          data_indices,\n                          clients_num,\n                          class_num,\n                          figsize=(6, 4),\n                          max_size=200,\n                          title=title)\nplt.show(fig)\nfig.savefig(f'imgs/feddata-scatterplot-vis.png') \n```\n<p align=\"center\"><img src=\"./tutorials/Datasets-DataPartitioner-tutorials/imgs/feddata-scatterplot-vis.png\" height=\"300\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8973662648584024,
      "result": {
        "original_header": "Federated Optimization on Non-IID Data",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"./examples/imgs/non_iid_impacts_on_fedavg.jpg\" height=\"300\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deep-learning, federated-learning, federated-learning-framework, fedlab, machine-learning, pytorch, pytorch-federated-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/./docs/imgs/FedLab-logo.svg?raw=True"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FedLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "SMILELab-FL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6597500,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 610948,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 16931,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 859,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2102.02079"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1905.10497"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1812.06127"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2002.06440*."
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2010.01243"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1812.01097*.\n\n<a id=\"3\">[3]</a> Yurochkin, M., Agarwal, M., Ghosh, S., Greenewald, K., Hoang, N., & Khazaeni, Y. (2019, May). Bayesian nonparametric federated learning of neural networks. In *International Conference on Machine Learning* (pp. 7252-7261). PMLR.\n\n<a id=\"4\">[4]</a> McMahan, B., Moore, E., Ramage, D., Hampson, S., & y Arcas, B. A. (2017, April). Communication-efficient learning of deep networks from decentralized data. In *Artificial intelligence and statistics* (pp. 1273-1282). PMLR.\n\n<a id=\"5\">[5]</a> Acar, D. A. E., Zhao, Y., Navarro, R. M., Mattina, M., Whatmough, P. N., & Saligrama, V. (2021). Federated learning based on dynamic regularization. *arXiv preprint https://arxiv.org/abs/2111.04263*.\n\n<a id=\"6\">[6]</a> Wang, H., Yurochkin, M., Sun, Y., Papailiopoulos, D., & Khazaeni, Y. (2020). Federated learning with matched averaging. *arXiv preprint https://arxiv.org/abs/2002.06440*."
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2107.11621"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/1909.12488.pdf"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1910.01991"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2111.04263*.\n\n<a id=\"6\">[6]</a> Wang, H., Yurochkin, M., Sun, Y., Papailiopoulos, D., & Khazaeni, Y. (2020). Federated learning with matched averaging. *arXiv preprint https://arxiv.org/abs/2002.06440*."
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2022-10-26T03:11:22Z",
        "date_published": "2022-10-26T03:28:27Z",
        "description": "A huge version update of FedLab. We further upgrade the APIs to better craft the FL simulation tasks. The updates can be broadly summarized as follows:\r\n\r\n- Better source code file structure. \r\n- Better README and tutorials.\r\n- Unified abstract class interface, supporting plug-in usage of trainer and handler.\r\n- Reproductions of the baseline algorithm are well built in fedlab.contrib.\r\n- Built-in dataset partition tools.\r\n- More examples.\r\n- ...",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "release_id": 80993702,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/80993702",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/80993702",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2022-04-24T02:01:59Z",
        "date_published": "2022-04-24T02:12:06Z",
        "description": "Fixed typing errors in the old python version.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.2.1",
        "name": "v1.2.1 (fix bugs in v1.2.0)",
        "release_id": 65158113,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/65158113",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/65158113",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2022-04-22T03:18:41Z",
        "date_published": "2022-04-22T04:26:08Z",
        "description": "**The new version refactored the code and provided a more convenient FL interface.**\r\nPlease see our docs and source codes.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.2.0",
        "name": "v1.2.0",
        "release_id": 65032099,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/65032099",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/65032099",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2022-04-10T08:06:15Z",
        "date_published": "2022-04-10T08:15:08Z",
        "description": "New feature:\r\n1. Support Dockerfile deployment;\r\n2. Better code organization structure;\r\n3. Better communication APIs:\r\n  - Move p2p communication APIs \"send and recv\" into class DistNetwork;\r\n  - Package accepts any-shape tensors now (Only vectorized tensors are accepted in the previous version);\r\n  - Add communication volume information;",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.1.5",
        "name": "v1.1.5 (fix bugs in v1.1.4)",
        "release_id": 64047238,
        "tag": "v1.1.5",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/64047238",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/64047238",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2021-10-11T13:24:52Z",
        "date_published": "2021-10-11T13:29:29Z",
        "description": "New Features\uff1a\r\n\r\n    1. Three stage communication manager: setup, communication, shutdown.\r\n    2. More flexible torch data type check.\r\n    3. More data partition strategy.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.1.2",
        "name": "v1.1.2",
        "release_id": 51142707,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/51142707",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/51142707",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2021-09-25T03:03:05Z",
        "date_published": "2021-09-25T04:17:36Z",
        "description": "New feature:\r\n\r\n1. DataPartitioner. More data partition strategy.\r\n2. ModelMaintainer. Better class inheritance.\r\n3. Compressor. New communication compressor group. Currently only topk available, BUT more are coming.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.1.1",
        "name": "v1.1.1 ",
        "release_id": 50243620,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/50243620",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/50243620",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2021-09-14T04:43:40Z",
        "date_published": "2021-09-14T04:56:11Z",
        "description": "New feature.\r\n\r\n1. Add more general setup agreements for Managers: ServerManager can get the local client number automatically.\r\n2. Update Manager Abstract Class inheritance.\r\n3. Two map modes of Coordinator are finished for different local data partition strategies. \r\n4. Accmulator was added but untested yet. (More graceful implementation is comming.)",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 49500721,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/49500721",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/49500721",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2021-09-05T06:31:18Z",
        "date_published": "2021-09-05T06:42:55Z",
        "description": "## Stable version of FedLab\r\nMove standard implementation into https://github.com/SMILELab-FL/FedLab-benchmarks.\r\nAdd *scale* module.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.0-beta",
        "name": "v1.0.1-beta ",
        "release_id": 49024210,
        "tag": "v1.0-beta",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/49024210",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/49024210",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.0-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dunzeng",
          "type": "User"
        },
        "date_created": "2021-08-20T08:41:47Z",
        "date_published": "2021-08-21T05:40:21Z",
        "description": "Alpha version of FedLab.",
        "html_url": "https://github.com/SMILELab-FL/FedLab/releases/tag/v1.0-alpha",
        "name": "Alpha version of FedLab.",
        "release_id": 48215109,
        "tag": "v1.0-alpha",
        "tarball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/tarball/v1.0-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/48215109",
        "value": "https://api.github.com/repos/SMILELab-FL/FedLab/releases/48215109",
        "zipball_url": "https://api.github.com/repos/SMILELab-FL/FedLab/zipball/v1.0-alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Examples",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "- Run our quick start examples of different scenarios with a partitioned MNIST dataset.\n\n```\n# example of standalone\n$ cd ./examples/standalone/\n$ python standalone.py --total_clients 100 --com_round 3 --sample_ratio 0.1 --batch_size 100 --epochs 5 --lr 0.02\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:10:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 724
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Learning materials",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "We provide tutorials in jupyter notebook format for FedLab beginners in FedLab\\tutorials. These tutorials include data partition, customized algorithms, and pipeline demos. For the FedLab or FL beginners, we recommend this [notebook](tutorials/pipeline_tutorial.ipynb). Furthermore, we provide reproductions of federated algorithms via FedLab, which are stored in fedlab.contirb.algorithm. We think they are good examples for users to further explore FedLab.\n\n[Website Documentations](https://fedlab.readthedocs.io/en/master/) are available:\n\n- [Overview of FedLab](https://fedlab.readthedocs.io/en/master/overview.html)\n- [Installation & Setup](https://fedlab.readthedocs.io/en/master/install.html)\n- [Examples](https://fedlab.readthedocs.io/en/master/example.html)\n- [Contribute Guideline](https://fedlab.readthedocs.io/en/master/contributing.html)\n- [API Reference](https://fedlab.readthedocs.io/en/master/autoapi/index.html)\n\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Examples",
        "parent_header": [
          "FedLab: A Flexible Federated Learning Framework",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "- Run our quick start examples of different scenarios with a partitioned MNIST dataset.\n\n```\n# example of standalone\n$ cd ./examples/standalone/\n$ python standalone.py --total_clients 100 --com_round 3 --sample_ratio 0.1 --batch_size 100 --epochs 5 --lr 0.02\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SMILELab-FL/FedLab/master/README.md",
      "technique": "header_analysis"
    }
  ]
}