{
  "application_domain": [
    {
      "confidence": 17.02,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9272157698970802,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 37.61,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gmum/umwpl2021"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-27T13:38:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-04T19:11:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The repository of the course \"Machine Learning in Drug Design\" at the Jagiellonian University, Krak\u00f3w, Poland. The page is hosted by the machine learning research group GMUM."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9445726393810616,
      "result": {
        "original_header": "\ud83c\uddec\ud83c\udde7 Machine Learning in Drug Design (MLDD) 2021/2022",
        "type": "Text_excerpt",
        "value": "This repository contains course materials for the course \"Machine Learning in Drug Design.\" In the `labs` directory, there are materials covering the following topics: \n1. Python and machine learning basics revision. SMILES representation and molecular fingerprints. Introduction to the RDKit package.\n2. Use of publicly available molecular data sets. Effective search in open databases. Creation and curation of custom data sets.\n3. Protein chemistry. Popular data formats. Molecular docking.\n4. Molecular graph theory. Graph neural networks. Interpretability.\n5. Review of generative models in drug discovery.\n6. Finding drug targets. Deep learning for proteins.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9596441930672747,
      "result": {
        "original_header": "About us",
        "type": "Text_excerpt",
        "value": "[GMUM](https://gmum.net/) (Machine Learning Research Group) is a group at the Jagiellonian University working on various aspects of machine learning, and in particular deep learning - in both fundamental and applied settings. The group is led by prof. Jacek Tabor. \nSome of the research directions our group pursues include:\n- generative models: efficient training and sampling; inpainting; super-resolution,\n- theoretical understanding of deep learning and optimization,\n- natural language processing,\n- drug design and cheminformatics,\n- unsupervised learning and clustering,\n- computer vision and medical image analysis. \nWe are hosting machine learning seminars that are open to the public. You can check the schedule on [our website](https://gmum.net/seminars.html) and join online (links posted on [our Facebook](http://facebook.com/gmum.net)).\nYou can also add seminar info to your [Google calendar](https://calendar.google.com/calendar/u/0?cid=ZDJjcTFudnU0Y2UxNXNnODltdDc4Y3BtcTBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ).\n \n"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gmum/umwpl2021/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L5-generative-models/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L5-generative-models/laboratory.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L4-graph-neural-networks/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L4-graph-neural-networks/laboratory.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L6-protein-deep-learning/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L6-protein-deep-learning/laboratory.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L2-dataset-preparation/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L2-dataset-preparation/laboratory.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L1-machine-learning-chemistry/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L1-machine-learning-chemistry/laboratory.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L3-molecular-docking/laboratory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/labs/L3-molecular-docking/laboratory.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gmum/umwpl2021/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gmum/umwpl2021"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\ud83c\uddec\ud83c\udde7 Machine Learning in Drug Design (MLDD) 2021/2022"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Environment Setup",
        "parent_header": [
          "\ud83c\uddec\ud83c\udde7 Machine Learning in Drug Design (MLDD) 2021/2022"
        ],
        "type": "Text_excerpt",
        "value": "Python will be used throughout the course. The environment setup steps are shown below:\n\n1. Install [miniconda](https://docs.conda.io/en/latest/miniconda.html) following the instructions for your operating system.\n2. Download this repository: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Install environment from the YAML file: `conda env create -f environment.yml`\n\nIn the `environment-versions.yml` file, the exact versions of each package are listed. They may not be compatible with all operating systems.\n\n_Important! If you would like to use your GPU to train neural networks, add `cudatoolkit` in a correct version (e.g. `cudatoolkit=10.2`) to the `environment.yml` file._\n\n_If you plan to use our computational cluster, ask us about a configured environment on the server. We have a singularity image with all the packages installed._\n"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9239502679938155,
      "result": {
        "original_header": "Instalacja \u015arodowiska",
        "type": "Text_excerpt",
        "value": "1. Instalacja [minicondy](https://docs.conda.io/en/latest/miniconda.html) zgodnie z instrukcj\u0105 dla wybranego systemu.\n2. Pobranie tego repozytorium: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Instalacja \u015brodowiska z pliku: `conda env create -f environment.yml` \nW pliku `environment-versions.yml` znajduj\u0105 si\u0119 dok\u0142adne wersje poszczeg\u00f3lnych paczek, ale lista mo\u017ce nie by\u0107 kompatybilna z wszystkimi systemami. \n_Wa\u017cne! Je\u017celi chcia\u0142by\u015b u\u017cy\u0107 karty graficznej do treningu sieci neuronowych, dodaj `cudatoolkit` z odpowiedni\u0105 wersj\u0105 (np. `cudatoolkit=10.2`) do pliku `environment.yml`._ \n"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9904607004621224,
      "result": {
        "original_header": "Projekt Zaliczeniowy",
        "type": "Text_excerpt",
        "value": "- Publiczne repozytorium Github (lub Gitlab/Bitbucket) z licencj\u0105 umo\u017cliwiaj\u0105c\u0105 dzielenie si\u0119 kodem i wynikami projektu na stronie kursu oraz wykorzystanie kodu w przysz\u0142ych edycjach kursu (np. MIT, GNU GPL, Apache 2.0 lub w\u0142asna).\n- Dokumentacj\u0119 projektu w postaci pliku README, kt\u00f3ry zawiera mi\u0119dzy innymi: kr\u00f3tki opis projektu, instrukcj\u0119 uruchomienia kodu wraz z list\u0105 zale\u017cno\u015bci, podsumowanie wynik\u00f3w. Mo\u017cliwe s\u0105 r\u00f3wnie\u017c odniesienia do wygenerowanych plik\u00f3w PDF i iPython notebook\u00f3w z uzupe\u0142nieniem dokumentacji, pod warunkiem \u017ce znajduj\u0105 si\u0119 r\u00f3wnie\u017c w repozytorium.\n- Wszystkie dane lub odniesienia do \u017ar\u00f3de\u0142 danych.\n- Kod umo\u017cliwiaj\u0105cy odtworzenie kluczowych wynik\u00f3w projektu. \n"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gmum/umwpl2021/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cheminformatics, computer-aided-drug-design, deep-learning, drug-discovery, graph-neural-networks, machine-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "umwpl2021"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gmum"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 299972,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5509,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/1810.00826.pdf"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2002.08264.pdf"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1810.00826*.\n9. Veli\u010dkovi\u0107, P., Cucurull, G., Casanova, A., Romero, A., Lio, P., & Bengio, Y. (2017). [Graph attention networks](https://arxiv.org/pdf/1710.10903.pdf). *arXiv preprint https://arxiv.org/abs/1710.10903*.\n10. Hamilton, W. L., Ying, R., & Leskovec, J. (2017, December). [Inductive representation learning on large graphs](https://proceedings.neurips.cc/paper/2017/file/5dd9db5e033da9c6fb5ba83c7a7ebea9-Paper.pdf). In *Proceedings of the 31st International Conference on Neural Information Processing Systems* (pp. 1025-1035).\n11. Pope, P. E., Kolouri, S., Rostami, M., Martin, C. E., & Hoffmann, H. (2019). [Explainability methods for graph convolutional neural networks](https://openaccess.thecvf.com/content_CVPR_2019/papers/Pope_Explainability_Methods_for_Graph_Convolutional_Neural_Networks_CVPR_2019_paper.pdf). In *Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition* (pp. 10772-10781).\n12. Popova, M., Isayev, O., & Tropsha, A. (2018). [Deep reinforcement learning for de novo drug design](https://www.science.org/doi/pdf/10.1126/sciadv.aap7885). *Science advances*.\n13. Jin, W., Barzilay, R., & Jaakkola, T. (2018, July). [Junction tree variational autoencoder for molecular graph generation](http://proceedings.mlr.press/v80/jin18a/jin18a.pdf). In *International conference on machine learning* (pp. 2323-2332). PMLR.\n14. G\u00f3mez-Bombarelli, R., Wei, J. N., Duvenaud, D., Hern\u00e1ndez-Lobato, J. M., S\u00e1nchez-Lengeling, B., Sheberla, D., ... & Aspuru-Guzik, A. (2018). [Automatic chemical design using a data-driven continuous representation of molecules](https://pubs.acs.org/doi/pdf/10.1021/acscentsci.7b00572). *ACS central science, 4*(2), 268-276.\n15. Maziarka, \u0141., Danel, T., Mucha, S., Rataj, K., Tabor, J., & Jastrz\u0119bski, S. (2020). [Molecule attention transformer](https://arxiv.org/pdf/2002.08264.pdf). *arXiv preprint https://arxiv.org/abs/2002.08264*.\n16. Jim\u00e9nez, J., Doerr, S., Mart\u00ednez-Rosell, G., Rose, A. S., & De Fabritiis, G. (2017). [DeepSite: protein-binding site predictor using 3D-convolutional neural networks](https://academic.oup.com/bioinformatics/article/33/19/3036/3859178). *Bioinformatics, 33*(19), 3036-3042.\n\n# \ud83c\uddf5\ud83c\uddf1 Uczenie maszynowe w projektowaniu lek\u00f3w (UMwPL) 2021/2022\n\nRepozytorium zawiera materia\u0142y z kursu \"Uczenie maszynowe w projektowaniu lek\u00f3w\". W folderze `labs` znajduj\u0105 si\u0119 materia\u0142y z \u0107wicze\u0144, kt\u00f3re pokrywaj\u0105 nast\u0119puj\u0105ce tematy:\n\n1. Powt\u00f3rka Pythona i podstaw uczenia maszynowego. Reprezentacja SMILES i fingerprinty zwi\u0105zk\u00f3w chemicznych. Wprowadzenie do pakietu RDKit.\n2. Korzystanie z publicznie dost\u0119pnych zbior\u00f3w danych moleku\u0142. Efektywne przeszukiwanie otwartych baz danych. Tworzenie w\u0142asnych zbior\u00f3w danych.\n3. Chemia bia\u0142ek. Popularne formaty danych. Dokowanie molekularne.\n4. Teoria graf\u00f3w molekularnych. Grafowe sieci neuronowe, Interpretowalno\u015b\u0107.\n5. Przegl\u0105d modeli generatywnych w odkrywaniu lek\u00f3w.\n6. Znajdowanie nowych cel\u00f3w biologicznych. Uczenie g\u0142\u0119bokie dla bia\u0142ek.\n\n## Instalacja \u015arodowiska\n\nZaj\u0119cia b\u0119d\u0105 prowadzone z u\u017cyciem j\u0119zyka Pythonie. Instrukcja instalacji \u015brodowiska zawieraj\u0105cego potrzebne paczki:\n\n1. Instalacja [minicondy](https://docs.conda.io/en/latest/miniconda.html) zgodnie z instrukcj\u0105 dla wybranego systemu.\n2. Pobranie tego repozytorium: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Instalacja \u015brodowiska z pliku: `conda env create -f environment.yml`\n\nW pliku `environment-versions.yml` znajduj\u0105 si\u0119 dok\u0142adne wersje poszczeg\u00f3lnych paczek, ale lista mo\u017ce nie by\u0107 kompatybilna z wszystkimi systemami.\n\n_Wa\u017cne! Je\u017celi chcia\u0142by\u015b u\u017cy\u0107 karty graficznej do treningu sieci neuronowych, dodaj `cudatoolkit` z odpowiedni\u0105 wersj\u0105 (np. `cudatoolkit=10.2`) do pliku `environment.yml`._\n\n_Je\u015bli planujesz u\u017cywa\u0107 naszego klastra obliczeniowego, spytaj nas o skonfigurowane \u015brodowisko. Na serwerze mamy obraz singularity z zainstalownymi wszystkimi potrzebnymi paczkami._\n\n## Projekt Zaliczeniowy\n\nOcena z \u0107wicze\u0144 wystawiana jest na podstawie projektu. Warunkiem koniecznym uzyskania oceny pozytywnej jest uczestnictwo na zaj\u0119ciach (dopuszczalna 1 nieobecno\u015b\u0107).\n\nProjekty mo\u017cna b\u0119dzie wykonywa\u0107 w grupach 1-3 os\u00f3b. W razie potrzeby mo\u017cliwe jest otrzymanie dost\u0119pu do klastra obliczeniowego z GPU po z\u0142o\u017ceniu pro\u015bby do administratora. Projekt zaliczeniowy powinien posiada\u0107:\n\n- Publiczne repozytorium Github (lub Gitlab/Bitbucket) z licencj\u0105 umo\u017cliwiaj\u0105c\u0105 dzielenie si\u0119 kodem i wynikami projektu na stronie kursu oraz wykorzystanie kodu w przysz\u0142ych edycjach kursu (np. MIT, GNU GPL, Apache 2.0 lub w\u0142asna).\n- Dokumentacj\u0119 projektu w postaci pliku README, kt\u00f3ry zawiera mi\u0119dzy innymi: kr\u00f3tki opis projektu, instrukcj\u0119 uruchomienia kodu wraz z list\u0105 zale\u017cno\u015bci, podsumowanie wynik\u00f3w. Mo\u017cliwe s\u0105 r\u00f3wnie\u017c odniesienia do wygenerowanych plik\u00f3w PDF i iPython notebook\u00f3w z uzupe\u0142nieniem dokumentacji, pod warunkiem \u017ce znajduj\u0105 si\u0119 r\u00f3wnie\u017c w repozytorium.\n- Wszystkie dane lub odniesienia do \u017ar\u00f3de\u0142 danych.\n- Kod umo\u017cliwiaj\u0105cy odtworzenie kluczowych wynik\u00f3w projektu.\n\n*Uwaga:* projekty, kt\u00f3re b\u0119d\u0105 kontynuowane po sko\u0144czeniu semestru, np. w celu napisania publikacji, mog\u0105 mie\u0107 prywatne repozytorium udost\u0119pnione prowadz\u0105cym na tych samych zasadach.\n\n### Ocenianie\n\n6 i 13 XII odb\u0119d\u0105 si\u0119 prezentacje projekt\u00f3w. Oceniane b\u0119dzie zapoznanie si\u0119 z tematem, zrozumienie danych i plany na pozosta\u0142\u0105 cz\u0119\u015b\u0107 semestru. Prezentacja b\u0119dzie stanowi\u0107 15% oceny ko\u0144cowej. Dla u\u0142atwienia przygotowania prezentacji, poni\u017cej znajduj\u0105 si\u0119 szczeg\u00f3\u0142owe kryteria. Podane s\u0105 te\u017c pytania, kt\u00f3re mog\u0105 pom\u00f3c w przygotowaniu.\n\n- Zrozumienie tematu (5%)\n  - Co jest celem projektu?\n  - Jakie jest znaczenie biologiczne/chemiczne projektu?\n  - Co jest potencjaln\u0105 trudno\u015bci\u0105 w wykonaniu projektu?\n  - Jaki jest spodziewany efekt projektu?\n- Zrozumienie danych (5%)\n  - jakie dane wej\u015bciowe b\u0119d\u0105 u\u017cyte w projekcie?\n  - sk\u0105d mo\u017cna pozyska\u0107 dane do projektu?\n  - jaka jest struktura danych u\u017cytych w projekcie (np. fingerprinty albo grafy molekularne)?\n  - wst\u0119pnie jakie problemy w dost\u0119pnych danych s\u0105 widoczne?\n  - jakie dodatkowe informacje (metadane) s\u0105 dost\u0119pne?\n- Planowana implementacja (5%)\n  - Czy ten temat by\u0142 ju\u017c poruszany w literaturze? Je\u015bli tak, to jakie narz\u0119dzia s\u0105 dost\u0119pne?\n  - Jakie metody uczenia maszynowego b\u0119d\u0105 wykorzystane w projekcie?\n  - Jak zdefiniowane b\u0119dzie wej\u015bcie i wyj\u015bcie modelu?\n  - Jakie miary b\u0119d\u0105 zastosowane do zmierzenia skuteczno\u015bci modelu?\n  - Jaki stos technologiczny b\u0119dzie u\u017cyty do wykonania projektu?\n\nPrezentacja odbywa si\u0119 stacjonarnie. Jest dost\u0119p do rzutnika, wi\u0119c mo\u017cna przygotowa\u0107 pomocnicze slajdy. Prezentacja powinna zaj\u0105\u0107 nie wi\u0119cej ni\u017c 15 minut (najlepiej 10 minut prezentacji i 5 minut dyskusji)."
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1710.10903*.\n10. Hamilton, W. L., Ying, R., & Leskovec, J. (2017, December). [Inductive representation learning on large graphs](https://proceedings.neurips.cc/paper/2017/file/5dd9db5e033da9c6fb5ba83c7a7ebea9-Paper.pdf). In *Proceedings of the 31st International Conference on Neural Information Processing Systems* (pp. 1025-1035).\n11. Pope, P. E., Kolouri, S., Rostami, M., Martin, C. E., & Hoffmann, H. (2019). [Explainability methods for graph convolutional neural networks](https://openaccess.thecvf.com/content_CVPR_2019/papers/Pope_Explainability_Methods_for_Graph_Convolutional_Neural_Networks_CVPR_2019_paper.pdf). In *Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition* (pp. 10772-10781).\n12. Popova, M., Isayev, O., & Tropsha, A. (2018). [Deep reinforcement learning for de novo drug design](https://www.science.org/doi/pdf/10.1126/sciadv.aap7885). *Science advances*.\n13. Jin, W., Barzilay, R., & Jaakkola, T. (2018, July). [Junction tree variational autoencoder for molecular graph generation](http://proceedings.mlr.press/v80/jin18a/jin18a.pdf). In *International conference on machine learning* (pp. 2323-2332). PMLR.\n14. G\u00f3mez-Bombarelli, R., Wei, J. N., Duvenaud, D., Hern\u00e1ndez-Lobato, J. M., S\u00e1nchez-Lengeling, B., Sheberla, D., ... & Aspuru-Guzik, A. (2018). [Automatic chemical design using a data-driven continuous representation of molecules](https://pubs.acs.org/doi/pdf/10.1021/acscentsci.7b00572). *ACS central science, 4*(2), 268-276.\n15. Maziarka, \u0141., Danel, T., Mucha, S., Rataj, K., Tabor, J., & Jastrz\u0119bski, S. (2020). [Molecule attention transformer](https://arxiv.org/pdf/2002.08264.pdf). *arXiv preprint https://arxiv.org/abs/2002.08264*.\n16. Jim\u00e9nez, J., Doerr, S., Mart\u00ednez-Rosell, G., Rose, A. S., & De Fabritiis, G. (2017). [DeepSite: protein-binding site predictor using 3D-convolutional neural networks](https://academic.oup.com/bioinformatics/article/33/19/3036/3859178). *Bioinformatics, 33*(19), 3036-3042.\n\n# \ud83c\uddf5\ud83c\uddf1 Uczenie maszynowe w projektowaniu lek\u00f3w (UMwPL) 2021/2022\n\nRepozytorium zawiera materia\u0142y z kursu \"Uczenie maszynowe w projektowaniu lek\u00f3w\". W folderze `labs` znajduj\u0105 si\u0119 materia\u0142y z \u0107wicze\u0144, kt\u00f3re pokrywaj\u0105 nast\u0119puj\u0105ce tematy:\n\n1. Powt\u00f3rka Pythona i podstaw uczenia maszynowego. Reprezentacja SMILES i fingerprinty zwi\u0105zk\u00f3w chemicznych. Wprowadzenie do pakietu RDKit.\n2. Korzystanie z publicznie dost\u0119pnych zbior\u00f3w danych moleku\u0142. Efektywne przeszukiwanie otwartych baz danych. Tworzenie w\u0142asnych zbior\u00f3w danych.\n3. Chemia bia\u0142ek. Popularne formaty danych. Dokowanie molekularne.\n4. Teoria graf\u00f3w molekularnych. Grafowe sieci neuronowe, Interpretowalno\u015b\u0107.\n5. Przegl\u0105d modeli generatywnych w odkrywaniu lek\u00f3w.\n6. Znajdowanie nowych cel\u00f3w biologicznych. Uczenie g\u0142\u0119bokie dla bia\u0142ek.\n\n## Instalacja \u015arodowiska\n\nZaj\u0119cia b\u0119d\u0105 prowadzone z u\u017cyciem j\u0119zyka Pythonie. Instrukcja instalacji \u015brodowiska zawieraj\u0105cego potrzebne paczki:\n\n1. Instalacja [minicondy](https://docs.conda.io/en/latest/miniconda.html) zgodnie z instrukcj\u0105 dla wybranego systemu.\n2. Pobranie tego repozytorium: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Instalacja \u015brodowiska z pliku: `conda env create -f environment.yml`\n\nW pliku `environment-versions.yml` znajduj\u0105 si\u0119 dok\u0142adne wersje poszczeg\u00f3lnych paczek, ale lista mo\u017ce nie by\u0107 kompatybilna z wszystkimi systemami.\n\n_Wa\u017cne! Je\u017celi chcia\u0142by\u015b u\u017cy\u0107 karty graficznej do treningu sieci neuronowych, dodaj `cudatoolkit` z odpowiedni\u0105 wersj\u0105 (np. `cudatoolkit=10.2`) do pliku `environment.yml`._\n\n_Je\u015bli planujesz u\u017cywa\u0107 naszego klastra obliczeniowego, spytaj nas o skonfigurowane \u015brodowisko. Na serwerze mamy obraz singularity z zainstalownymi wszystkimi potrzebnymi paczkami._\n\n## Projekt Zaliczeniowy\n\nOcena z \u0107wicze\u0144 wystawiana jest na podstawie projektu. Warunkiem koniecznym uzyskania oceny pozytywnej jest uczestnictwo na zaj\u0119ciach (dopuszczalna 1 nieobecno\u015b\u0107).\n\nProjekty mo\u017cna b\u0119dzie wykonywa\u0107 w grupach 1-3 os\u00f3b. W razie potrzeby mo\u017cliwe jest otrzymanie dost\u0119pu do klastra obliczeniowego z GPU po z\u0142o\u017ceniu pro\u015bby do administratora. Projekt zaliczeniowy powinien posiada\u0107:\n\n- Publiczne repozytorium Github (lub Gitlab/Bitbucket) z licencj\u0105 umo\u017cliwiaj\u0105c\u0105 dzielenie si\u0119 kodem i wynikami projektu na stronie kursu oraz wykorzystanie kodu w przysz\u0142ych edycjach kursu (np. MIT, GNU GPL, Apache 2.0 lub w\u0142asna).\n- Dokumentacj\u0119 projektu w postaci pliku README, kt\u00f3ry zawiera mi\u0119dzy innymi: kr\u00f3tki opis projektu, instrukcj\u0119 uruchomienia kodu wraz z list\u0105 zale\u017cno\u015bci, podsumowanie wynik\u00f3w. Mo\u017cliwe s\u0105 r\u00f3wnie\u017c odniesienia do wygenerowanych plik\u00f3w PDF i iPython notebook\u00f3w z uzupe\u0142nieniem dokumentacji, pod warunkiem \u017ce znajduj\u0105 si\u0119 r\u00f3wnie\u017c w repozytorium.\n- Wszystkie dane lub odniesienia do \u017ar\u00f3de\u0142 danych.\n- Kod umo\u017cliwiaj\u0105cy odtworzenie kluczowych wynik\u00f3w projektu.\n\n*Uwaga:* projekty, kt\u00f3re b\u0119d\u0105 kontynuowane po sko\u0144czeniu semestru, np. w celu napisania publikacji, mog\u0105 mie\u0107 prywatne repozytorium udost\u0119pnione prowadz\u0105cym na tych samych zasadach.\n\n### Ocenianie\n\n6 i 13 XII odb\u0119d\u0105 si\u0119 prezentacje projekt\u00f3w. Oceniane b\u0119dzie zapoznanie si\u0119 z tematem, zrozumienie danych i plany na pozosta\u0142\u0105 cz\u0119\u015b\u0107 semestru. Prezentacja b\u0119dzie stanowi\u0107 15% oceny ko\u0144cowej. Dla u\u0142atwienia przygotowania prezentacji, poni\u017cej znajduj\u0105 si\u0119 szczeg\u00f3\u0142owe kryteria. Podane s\u0105 te\u017c pytania, kt\u00f3re mog\u0105 pom\u00f3c w przygotowaniu.\n\n- Zrozumienie tematu (5%)\n  - Co jest celem projektu?\n  - Jakie jest znaczenie biologiczne/chemiczne projektu?\n  - Co jest potencjaln\u0105 trudno\u015bci\u0105 w wykonaniu projektu?\n  - Jaki jest spodziewany efekt projektu?\n- Zrozumienie danych (5%)\n  - jakie dane wej\u015bciowe b\u0119d\u0105 u\u017cyte w projekcie?\n  - sk\u0105d mo\u017cna pozyska\u0107 dane do projektu?\n  - jaka jest struktura danych u\u017cytych w projekcie (np. fingerprinty albo grafy molekularne)?\n  - wst\u0119pnie jakie problemy w dost\u0119pnych danych s\u0105 widoczne?\n  - jakie dodatkowe informacje (metadane) s\u0105 dost\u0119pne?\n- Planowana implementacja (5%)\n  - Czy ten temat by\u0142 ju\u017c poruszany w literaturze? Je\u015bli tak, to jakie narz\u0119dzia s\u0105 dost\u0119pne?\n  - Jakie metody uczenia maszynowego b\u0119d\u0105 wykorzystane w projekcie?\n  - Jak zdefiniowane b\u0119dzie wej\u015bcie i wyj\u015bcie modelu?\n  - Jakie miary b\u0119d\u0105 zastosowane do zmierzenia skuteczno\u015bci modelu?\n  - Jaki stos technologiczny b\u0119dzie u\u017cyty do wykonania projektu?\n\nPrezentacja odbywa si\u0119 stacjonarnie. Jest dost\u0119p do rzutnika, wi\u0119c mo\u017cna przygotowa\u0107 pomocnicze slajdy. Prezentacja powinna zaj\u0105\u0107 nie wi\u0119cej ni\u017c 15 minut (najlepiej 10 minut prezentacji i 5 minut dyskusji)."
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1609.02907*.\n8. Xu, K., Hu, W., Leskovec, J., & Jegelka, S. (2018). [How powerful are graph neural networks?](https://arxiv.org/pdf/1810.00826.pdf). *arXiv preprint https://arxiv.org/abs/1810.00826*.\n9. Veli\u010dkovi\u0107, P., Cucurull, G., Casanova, A., Romero, A., Lio, P., & Bengio, Y. (2017). [Graph attention networks](https://arxiv.org/pdf/1710.10903.pdf). *arXiv preprint https://arxiv.org/abs/1710.10903*.\n10. Hamilton, W. L., Ying, R., & Leskovec, J. (2017, December). [Inductive representation learning on large graphs](https://proceedings.neurips.cc/paper/2017/file/5dd9db5e033da9c6fb5ba83c7a7ebea9-Paper.pdf). In *Proceedings of the 31st International Conference on Neural Information Processing Systems* (pp. 1025-1035).\n11. Pope, P. E., Kolouri, S., Rostami, M., Martin, C. E., & Hoffmann, H. (2019). [Explainability methods for graph convolutional neural networks](https://openaccess.thecvf.com/content_CVPR_2019/papers/Pope_Explainability_Methods_for_Graph_Convolutional_Neural_Networks_CVPR_2019_paper.pdf). In *Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition* (pp. 10772-10781).\n12. Popova, M., Isayev, O., & Tropsha, A. (2018). [Deep reinforcement learning for de novo drug design](https://www.science.org/doi/pdf/10.1126/sciadv.aap7885). *Science advances*.\n13. Jin, W., Barzilay, R., & Jaakkola, T. (2018, July). [Junction tree variational autoencoder for molecular graph generation](http://proceedings.mlr.press/v80/jin18a/jin18a.pdf). In *International conference on machine learning* (pp. 2323-2332). PMLR.\n14. G\u00f3mez-Bombarelli, R., Wei, J. N., Duvenaud, D., Hern\u00e1ndez-Lobato, J. M., S\u00e1nchez-Lengeling, B., Sheberla, D., ... & Aspuru-Guzik, A. (2018). [Automatic chemical design using a data-driven continuous representation of molecules](https://pubs.acs.org/doi/pdf/10.1021/acscentsci.7b00572). *ACS central science, 4*(2), 268-276.\n15. Maziarka, \u0141., Danel, T., Mucha, S., Rataj, K., Tabor, J., & Jastrz\u0119bski, S. (2020). [Molecule attention transformer](https://arxiv.org/pdf/2002.08264.pdf). *arXiv preprint https://arxiv.org/abs/2002.08264*.\n16. Jim\u00e9nez, J., Doerr, S., Mart\u00ednez-Rosell, G., Rose, A. S., & De Fabritiis, G. (2017). [DeepSite: protein-binding site predictor using 3D-convolutional neural networks](https://academic.oup.com/bioinformatics/article/33/19/3036/3859178). *Bioinformatics, 33*(19), 3036-3042.\n\n# \ud83c\uddf5\ud83c\uddf1 Uczenie maszynowe w projektowaniu lek\u00f3w (UMwPL) 2021/2022\n\nRepozytorium zawiera materia\u0142y z kursu \"Uczenie maszynowe w projektowaniu lek\u00f3w\". W folderze `labs` znajduj\u0105 si\u0119 materia\u0142y z \u0107wicze\u0144, kt\u00f3re pokrywaj\u0105 nast\u0119puj\u0105ce tematy:\n\n1. Powt\u00f3rka Pythona i podstaw uczenia maszynowego. Reprezentacja SMILES i fingerprinty zwi\u0105zk\u00f3w chemicznych. Wprowadzenie do pakietu RDKit.\n2. Korzystanie z publicznie dost\u0119pnych zbior\u00f3w danych moleku\u0142. Efektywne przeszukiwanie otwartych baz danych. Tworzenie w\u0142asnych zbior\u00f3w danych.\n3. Chemia bia\u0142ek. Popularne formaty danych. Dokowanie molekularne.\n4. Teoria graf\u00f3w molekularnych. Grafowe sieci neuronowe, Interpretowalno\u015b\u0107.\n5. Przegl\u0105d modeli generatywnych w odkrywaniu lek\u00f3w.\n6. Znajdowanie nowych cel\u00f3w biologicznych. Uczenie g\u0142\u0119bokie dla bia\u0142ek.\n\n## Instalacja \u015arodowiska\n\nZaj\u0119cia b\u0119d\u0105 prowadzone z u\u017cyciem j\u0119zyka Pythonie. Instrukcja instalacji \u015brodowiska zawieraj\u0105cego potrzebne paczki:\n\n1. Instalacja [minicondy](https://docs.conda.io/en/latest/miniconda.html) zgodnie z instrukcj\u0105 dla wybranego systemu.\n2. Pobranie tego repozytorium: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Instalacja \u015brodowiska z pliku: `conda env create -f environment.yml`\n\nW pliku `environment-versions.yml` znajduj\u0105 si\u0119 dok\u0142adne wersje poszczeg\u00f3lnych paczek, ale lista mo\u017ce nie by\u0107 kompatybilna z wszystkimi systemami.\n\n_Wa\u017cne! Je\u017celi chcia\u0142by\u015b u\u017cy\u0107 karty graficznej do treningu sieci neuronowych, dodaj `cudatoolkit` z odpowiedni\u0105 wersj\u0105 (np. `cudatoolkit=10.2`) do pliku `environment.yml`._\n\n_Je\u015bli planujesz u\u017cywa\u0107 naszego klastra obliczeniowego, spytaj nas o skonfigurowane \u015brodowisko. Na serwerze mamy obraz singularity z zainstalownymi wszystkimi potrzebnymi paczkami._\n\n## Projekt Zaliczeniowy\n\nOcena z \u0107wicze\u0144 wystawiana jest na podstawie projektu. Warunkiem koniecznym uzyskania oceny pozytywnej jest uczestnictwo na zaj\u0119ciach (dopuszczalna 1 nieobecno\u015b\u0107).\n\nProjekty mo\u017cna b\u0119dzie wykonywa\u0107 w grupach 1-3 os\u00f3b. W razie potrzeby mo\u017cliwe jest otrzymanie dost\u0119pu do klastra obliczeniowego z GPU po z\u0142o\u017ceniu pro\u015bby do administratora. Projekt zaliczeniowy powinien posiada\u0107:\n\n- Publiczne repozytorium Github (lub Gitlab/Bitbucket) z licencj\u0105 umo\u017cliwiaj\u0105c\u0105 dzielenie si\u0119 kodem i wynikami projektu na stronie kursu oraz wykorzystanie kodu w przysz\u0142ych edycjach kursu (np. MIT, GNU GPL, Apache 2.0 lub w\u0142asna).\n- Dokumentacj\u0119 projektu w postaci pliku README, kt\u00f3ry zawiera mi\u0119dzy innymi: kr\u00f3tki opis projektu, instrukcj\u0119 uruchomienia kodu wraz z list\u0105 zale\u017cno\u015bci, podsumowanie wynik\u00f3w. Mo\u017cliwe s\u0105 r\u00f3wnie\u017c odniesienia do wygenerowanych plik\u00f3w PDF i iPython notebook\u00f3w z uzupe\u0142nieniem dokumentacji, pod warunkiem \u017ce znajduj\u0105 si\u0119 r\u00f3wnie\u017c w repozytorium.\n- Wszystkie dane lub odniesienia do \u017ar\u00f3de\u0142 danych.\n- Kod umo\u017cliwiaj\u0105cy odtworzenie kluczowych wynik\u00f3w projektu.\n\n*Uwaga:* projekty, kt\u00f3re b\u0119d\u0105 kontynuowane po sko\u0144czeniu semestru, np. w celu napisania publikacji, mog\u0105 mie\u0107 prywatne repozytorium udost\u0119pnione prowadz\u0105cym na tych samych zasadach.\n\n### Ocenianie\n\n6 i 13 XII odb\u0119d\u0105 si\u0119 prezentacje projekt\u00f3w. Oceniane b\u0119dzie zapoznanie si\u0119 z tematem, zrozumienie danych i plany na pozosta\u0142\u0105 cz\u0119\u015b\u0107 semestru. Prezentacja b\u0119dzie stanowi\u0107 15% oceny ko\u0144cowej. Dla u\u0142atwienia przygotowania prezentacji, poni\u017cej znajduj\u0105 si\u0119 szczeg\u00f3\u0142owe kryteria. Podane s\u0105 te\u017c pytania, kt\u00f3re mog\u0105 pom\u00f3c w przygotowaniu.\n\n- Zrozumienie tematu (5%)\n  - Co jest celem projektu?\n  - Jakie jest znaczenie biologiczne/chemiczne projektu?\n  - Co jest potencjaln\u0105 trudno\u015bci\u0105 w wykonaniu projektu?\n  - Jaki jest spodziewany efekt projektu?\n- Zrozumienie danych (5%)\n  - jakie dane wej\u015bciowe b\u0119d\u0105 u\u017cyte w projekcie?\n  - sk\u0105d mo\u017cna pozyska\u0107 dane do projektu?\n  - jaka jest struktura danych u\u017cytych w projekcie (np. fingerprinty albo grafy molekularne)?\n  - wst\u0119pnie jakie problemy w dost\u0119pnych danych s\u0105 widoczne?\n  - jakie dodatkowe informacje (metadane) s\u0105 dost\u0119pne?\n- Planowana implementacja (5%)\n  - Czy ten temat by\u0142 ju\u017c poruszany w literaturze? Je\u015bli tak, to jakie narz\u0119dzia s\u0105 dost\u0119pne?\n  - Jakie metody uczenia maszynowego b\u0119d\u0105 wykorzystane w projekcie?\n  - Jak zdefiniowane b\u0119dzie wej\u015bcie i wyj\u015bcie modelu?\n  - Jakie miary b\u0119d\u0105 zastosowane do zmierzenia skuteczno\u015bci modelu?\n  - Jaki stos technologiczny b\u0119dzie u\u017cyty do wykonania projektu?\n\nPrezentacja odbywa si\u0119 stacjonarnie. Jest dost\u0119p do rzutnika, wi\u0119c mo\u017cna przygotowa\u0107 pomocnicze slajdy. Prezentacja powinna zaj\u0105\u0107 nie wi\u0119cej ni\u017c 15 minut (najlepiej 10 minut prezentacji i 5 minut dyskusji)."
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2002.08264*.\n16. Jim\u00e9nez, J., Doerr, S., Mart\u00ednez-Rosell, G., Rose, A. S., & De Fabritiis, G. (2017). [DeepSite: protein-binding site predictor using 3D-convolutional neural networks](https://academic.oup.com/bioinformatics/article/33/19/3036/3859178). *Bioinformatics, 33*(19), 3036-3042.\n\n# \ud83c\uddf5\ud83c\uddf1 Uczenie maszynowe w projektowaniu lek\u00f3w (UMwPL) 2021/2022\n\nRepozytorium zawiera materia\u0142y z kursu \"Uczenie maszynowe w projektowaniu lek\u00f3w\". W folderze `labs` znajduj\u0105 si\u0119 materia\u0142y z \u0107wicze\u0144, kt\u00f3re pokrywaj\u0105 nast\u0119puj\u0105ce tematy:\n\n1. Powt\u00f3rka Pythona i podstaw uczenia maszynowego. Reprezentacja SMILES i fingerprinty zwi\u0105zk\u00f3w chemicznych. Wprowadzenie do pakietu RDKit.\n2. Korzystanie z publicznie dost\u0119pnych zbior\u00f3w danych moleku\u0142. Efektywne przeszukiwanie otwartych baz danych. Tworzenie w\u0142asnych zbior\u00f3w danych.\n3. Chemia bia\u0142ek. Popularne formaty danych. Dokowanie molekularne.\n4. Teoria graf\u00f3w molekularnych. Grafowe sieci neuronowe, Interpretowalno\u015b\u0107.\n5. Przegl\u0105d modeli generatywnych w odkrywaniu lek\u00f3w.\n6. Znajdowanie nowych cel\u00f3w biologicznych. Uczenie g\u0142\u0119bokie dla bia\u0142ek.\n\n## Instalacja \u015arodowiska\n\nZaj\u0119cia b\u0119d\u0105 prowadzone z u\u017cyciem j\u0119zyka Pythonie. Instrukcja instalacji \u015brodowiska zawieraj\u0105cego potrzebne paczki:\n\n1. Instalacja [minicondy](https://docs.conda.io/en/latest/miniconda.html) zgodnie z instrukcj\u0105 dla wybranego systemu.\n2. Pobranie tego repozytorium: `git clone https://github.com/gmum/umwpl2021.git`.\n3. Instalacja \u015brodowiska z pliku: `conda env create -f environment.yml`\n\nW pliku `environment-versions.yml` znajduj\u0105 si\u0119 dok\u0142adne wersje poszczeg\u00f3lnych paczek, ale lista mo\u017ce nie by\u0107 kompatybilna z wszystkimi systemami.\n\n_Wa\u017cne! Je\u017celi chcia\u0142by\u015b u\u017cy\u0107 karty graficznej do treningu sieci neuronowych, dodaj `cudatoolkit` z odpowiedni\u0105 wersj\u0105 (np. `cudatoolkit=10.2`) do pliku `environment.yml`._\n\n_Je\u015bli planujesz u\u017cywa\u0107 naszego klastra obliczeniowego, spytaj nas o skonfigurowane \u015brodowisko. Na serwerze mamy obraz singularity z zainstalownymi wszystkimi potrzebnymi paczkami._\n\n## Projekt Zaliczeniowy\n\nOcena z \u0107wicze\u0144 wystawiana jest na podstawie projektu. Warunkiem koniecznym uzyskania oceny pozytywnej jest uczestnictwo na zaj\u0119ciach (dopuszczalna 1 nieobecno\u015b\u0107).\n\nProjekty mo\u017cna b\u0119dzie wykonywa\u0107 w grupach 1-3 os\u00f3b. W razie potrzeby mo\u017cliwe jest otrzymanie dost\u0119pu do klastra obliczeniowego z GPU po z\u0142o\u017ceniu pro\u015bby do administratora. Projekt zaliczeniowy powinien posiada\u0107:\n\n- Publiczne repozytorium Github (lub Gitlab/Bitbucket) z licencj\u0105 umo\u017cliwiaj\u0105c\u0105 dzielenie si\u0119 kodem i wynikami projektu na stronie kursu oraz wykorzystanie kodu w przysz\u0142ych edycjach kursu (np. MIT, GNU GPL, Apache 2.0 lub w\u0142asna).\n- Dokumentacj\u0119 projektu w postaci pliku README, kt\u00f3ry zawiera mi\u0119dzy innymi: kr\u00f3tki opis projektu, instrukcj\u0119 uruchomienia kodu wraz z list\u0105 zale\u017cno\u015bci, podsumowanie wynik\u00f3w. Mo\u017cliwe s\u0105 r\u00f3wnie\u017c odniesienia do wygenerowanych plik\u00f3w PDF i iPython notebook\u00f3w z uzupe\u0142nieniem dokumentacji, pod warunkiem \u017ce znajduj\u0105 si\u0119 r\u00f3wnie\u017c w repozytorium.\n- Wszystkie dane lub odniesienia do \u017ar\u00f3de\u0142 danych.\n- Kod umo\u017cliwiaj\u0105cy odtworzenie kluczowych wynik\u00f3w projektu.\n\n*Uwaga:* projekty, kt\u00f3re b\u0119d\u0105 kontynuowane po sko\u0144czeniu semestru, np. w celu napisania publikacji, mog\u0105 mie\u0107 prywatne repozytorium udost\u0119pnione prowadz\u0105cym na tych samych zasadach.\n\n### Ocenianie\n\n6 i 13 XII odb\u0119d\u0105 si\u0119 prezentacje projekt\u00f3w. Oceniane b\u0119dzie zapoznanie si\u0119 z tematem, zrozumienie danych i plany na pozosta\u0142\u0105 cz\u0119\u015b\u0107 semestru. Prezentacja b\u0119dzie stanowi\u0107 15% oceny ko\u0144cowej. Dla u\u0142atwienia przygotowania prezentacji, poni\u017cej znajduj\u0105 si\u0119 szczeg\u00f3\u0142owe kryteria. Podane s\u0105 te\u017c pytania, kt\u00f3re mog\u0105 pom\u00f3c w przygotowaniu.\n\n- Zrozumienie tematu (5%)\n  - Co jest celem projektu?\n  - Jakie jest znaczenie biologiczne/chemiczne projektu?\n  - Co jest potencjaln\u0105 trudno\u015bci\u0105 w wykonaniu projektu?\n  - Jaki jest spodziewany efekt projektu?\n- Zrozumienie danych (5%)\n  - jakie dane wej\u015bciowe b\u0119d\u0105 u\u017cyte w projekcie?\n  - sk\u0105d mo\u017cna pozyska\u0107 dane do projektu?\n  - jaka jest struktura danych u\u017cytych w projekcie (np. fingerprinty albo grafy molekularne)?\n  - wst\u0119pnie jakie problemy w dost\u0119pnych danych s\u0105 widoczne?\n  - jakie dodatkowe informacje (metadane) s\u0105 dost\u0119pne?\n- Planowana implementacja (5%)\n  - Czy ten temat by\u0142 ju\u017c poruszany w literaturze? Je\u015bli tak, to jakie narz\u0119dzia s\u0105 dost\u0119pne?\n  - Jakie metody uczenia maszynowego b\u0119d\u0105 wykorzystane w projekcie?\n  - Jak zdefiniowane b\u0119dzie wej\u015bcie i wyj\u015bcie modelu?\n  - Jakie miary b\u0119d\u0105 zastosowane do zmierzenia skuteczno\u015bci modelu?\n  - Jaki stos technologiczny b\u0119dzie u\u017cyty do wykonania projektu?\n\nPrezentacja odbywa si\u0119 stacjonarnie. Jest dost\u0119p do rzutnika, wi\u0119c mo\u017cna przygotowa\u0107 pomocnicze slajdy. Prezentacja powinna zaj\u0105\u0107 nie wi\u0119cej ni\u017c 15 minut (najlepiej 10 minut prezentacji i 5 minut dyskusji)."
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/1609.02907.pdf?fbclid=IwAR0BgJeoKHIAvPuSE9fJ0_IQOEu5l75yxyNo7PUC08RTOFlm_IIo5YmcnQM"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/1710.10903.pdf"
      },
      "source": "https://raw.githubusercontent.com/gmum/umwpl2021/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:48:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ]
}