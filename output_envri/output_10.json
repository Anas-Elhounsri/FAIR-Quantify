{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use the package in relation to a citation, please cite: https://doi.org/10.5281/zenodo.5155295.<br>\nPlease also cite the underlaying package (scikit-optimize).\n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhttps://github.com/novonordisk-research/ProcessOptimizer/issues/new/choose.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/novonordisk-research/ProcessOptimizer"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "ProcessOptimizer is an open-source project and we welcome any type of well-meant contributions. Please look at our code of conduct and license to get further aquainted with us.\n\nContributions in the form of issue-reports are particularly welcome. If it doesn't work, we want to know about it. Please consider the following when posting a new issue:\n- see if any previous issues have reported the same or similar behavior\n- state clearly whether your are reporting a bug, suggesting a feature or asking a question. Perhaps even in the title of the issue\n- when reporting a bug, please give as much information as you can. i.e. your software-setup, the expected result of your code and the actual result of your code (and of course the code itself)\n- when suggesting a feature, please describe a use-case in which the requested feature would solve an issue\n\nContributions of code in the form of pull requests, are VERY welcome. We kindly ask to follow these guidelines:\n- First make a new issue, from which the changes in the code are described/justified. Expect this issue to be a starting point for a friendly discussion\n- open a pull request towards 'develop' as early as possible and mark it as a draft or work in progress (WiP)\n- link the new PR to the issue\n- (one pull request for each problem, please do not pool solutions into swarmed PR's)\n- write tests for any new functions/classes (for plotting functions, please manually ensure that they are working under any expected conditions, e.g. with categorical dimensions)\n- ensure full passing of old and new tests - and somewhat strict adherence to flake8 analysis\n- when the code is ready to be reviewed remove the draft/WiP mark and assign a reviewer\n- wait for a succesfull review(!)\n- if working from a branch in the repo, please delete the branch after merging to 'develop'\n- consider making an example to showcase any new functionalities\n\nAnd most importantly, remember to keep a friendly and welcoming tone\n\n(Much of our old code is based on the work in the ScikitOptimize project, please consider paying back by also fixing similar issues in their repo)\n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-11T13:27:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T07:47:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool to optimize real world problems"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9612608250832186,
      "result": {
        "original_header": "How does it work?",
        "type": "Text_excerpt",
        "value": "Suppose you are given the task of minimizing the function on the domain only using empirical observations and without any analytical function. <br/>\nWorking with the ProcessOptimizer package you simply define the `Space` and create an `Optimizer` object.<br/>\nThe `Space` object takes a list of dimensions which can either be `Real`, `Integer` or `Categorical`. `Real` dimensions are defined by the maximum and minimum values.<br/>\nThe `Optimizer` object initialized below uses GP (Gaussian Process). This means that after each step a Gaussian Process is fitted to the observations, which is used as a posterior distribution. Combined with an acquisition function the next point that should be explored can be determined. Notice that this process only takes place once n_initial_points of initial data has been aqcuired. In this case `LHS = True` (latin hypercube sampling) has been used as the initial sampling strategy for the first 6 points.\n```python\nimport ProcessOptimizer as po\n\nSPACE = po.Space([Real(0,5), Real(0,5)])   \n\nopt = po.Optimizer(SPACE, base_estimator = \"GP\", n_initial_points = 6, lhs = True)\n```\nThe optimizer can now be used in steps by calling the `.ask()` function, evaluating the function at the given point and use `.tell()` the `Optimizer` the result. In practise it would work like this. First ask the optimizer for the next point to perform an experiment:\nBASH3*\nNow go to the laboratory or wherever the experiment can be performed and use the values above. In this example the experiment can simply be performed by evaluating the Booth function using the values above:\nBASH4*\nWhen a result has been obtained the user needs to tell the output to the `Optimizer`. This is done using the `.tell()` function:\nBASH5*\nThe `res` object returned by tell contains a model of the Gaussian Process predicted mean. This model can be plotted using `plot_objective(res)`. Below is a gif of how the Gaussian Process predicted mean evolves after the first 6 initial points and until 20 points have been sampled in total. The orange dots visualise each evaluation of the function and the red dot shows the position of the expected minimum. In the diagonal of the figure dependence plots are shown. These show how the function depend on each input variable with other input variables kept constant at the expected minimum. \n \nNotice that this is an optimization tool and not a modelling tool. This means that the optimizer finds an approximate solution for the global minimum quickly however it does not guarantee that the Gaussian Process predicted mean is an accurate model on the entire domain.<br/> \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9509976591052576,
      "result": {
        "original_header": "Contributions",
        "type": "Text_excerpt",
        "value": "- Provide minimal amount of code to reproduce the error\n- State versions of ProcesOptimizer, sklearn, numpy, ...\n- Describe the expected behavior of the code <br> \nIf you would like to contribute by making anything from documentation to feature-additions, THANK YOU. Please open a pull request \nmarked as *WIP* as early as possible and describe the issue you seek to solve and outline your planned solution. <br>\nPull requests to the develop branch will be automatically tested using pytest and flake8. We'll be happy to help solving potential\nissues that could arise here.\n \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8900865033240215,
      "result": {
        "original_header": "Related work",
        "type": "Text_excerpt",
        "value": "We are currently building a GUI to offer the power of Bayesian Process Optimization to non-coders. Stay tuned. (Sneak-peak at https://www.browniebee.dk/uk/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8997853319263596,
      "result": {
        "original_header": "PyPi",
        "type": "Text_excerpt",
        "value": "If you have not packaged before check out https://packaging.python.org/tutorials/packaging-projects/\nTo upload a new version to PyPi do the following in the root folder of the project: \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/novonordisk-research/ProcessOptimizer/wiki"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/novonordisk-research/ProcessOptimizer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/BraninHooAsMultiobjectiveAndPlottingHints.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/BraninHooAsMultiobjectiveAndPlottingHints.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Latin%20hypercube%20sampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Latin%20hypercube%20sampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Model%20systems.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Model%20systems.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/constraints.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/constraints.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/color_pH.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/color_pH.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Exploration%20vs%20exploitation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Exploration%20vs%20exploitation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Length%20scale%20bounds.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/Length%20scale%20bounds.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/ask-and-tell.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/ask-and-tell.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/02_batch_vs_single.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/02_batch_vs_single.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/04_explore_vs_exploit.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/04_explore_vs_exploit.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/05_narrow_wells.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/05_narrow_wells.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/03_noise.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/03_noise.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/06_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/06_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/01_start_here.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/walkthrough/01_start_here.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/design_qualifications/Model_systems_color_pH.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/design_qualifications/Model_systems_color_pH.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/design_qualifications/Constrained_experimentation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/design_qualifications/Constrained_experimentation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/Multiobjective%20with%20Pareto%20Front-%20Fonseca%E2%80%93Fleming%20function.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/Multiobjective%20with%20Pareto%20Front-%20Fonseca%E2%80%93Fleming%20function.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/ProccesOptimize_examples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/ProccesOptimize_examples.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/visualizing-results.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/visualizing-results.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/ProccesOptimize_examples_categorical_values.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/ProccesOptimize_examples_categorical_values.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/store-and-load-results.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/store-and-load-results.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/7Dimensional_optimization_and_plotting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/7Dimensional_optimization_and_plotting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/bayesian-optimization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/old_examples_will_be_deleted/bayesian-optimization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/features/sampling_control_parameters.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/features/sampling_control_parameters.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/features/control_parameters.ipynb"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/examples/features/control_parameters.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "novonordisk-research/ProcessOptimizer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://static.pepy.tech/personalized-badge/processoptimizer?period=total&units=international_system&left_color=brightgreen&right_color=orange&left_text=Downloads"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop//media/Booth_function.png?raw=True"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop//media/BO_GIF.gif?raw=True?width="
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop//media/Convergence_plot.png?raw=True"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "ProcessOptimizer can be installed using `pip install ProcessOptimizer`\nThe repository and examples can be found at https://github.com/novonordisk-research/ProcessOptimizer\nProcessOptimizer can also be installed by running `pip install -e .` in top directory of the cloned repository.\n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9993919484340906,
      "result": {
        "original_header": "ProcessOptimizer",
        "type": "Text_excerpt",
        "value": "ProcessOptimizer is a fork of scikit-optimize. ProcessOptimizer will fundamentally function like scikit-optimize, \nyet developments are focussed on bringing improvements to help optimizing real world processes, like chemistry or baking.\nFor examples on use, checkout https://github.com/novonordisk-research/ProcessOptimizer/tree/develop/examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9760541099921907,
      "result": {
        "original_header": "Contributions",
        "type": "Text_excerpt",
        "value": "Feel free to play around with algorithm. Should you encounter errors while using ProcessOptimizer, please report them\nat https://github.com/novonordisk-research/ProcessOptimizer/issues. <br>\nTo help solve the issues, please: <br> \nIf you would like to contribute by making anything from documentation to feature-additions, THANK YOU. Please open a pull request \nmarked as *WIP* as early as possible and describe the issue you seek to solve and outline your planned solution. <br>\nPull requests to the develop branch will be automatically tested using pytest and flake8. We'll be happy to help solving potential\nissues that could arise here.\n \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999964337522863,
      "result": {
        "original_header": "PyPi",
        "type": "Text_excerpt",
        "value": "If you have not packaged before check out https://packaging.python.org/tutorials/packaging-projects/\nTo upload a new version to PyPi do the following in the root folder of the project: \n- In terminal run the command \"pytest\" and make sure there are no errors\n- Change version number in setup.py\n- Change version number in ProcessOptimizer/\\_\\_init\\_\\_.py\n- Remember to `pip install twine` if running in a new virtual env. (You might also have to `pip install wheel`)\n- Run `python setup.py sdist bdist_wheel`\n- Run `python -m twine upload dist/*` (make sure that /dist only contains relevant version)\n- (Remember that pypi has changed the way it handles credentials, you might have to state username: [dunderscore]token[dunderscore] and then use your token value (incl pypi-prefix) as password. As stated here https://pypi.org/help/#apitoken\n \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999998445617,
      "result": {
        "type": "Text_excerpt",
        "value": "_____                              ____        _   _           _              \n |  __ \\                            / __ \\      | | (_)         (_)             \n | |__) | __ ___   ___ ___  ___ ___| |  | |_ __ | |_ _ _ __ ___  _ _______ _ __ \n |  ___/ '__/ _ \\ / __/ _ \\/ __/ __| |  | | '_ \\| __| | '_ ` _ \\| |_  / _ \\ '__|\n | |   | | | (_) | (_|  __/\\__ \\__ \\ |__| | |_) | |_| | | | | | | |/ /  __/ |   \n |_|   |_|  \\___/ \\___\\___||___/___/\\____/| .__/ \\__|_|_| |_| |_|_/___\\___|_|   \n                                          | |                                   \n                                          |_|                                    \n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayesianoptimization, optimization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "New BSD License\n\nCopyright (c) 2023 - ProcessOptimizer developers.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  a. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n     \n  b. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n     \n  c. Neither the name of the scikit-optimize developers nor the names of\n     its contributors may be used to endorse or promote products\n     derived from this software without specific prior written\n     permission. \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ProcessOptimizer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "novonordisk-research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1126628,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 641056,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/novonordisk-research/ProcessOptimizer/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2024-09-13T11:02:08Z",
        "date_published": "2024-09-13T11:19:24Z",
        "description": "## What's Changed\r\n* Setting noise size on ZeroNoise now raises error by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/264\r\n* Moveexamplefiles by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/261\r\n* Fix import of ModelSystems by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/265\r\n* Space example by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/253\r\n* Radius decreased in plot and more points in pareto front by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/274\r\n\r\n\r\n**Full Changelog**: https://github.com/novonordisk-research/ProcessOptimizer/compare/v0.9.5...v1.0.0",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 174936701,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/174936701",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/174936701",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2024-05-06T07:52:20Z",
        "date_published": "2024-05-06T08:17:33Z",
        "description": "## What's Changed\r\n* Opt estimate by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/224\r\n* Dependabot only alerts about major releases in Python by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/243\r\n* Examples reworked by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/248\r\n* Updates jupyter notebooks in the design qualifications folder by @dk-teknologisk-mon in https://github.com/novonordisk-research/ProcessOptimizer/pull/172\r\n* Fixes interaction between constrained dimensions and categorical factors with 2+ levels by @dk-teknologisk-mon in https://github.com/novonordisk-research/ProcessOptimizer/pull/257\r\n* Fix Bokeh deprecations: Fix #244 bokeh arguments by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/252\r\n* Updates for 0.9.5 by @dk-teknologisk-mon in https://github.com/novonordisk-research/ProcessOptimizer/pull/258\r\n* CI: Only test BB in python 3.12 by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/259\r\n* Version bump 0.9.5 by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/260\r\n\r\n## New Contributors\r\n* @dependabot made their first contribution in https://github.com/novonordisk-research/ProcessOptimizer/pull/226\r\n\r\n**Full Changelog**: https://github.com/novonordisk-research/ProcessOptimizer/compare/v0.9.4...v0.9.5",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.9.5",
        "name": "v.0.9.5",
        "release_id": 154360641,
        "tag": "v0.9.5",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/154360641",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/154360641",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2024-02-28T08:41:42Z",
        "date_published": "2024-02-28T08:44:42Z",
        "description": "## What's Changed\r\n* New examples srfu by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/148\r\n* WIP: Explore vs exploit by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/153\r\n* Uncertainty by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/203\r\n* WIP: Batch vs single by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/150\r\n* New jupyter notebook examples by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/147\r\n* Dependabot added by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/222\r\n* Matrix to ndarray by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/223\r\n* Fix #237Add warning that constraints are not implemented for multiobjective optimization (also \"fix\" stbr and constraints) by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/239\r\n\r\n\r\n**Full Changelog**: https://github.com/novonordisk-research/ProcessOptimizer/compare/v0.9.3...v0.9.4",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.9.4",
        "name": "v0.9.4",
        "release_id": 143948136,
        "tag": "v0.9.4",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/143948136",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/143948136",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2023-10-13T13:18:18Z",
        "date_published": "2023-10-13T13:24:18Z",
        "description": "## What's Changed\r\n* Bugfix of expected_minimum with constraints by @dk-teknologisk-mon in https://github.com/novonordisk-research/ProcessOptimizer/pull/211\r\n* Versions_updated_in_bb_dependence by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/204\r\n* fix: Making sure data is installed by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/213\r\n* Fix install by @SRFU-NN in https://github.com/novonordisk-research/ProcessOptimizer/pull/214\r\n\r\n\r\n**Full Changelog**: https://github.com/novonordisk-research/ProcessOptimizer/compare/v0.9.1...v0.9.3",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.9.3",
        "name": "v0.9.3",
        "release_id": 124982102,
        "tag": "v0.9.3",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/124982102",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/124982102",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SRFU-NN",
          "type": "User"
        },
        "date_created": "2023-10-11T13:37:42Z",
        "date_published": "2023-10-11T13:41:49Z",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.9.1",
        "name": "v0.9.1",
        "release_id": 124606449,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/124606449",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/124606449",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2023-06-22T06:48:23Z",
        "date_published": "2023-06-22T06:59:36Z",
        "description": "## What's Changed\r\n* Fix warnings 20230620 by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/185\r\n* Fix#180 by @sqbl in https://github.com/novonordisk-research/ProcessOptimizer/pull/184. This allows the user to add/remove modelled noise before predicting/plotting/sampling from the optimizer instance.\r\n* Expand the number of benchmark functions and modelsystems by @dk-teknologisk-mon in https://github.com/novonordisk-research/ProcessOptimizer/pull/171\r\n\r\n\r\n**Full Changelog**: https://github.com/novonordisk-research/ProcessOptimizer/compare/v0.8.0...v0.8.1",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.8.1",
        "name": "Certain about uncertainties",
        "release_id": 109494931,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/109494931",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/109494931",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SRFU-NN",
          "type": "User"
        },
        "date_created": "2023-04-13T12:34:37Z",
        "date_published": "2023-04-13T12:37:12Z",
        "description": "Changed defaults to:\r\n* Show uncertainty in 1D plots\r\n* Use expected improvement as acquisition function\r\n\r\nFurthermore, the following developments:\r\n* Noise module in ModelSystem\r\n* SumEquals constraint",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.8.0",
        "name": "Better defaults, SumEquals constraint",
        "release_id": 99385743,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/99385743",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/99385743",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2023-02-14T09:44:01Z",
        "date_published": "2023-02-14T10:04:04Z",
        "description": "Various bug fixes as well as changes and addition to plotting functions. See changelog.",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.7.8",
        "name": "Bugs be gone",
        "release_id": 92328747,
        "tag": "v0.7.8",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.7.8",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/92328747",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/92328747",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.7.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2022-11-03T13:59:34Z",
        "date_published": "2022-11-03T14:05:31Z",
        "description": "Combined update with several minor fixes and additions. Please see changelog on gitHUB for details.",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.7.6",
        "name": "Interactive Pareto",
        "release_id": 81954559,
        "tag": "v0.7.6",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.7.6",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/81954559",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/81954559",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.7.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2021-09-30T08:37:47Z",
        "date_published": "2021-09-30T08:46:03Z",
        "description": "Quiet many small QoL improvements in this one.\r\nMuch work is centered on helping guide the user in answering: \"whether, I'm done experimenting?\"\r\n",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.7.2",
        "name": "Credible intervals",
        "release_id": 50531647,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/50531647",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/50531647",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2021-08-10T07:20:36Z",
        "date_published": "2021-08-10T07:38:40Z",
        "description": "Added Interactive plotting features for Pareto optimization\r\nAdded Kriging Believer for Batch-mode optimization\r\nFew bug fixes and linting",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.7.1",
        "name": "Interactive increment",
        "release_id": 47584503,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/47584503",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/47584503",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2021-08-03T09:42:51Z",
        "date_published": "2021-08-03T09:43:13Z",
        "description": "- A number of bugfixes\r\n- addition of new plots\r\n- restructure arguments for batch optimization\r\n- LHS defaults to True \r\n- and \r\n- LOADS of linting",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.7.0",
        "name": "HyberCool defaults",
        "release_id": 47211868,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/47211868",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/47211868",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sqbl",
          "type": "User"
        },
        "date_created": "2021-05-25T10:42:39Z",
        "date_published": "2021-05-25T10:49:04Z",
        "description": "In this release we are again having normalize_y == True as standard behavior, this is in way with recent SKLEARN updates.",
        "html_url": "https://github.com/novonordisk-research/ProcessOptimizer/releases/tag/v0.6.3",
        "name": "Back to Normal",
        "release_id": 43517054,
        "tag": "v0.6.3",
        "tarball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/tarball/v0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/43517054",
        "value": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/releases/43517054",
        "zipball_url": "https://api.github.com/repos/novonordisk-research/ProcessOptimizer/zipball/v0.6.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:53:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 68
      },
      "technique": "GitHub_API"
    }
  ]
}